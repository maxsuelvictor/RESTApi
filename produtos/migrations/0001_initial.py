# Generated by Django 5.1.7 on 2025-03-17 23:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudTbMAud',
            fields=[
                ('dta_servidor', models.DateField()),
                ('hor_servidor', models.TimeField()),
                ('arq_auditoria', models.BinaryField()),
                ('id_usuario', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('programa', models.CharField(blank=True, max_length=30, null=True)),
                ('id_aud', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'aud_tb_m_aud',
                'db_table_comment': 'Tabela de Auditoria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BckProducao060223Itens',
            fields=[
                ('id_item', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('cardapio', models.BooleanField()),
                ('descricao', models.CharField(max_length=100)),
                ('fantasia', models.CharField(blank=True, max_length=30, null=True)),
                ('referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('aplicacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_fornecedor', models.IntegerField()),
                ('id_grupo', models.CharField(max_length=11)),
                ('id_und_compra', models.CharField(blank=True, max_length=3, null=True)),
                ('id_und_venda', models.CharField(blank=True, max_length=3, null=True)),
                ('emb_compra', models.FloatField(blank=True, null=True)),
                ('emb_venda', models.FloatField(blank=True, null=True)),
                ('cod_barra', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('pes_liquido', models.FloatField(blank=True, null=True)),
                ('pes_bruto', models.FloatField(blank=True, null=True)),
                ('est_minimo', models.FloatField(blank=True, null=True)),
                ('loca_rua', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=4, null=True)),
                ('cubagem', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tam_largura', models.FloatField(blank=True, null=True)),
                ('tam_comprimento', models.FloatField(blank=True, null=True)),
                ('tam_espessura', models.FloatField(blank=True, null=True)),
                ('densidade', models.IntegerField(blank=True, null=True)),
                ('densidade_2', models.IntegerField(blank=True, null=True)),
                ('densidade_3', models.IntegerField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo\n0 - Normal\n1 - TAMPO  - Utilizado pela bordadeira\n2 - FAIXA  - Utilizado pela bordadeira \n3 - ESPUMA - Utilizado pelo bloco cilindrico  \n', null=True)),
                ('geracao_lote_interno', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nTodo produto tem que ter o seu lote_interno que Ú gerado pelo sistema, isso Ú devido a rastreabilidade.\nO produto pode ter o seu lote gerado a partir de:  \n\n0 - Nota fiscal de entrada, 1 - EspumaþÒo, 2 - Bordadeira, 3 - InspeþÒo de Itens \n, 4 - NÒo utiliza   ', null=True)),
                ('destino_reclamado', models.IntegerField(blank=True, db_comment='Campo utilizado somente no sistema de produþÒo.\nEste campo serß utilizado pela rotina de Atendimento das reclamaþ§es do cliente: PCP_FM_M_ACR.         \n0 - Nenhum\n1 - Flocagem\n2 - Descarte', null=True)),
                ('etiq_classificacao_pro', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nEste campo foi direcinado para a tabela PCP_TB_C_CLE (ID_CLE)', null=True)),
                ('etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('etiq_madeira', models.CharField(blank=True, max_length=200, null=True)),
                ('etiq_espuma1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_recomendacoes_1', models.CharField(blank=True, max_length=80, null=True)),
                ('etiq_recomendacoes_2', models.CharField(blank=True, max_length=80, null=True)),
                ('lote_fabric_obrigatorio', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela controle de inspeþÒo e recebimento de produto (EST_FM_M_NFE_S). \nIsso server para dizer se o campo lote do fabricante Ú obrigat¾rio.', null=True)),
                ('id_ncm', models.CharField(blank=True, max_length=10, null=True)),
                ('preco_avista', models.DecimalField(blank=True, db_comment='Descricao completa, campo utilizado no enBueld.', decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('etiq_modelo', models.CharField(blank=True, max_length=70, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_familia', models.IntegerField(blank=True, null=True)),
                ('des_completa', models.CharField(blank=True, max_length=250, null=True)),
                ('rt_pricipio_ativo', models.CharField(blank=True, max_length=400, null=True)),
                ('rt_composicao', models.CharField(blank=True, max_length=400, null=True)),
                ('ret_emb_capacidade', models.CharField(blank=True, max_length=20, null=True)),
                ('ret_emb_nao_lavavel', models.IntegerField(blank=True, db_comment='0 - Contaminada\n1 - NÒo-Contaminada', null=True)),
                ('ret_emb_lavaveis', models.IntegerField(blank=True, db_comment='0 - Plßstico\n1 - Metal\n2 - Vidro', null=True)),
                ('cod_onu', models.CharField(blank=True, max_length=20, null=True)),
                ('sgq_critica_laudo_fab', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de InspeþÒo de Itens (FAT_FM_M_IQM).', null=True)),
                ('tam_observacoes', models.CharField(blank=True, max_length=150, null=True)),
                ('etiq_id_cue', models.IntegerField(blank=True, db_comment='Refere-se a tabela PCP_TB_C_CUE.', null=True)),
                ('preco_avista_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_ult_reajuste', models.DateField(blank=True, null=True)),
                ('rt_registro', models.CharField(blank=True, max_length=25, null=True)),
                ('custo_servico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_grupo_prod', models.IntegerField(blank=True, null=True)),
                ('id_item_anterior', models.IntegerField(blank=True, null=True)),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('etiq_espuma4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('sgq_tamanho_ite_epp', models.FloatField(blank=True, db_comment='Campo utilizado pelo relat¾rio de Entrada de Produto Acabado', null=True)),
                ('tipo_servico', models.BooleanField(blank=True, null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('pneu_largura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_altura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_aro', models.CharField(blank=True, max_length=10, null=True)),
                ('id_marca', models.IntegerField(blank=True, null=True)),
                ('sgq_personalizado', models.BooleanField(blank=True, db_comment='produto utilizado pelo m¾dulo sgq.', null=True)),
                ('temp_etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_item_prod', models.IntegerField(blank=True, db_comment='c¾digo do item da produþÒo ', null=True)),
                ('etiq_tipo_produto', models.IntegerField(blank=True, db_comment='0 - COLCH├O DE ESPUMA\r\n1 - COLCH├O BOX CONJUGADO\r\n2 - COLCH├O AUXILIAR\r\n3 - COLCH├O MISTO\r\n', null=True)),
                ('tam_esp_espessura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_3', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_3', models.FloatField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='0 - NÒo especificado\r\n1 - Manual do Usußrio', null=True)),
                ('tam_esp_espessura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_2', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_2', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bck_producao_060223_itens',
                'db_table_comment': 'Cadastro de Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BckProducao180723Itens',
            fields=[
                ('id_item', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('cardapio', models.BooleanField()),
                ('descricao', models.CharField(max_length=100)),
                ('fantasia', models.CharField(blank=True, max_length=30, null=True)),
                ('referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('aplicacao', models.CharField(blank=True, max_length=100, null=True)),
                ('emb_compra', models.FloatField(blank=True, null=True)),
                ('emb_venda', models.FloatField(blank=True, null=True)),
                ('cod_barra', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('pes_liquido', models.FloatField(blank=True, null=True)),
                ('pes_bruto', models.FloatField(blank=True, null=True)),
                ('est_minimo', models.FloatField(blank=True, null=True)),
                ('loca_rua', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=4, null=True)),
                ('cubagem', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tam_largura', models.FloatField(blank=True, null=True)),
                ('tam_comprimento', models.FloatField(blank=True, null=True)),
                ('tam_espessura', models.FloatField(blank=True, null=True)),
                ('densidade', models.IntegerField(blank=True, null=True)),
                ('densidade_2', models.IntegerField(blank=True, null=True)),
                ('densidade_3', models.IntegerField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo\n0 - Normal\n1 - TAMPO  - Utilizado pela bordadeira\n2 - FAIXA  - Utilizado pela bordadeira \n3 - ESPUMA - Utilizado pelo bloco cilindrico  \n', null=True)),
                ('geracao_lote_interno', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nTodo produto tem que ter o seu lote_interno que Ú gerado pelo sistema, isso Ú devido a rastreabilidade.\nO produto pode ter o seu lote gerado a partir de:  \n\n0 - Nota fiscal de entrada, 1 - EspumaþÒo, 2 - Bordadeira, 3 - InspeþÒo de Itens \n, 4 - NÒo utiliza   ', null=True)),
                ('destino_reclamado', models.IntegerField(blank=True, db_comment='Campo utilizado somente no sistema de produþÒo.\nEste campo serß utilizado pela rotina de Atendimento das reclamaþ§es do cliente: PCP_FM_M_ACR.         \n0 - Nenhum\n1 - Flocagem\n2 - Descarte', null=True)),
                ('etiq_classificacao_pro', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nEste campo foi direcinado para a tabela PCP_TB_C_CLE (ID_CLE)', null=True)),
                ('etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('etiq_madeira', models.CharField(blank=True, max_length=200, null=True)),
                ('etiq_espuma1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_recomendacoes_1', models.CharField(blank=True, max_length=80, null=True)),
                ('etiq_recomendacoes_2', models.CharField(blank=True, max_length=80, null=True)),
                ('lote_fabric_obrigatorio', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela controle de inspeþÒo e recebimento de produto (EST_FM_M_NFE_S). \nIsso server para dizer se o campo lote do fabricante Ú obrigat¾rio.', null=True)),
                ('preco_avista', models.DecimalField(blank=True, db_comment='Descricao completa, campo utilizado no enBueld.', decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('etiq_modelo', models.CharField(blank=True, max_length=70, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('des_completa', models.CharField(blank=True, max_length=250, null=True)),
                ('rt_pricipio_ativo', models.CharField(blank=True, max_length=400, null=True)),
                ('rt_composicao', models.CharField(blank=True, max_length=400, null=True)),
                ('ret_emb_capacidade', models.CharField(blank=True, max_length=20, null=True)),
                ('ret_emb_nao_lavavel', models.IntegerField(blank=True, db_comment='0 - Contaminada\n1 - NÒo-Contaminada', null=True)),
                ('ret_emb_lavaveis', models.IntegerField(blank=True, db_comment='0 - Plßstico\n1 - Metal\n2 - Vidro', null=True)),
                ('cod_onu', models.CharField(blank=True, max_length=20, null=True)),
                ('sgq_critica_laudo_fab', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de InspeþÒo de Itens (FAT_FM_M_IQM).', null=True)),
                ('tam_observacoes', models.CharField(blank=True, max_length=150, null=True)),
                ('etiq_id_cue', models.IntegerField(blank=True, db_comment='Refere-se a tabela PCP_TB_C_CUE.', null=True)),
                ('preco_avista_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_ult_reajuste', models.DateField(blank=True, null=True)),
                ('rt_registro', models.CharField(blank=True, max_length=25, null=True)),
                ('custo_servico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_item_anterior', models.IntegerField(blank=True, null=True)),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('etiq_espuma4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('sgq_tamanho_ite_epp', models.FloatField(blank=True, db_comment='Campo utilizado pelo relat¾rio de Entrada de Produto Acabado', null=True)),
                ('tipo_servico', models.BooleanField(blank=True, null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('pneu_largura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_altura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_aro', models.CharField(blank=True, max_length=10, null=True)),
                ('id_marca', models.IntegerField(blank=True, null=True)),
                ('sgq_personalizado', models.BooleanField(blank=True, db_comment='produto utilizado pelo m¾dulo sgq.', null=True)),
                ('temp_etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_item_prod', models.IntegerField(blank=True, db_comment='c¾digo do item da produþÒo ', null=True)),
                ('etiq_tipo_produto', models.IntegerField(blank=True, db_comment='0 - COLCH├O DE ESPUMA\r\n1 - COLCH├O BOX CONJUGADO\r\n2 - COLCH├O AUXILIAR\r\n3 - COLCH├O MISTO\r\n', null=True)),
                ('tam_esp_espessura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_3', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_3', models.FloatField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='0 - NÒo especificado\r\n1 - Manual do Usußrio', null=True)),
                ('tam_esp_espessura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_2', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_2', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bck_producao_180723_itens',
                'db_table_comment': 'Cadastro de Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BckProducao260921Itens',
            fields=[
                ('id_item', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('cardapio', models.BooleanField()),
                ('descricao', models.CharField(max_length=100)),
                ('fantasia', models.CharField(blank=True, max_length=30, null=True)),
                ('referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('aplicacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_fornecedor', models.IntegerField()),
                ('id_grupo', models.CharField(max_length=11)),
                ('id_und_compra', models.CharField(blank=True, max_length=3, null=True)),
                ('id_und_venda', models.CharField(blank=True, max_length=3, null=True)),
                ('emb_compra', models.FloatField(blank=True, null=True)),
                ('emb_venda', models.FloatField(blank=True, null=True)),
                ('cod_barra', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('pes_liquido', models.FloatField(blank=True, null=True)),
                ('pes_bruto', models.FloatField(blank=True, null=True)),
                ('est_minimo', models.FloatField(blank=True, null=True)),
                ('loca_rua', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=4, null=True)),
                ('cubagem', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tam_largura', models.FloatField(blank=True, null=True)),
                ('tam_comprimento', models.FloatField(blank=True, null=True)),
                ('tam_espessura', models.FloatField(blank=True, null=True)),
                ('densidade', models.IntegerField(blank=True, null=True)),
                ('densidade_2', models.IntegerField(blank=True, null=True)),
                ('densidade_3', models.IntegerField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo\n0 - Normal\n1 - TAMPO  - Utilizado pela bordadeira\n2 - FAIXA  - Utilizado pela bordadeira \n3 - ESPUMA - Utilizado pelo bloco cilindrico  \n', null=True)),
                ('geracao_lote_interno', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nTodo produto tem que ter o seu lote_interno que Ú gerado pelo sistema, isso Ú devido a rastreabilidade.\nO produto pode ter o seu lote gerado a partir de:  \n\n0 - Nota fiscal de entrada, 1 - EspumaþÒo, 2 - Bordadeira, 3 - InspeþÒo de Itens \n, 4 - NÒo utiliza   ', null=True)),
                ('destino_reclamado', models.IntegerField(blank=True, db_comment='Campo utilizado somente no sistema de produþÒo.\nEste campo serß utilizado pela rotina de Atendimento das reclamaþ§es do cliente: PCP_FM_M_ACR.         \n0 - Nenhum\n1 - Flocagem\n2 - Descarte', null=True)),
                ('etiq_classificacao_pro', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nEste campo foi direcinado para a tabela PCP_TB_C_CLE (ID_CLE)', null=True)),
                ('etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('etiq_madeira', models.CharField(blank=True, max_length=200, null=True)),
                ('etiq_espuma1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_recomendacoes_1', models.CharField(blank=True, max_length=80, null=True)),
                ('etiq_recomendacoes_2', models.CharField(blank=True, max_length=80, null=True)),
                ('lote_fabric_obrigatorio', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela controle de inspeþÒo e recebimento de produto (EST_FM_M_NFE_S). \nIsso server para dizer se o campo lote do fabricante Ú obrigat¾rio.', null=True)),
                ('id_ncm', models.CharField(blank=True, max_length=10, null=True)),
                ('preco_avista', models.DecimalField(blank=True, db_comment='Descricao completa, campo utilizado no enBueld.', decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('etiq_modelo', models.CharField(blank=True, max_length=70, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_familia', models.IntegerField(blank=True, null=True)),
                ('des_completa', models.CharField(blank=True, max_length=250, null=True)),
                ('rt_pricipio_ativo', models.CharField(blank=True, max_length=400, null=True)),
                ('rt_composicao', models.CharField(blank=True, max_length=400, null=True)),
                ('ret_emb_capacidade', models.CharField(blank=True, max_length=20, null=True)),
                ('ret_emb_nao_lavavel', models.IntegerField(blank=True, db_comment='0 - Contaminada\n1 - NÒo-Contaminada', null=True)),
                ('ret_emb_lavaveis', models.IntegerField(blank=True, db_comment='0 - Plßstico\n1 - Metal\n2 - Vidro', null=True)),
                ('cod_onu', models.CharField(blank=True, max_length=20, null=True)),
                ('sgq_critica_laudo_fab', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de InspeþÒo de Itens (FAT_FM_M_IQM).', null=True)),
                ('tam_observacoes', models.CharField(blank=True, max_length=150, null=True)),
                ('etiq_id_cue', models.IntegerField(blank=True, db_comment='Refere-se a tabela PCP_TB_C_CUE.', null=True)),
                ('preco_avista_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_ult_reajuste', models.DateField(blank=True, null=True)),
                ('rt_registro', models.CharField(blank=True, max_length=25, null=True)),
                ('custo_servico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_grupo_prod', models.IntegerField(blank=True, null=True)),
                ('id_item_anterior', models.IntegerField(blank=True, null=True)),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('etiq_espuma4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('sgq_tamanho_ite_epp', models.FloatField(blank=True, db_comment='Campo utilizado pelo relat¾rio de Entrada de Produto Acabado', null=True)),
                ('tipo_servico', models.BooleanField(blank=True, null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('pneu_largura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_altura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_aro', models.CharField(blank=True, max_length=10, null=True)),
                ('id_marca', models.IntegerField(blank=True, null=True)),
                ('sgq_personalizado', models.BooleanField(blank=True, db_comment='produto utilizado pelo m¾dulo sgq.', null=True)),
                ('temp_etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_item_prod', models.IntegerField(blank=True, db_comment='c¾digo do item da produþÒo ', null=True)),
                ('etiq_tipo_produto', models.IntegerField(blank=True, db_comment='0 - COLCH├O DE ESPUMA\r\n1 - COLCH├O BOX CONJUGADO\r\n2 - COLCH├O AUXILIAR\r\n3 - COLCH├O MISTO\r\n', null=True)),
                ('tam_esp_espessura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_3', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_3', models.FloatField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='0 - NÒo especificado\r\n1 - Manual do Usußrio', null=True)),
            ],
            options={
                'db_table': 'bck_producao_260921_itens',
                'db_table_comment': 'Cadastro de Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BckProducao270922Itens',
            fields=[
                ('id_item', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('cardapio', models.BooleanField()),
                ('descricao', models.CharField(max_length=100)),
                ('fantasia', models.CharField(blank=True, max_length=30, null=True)),
                ('referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('aplicacao', models.CharField(blank=True, max_length=100, null=True)),
                ('emb_compra', models.FloatField(blank=True, null=True)),
                ('emb_venda', models.FloatField(blank=True, null=True)),
                ('cod_barra', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('pes_liquido', models.FloatField(blank=True, null=True)),
                ('pes_bruto', models.FloatField(blank=True, null=True)),
                ('est_minimo', models.FloatField(blank=True, null=True)),
                ('loca_rua', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=4, null=True)),
                ('cubagem', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tam_largura', models.FloatField(blank=True, null=True)),
                ('tam_comprimento', models.FloatField(blank=True, null=True)),
                ('tam_espessura', models.FloatField(blank=True, null=True)),
                ('densidade', models.IntegerField(blank=True, null=True)),
                ('densidade_2', models.IntegerField(blank=True, null=True)),
                ('densidade_3', models.IntegerField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo\n0 - Normal\n1 - TAMPO  - Utilizado pela bordadeira\n2 - FAIXA  - Utilizado pela bordadeira \n3 - ESPUMA - Utilizado pelo bloco cilindrico  \n', null=True)),
                ('geracao_lote_interno', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nTodo produto tem que ter o seu lote_interno que Ú gerado pelo sistema, isso Ú devido a rastreabilidade.\nO produto pode ter o seu lote gerado a partir de:  \n\n0 - Nota fiscal de entrada, 1 - EspumaþÒo, 2 - Bordadeira, 3 - InspeþÒo de Itens \n, 4 - NÒo utiliza   ', null=True)),
                ('destino_reclamado', models.IntegerField(blank=True, db_comment='Campo utilizado somente no sistema de produþÒo.\nEste campo serß utilizado pela rotina de Atendimento das reclamaþ§es do cliente: PCP_FM_M_ACR.         \n0 - Nenhum\n1 - Flocagem\n2 - Descarte', null=True)),
                ('etiq_classificacao_pro', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nEste campo foi direcinado para a tabela PCP_TB_C_CLE (ID_CLE)', null=True)),
                ('etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('etiq_madeira', models.CharField(blank=True, max_length=200, null=True)),
                ('etiq_espuma1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_recomendacoes_1', models.CharField(blank=True, max_length=80, null=True)),
                ('etiq_recomendacoes_2', models.CharField(blank=True, max_length=80, null=True)),
                ('lote_fabric_obrigatorio', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela controle de inspeþÒo e recebimento de produto (EST_FM_M_NFE_S). \nIsso server para dizer se o campo lote do fabricante Ú obrigat¾rio.', null=True)),
                ('preco_avista', models.DecimalField(blank=True, db_comment='Descricao completa, campo utilizado no enBueld.', decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('etiq_modelo', models.CharField(blank=True, max_length=70, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('des_completa', models.CharField(blank=True, max_length=250, null=True)),
                ('rt_pricipio_ativo', models.CharField(blank=True, max_length=400, null=True)),
                ('rt_composicao', models.CharField(blank=True, max_length=400, null=True)),
                ('ret_emb_capacidade', models.CharField(blank=True, max_length=20, null=True)),
                ('ret_emb_nao_lavavel', models.IntegerField(blank=True, db_comment='0 - Contaminada\n1 - NÒo-Contaminada', null=True)),
                ('ret_emb_lavaveis', models.IntegerField(blank=True, db_comment='0 - Plßstico\n1 - Metal\n2 - Vidro', null=True)),
                ('cod_onu', models.CharField(blank=True, max_length=20, null=True)),
                ('sgq_critica_laudo_fab', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de InspeþÒo de Itens (FAT_FM_M_IQM).', null=True)),
                ('tam_observacoes', models.CharField(blank=True, max_length=150, null=True)),
                ('etiq_id_cue', models.IntegerField(blank=True, db_comment='Refere-se a tabela PCP_TB_C_CUE.', null=True)),
                ('preco_avista_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_ult_reajuste', models.DateField(blank=True, null=True)),
                ('rt_registro', models.CharField(blank=True, max_length=25, null=True)),
                ('custo_servico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_item_anterior', models.IntegerField(blank=True, null=True)),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('etiq_espuma4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('sgq_tamanho_ite_epp', models.FloatField(blank=True, db_comment='Campo utilizado pelo relat¾rio de Entrada de Produto Acabado', null=True)),
                ('tipo_servico', models.BooleanField(blank=True, null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('pneu_largura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_altura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_aro', models.CharField(blank=True, max_length=10, null=True)),
                ('id_marca', models.IntegerField(blank=True, null=True)),
                ('sgq_personalizado', models.BooleanField(blank=True, db_comment='produto utilizado pelo m¾dulo sgq.', null=True)),
                ('temp_etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_item_prod', models.IntegerField(blank=True, db_comment='c¾digo do item da produþÒo ', null=True)),
                ('etiq_tipo_produto', models.IntegerField(blank=True, db_comment='0 - COLCH├O DE ESPUMA\r\n1 - COLCH├O BOX CONJUGADO\r\n2 - COLCH├O AUXILIAR\r\n3 - COLCH├O MISTO\r\n', null=True)),
                ('tam_esp_espessura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_3', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_3', models.FloatField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='0 - NÒo especificado\r\n1 - Manual do Usußrio', null=True)),
                ('tam_esp_espessura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_2', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_2', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bck_producao_270922_itens',
                'db_table_comment': 'Cadastro de Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrCredito',
            fields=[
                ('numcoo', models.IntegerField(primary_key=True, serialize=False)),
                ('dthora', models.DateField()),
                ('serial', models.CharField(blank=True, max_length=60, null=True)),
                ('numloja', models.IntegerField(blank=True, null=True)),
                ('cod_doc', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_operacao', models.CharField(blank=True, max_length=10, null=True)),
                ('parcela', models.CharField(blank=True, max_length=2, null=True)),
                ('valor', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('tipo_pag', models.CharField(blank=True, max_length=50, null=True)),
                ('indice_tp', models.CharField(blank=True, max_length=10, null=True)),
                ('historico', models.CharField(blank=True, max_length=200, null=True)),
                ('desc_comprov', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_comprov', models.IntegerField(blank=True, null=True)),
                ('numecf', models.IntegerField(blank=True, null=True)),
                ('numgnf', models.IntegerField(blank=True, null=True)),
                ('data', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'br_credito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrCupomMestre',
            fields=[
                ('n_cupom', models.IntegerField(primary_key=True, serialize=False)),
                ('cpf_cnpj', models.CharField(blank=True, max_length=30, null=True)),
                ('descontos', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('acrescimos', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('cancelado', models.CharField(blank=True, max_length=1, null=True)),
                ('total_bruto', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('total_liquido', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('serial_impressora', models.CharField(max_length=60)),
                ('cnpj_empresa', models.CharField(blank=True, max_length=30, null=True)),
                ('ie', models.CharField(blank=True, max_length=40, null=True)),
                ('im', models.CharField(blank=True, max_length=40, null=True)),
                ('tipo_ecf', models.CharField(blank=True, max_length=10, null=True)),
                ('marca', models.CharField(blank=True, max_length=50, null=True)),
                ('modelo', models.CharField(blank=True, max_length=50, null=True)),
                ('data_movimento', models.DateField(blank=True, null=True)),
                ('versao_sb', models.CharField(blank=True, max_length=10, null=True)),
                ('data_sb', models.DateField(blank=True, null=True)),
                ('hora_sb', models.DateField(blank=True, null=True)),
                ('dthora_inclusao', models.DateField(blank=True, null=True)),
                ('naofiscal', models.CharField(blank=True, max_length=1, null=True)),
                ('ccf', models.IntegerField(blank=True, null=True)),
                ('indicadordesconto', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_descontoacrescimo', models.CharField(blank=True, max_length=1, null=True)),
                ('nome_cliente', models.CharField(blank=True, max_length=40, null=True)),
                ('n_caixa', models.CharField(blank=True, max_length=3, null=True)),
                ('numloja', models.CharField(blank=True, max_length=6, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('placa', models.CharField(blank=True, max_length=20, null=True)),
                ('hodometro', models.IntegerField(blank=True, null=True)),
                ('motivo_afericao', models.CharField(blank=True, max_length=100, null=True)),
                ('motorista', models.CharField(blank=True, max_length=60, null=True)),
                ('transportadora', models.CharField(blank=True, max_length=80, null=True)),
                ('cpf_cnpj_transp', models.CharField(blank=True, max_length=20, null=True)),
                ('autorizacao', models.CharField(blank=True, max_length=20, null=True)),
                ('ccusto', models.CharField(blank=True, max_length=10, null=True)),
                ('cliccodigo', models.CharField(blank=True, max_length=20, null=True)),
                ('data_homologacao', models.DateField(blank=True, null=True)),
                ('dthora_fechamento', models.DateField(blank=True, null=True)),
                ('cod_pais', models.IntegerField(blank=True, null=True)),
                ('cod_municipio', models.IntegerField(blank=True, null=True)),
                ('suframa', models.CharField(blank=True, max_length=9, null=True)),
                ('endereco', models.CharField(blank=True, max_length=60, null=True)),
                ('numero', models.CharField(blank=True, max_length=20, null=True)),
                ('complemento', models.CharField(blank=True, max_length=60, null=True)),
                ('bairro', models.CharField(blank=True, max_length=60, null=True)),
                ('ie_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('cidade', models.CharField(blank=True, max_length=50, null=True)),
                ('notafiscal', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'br_cupom_mestre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrEstoque',
            fields=[
                ('data', models.DateField(primary_key=True, serialize=False)),
                ('cod_produto', models.CharField(max_length=20)),
                ('qtd', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('custo', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('hora', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'br_estoque',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrReducaoz',
            fields=[
                ('serial', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('cnpj', models.CharField(blank=True, max_length=40, null=True)),
                ('ie', models.CharField(blank=True, max_length=40, null=True)),
                ('im', models.CharField(blank=True, max_length=40, null=True)),
                ('tipo_ecf', models.CharField(blank=True, max_length=10, null=True)),
                ('marca', models.CharField(blank=True, max_length=50, null=True)),
                ('modelo', models.CharField(blank=True, max_length=40, null=True)),
                ('data_movimento', models.DateField()),
                ('n_caixa', models.CharField(blank=True, max_length=3, null=True)),
                ('versao_sb', models.CharField(blank=True, max_length=20, null=True)),
                ('data_sb', models.DateField(blank=True, null=True)),
                ('hora_sb', models.DateField(blank=True, null=True)),
                ('coo_inicial', models.IntegerField(blank=True, null=True)),
                ('coo_final', models.IntegerField(blank=True, null=True)),
                ('dataemissao', models.DateField(blank=True, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'br_reducaoz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrMntBombas',
            fields=[
                ('tanque', models.CharField(max_length=3)),
                ('bico', models.CharField(max_length=3)),
                ('bomba', models.CharField(max_length=3)),
                ('data_sub', models.DateField()),
                ('hora_sub', models.DateField()),
                ('motivo', models.CharField(blank=True, max_length=200, null=True)),
                ('cnpj_sub', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf_sub', models.CharField(blank=True, max_length=14, null=True)),
                ('lacre_anterior', models.CharField(blank=True, max_length=20, null=True)),
                ('lacre_novo', models.CharField(blank=True, max_length=20, null=True)),
                ('ei', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('ef', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'br_mnt_bombas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrNaofiscal',
            fields=[
                ('numcoo', models.IntegerField(primary_key=True, serialize=False)),
                ('serial', models.CharField(max_length=60)),
                ('numgrg', models.IntegerField(blank=True, null=True)),
                ('numecf', models.IntegerField(blank=True, null=True)),
                ('numgnf', models.IntegerField(blank=True, null=True)),
                ('cer', models.IntegerField(blank=True, null=True)),
                ('indice_pg', models.CharField(blank=True, max_length=20, null=True)),
                ('descricao_pg', models.CharField(blank=True, max_length=60, null=True)),
                ('indice_doc', models.CharField(blank=True, max_length=10, null=True)),
                ('descricao_doc', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.DateField(blank=True, null=True)),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('numcdc', models.IntegerField(blank=True, null=True)),
                ('hora', models.DateField(blank=True, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'br_naofiscal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrPedMestre',
            fields=[
                ('dtemissao', models.DateField(primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=20)),
                ('serie', models.CharField(max_length=3)),
                ('sub_serie', models.CharField(blank=True, max_length=3, null=True)),
                ('base_icms', models.FloatField(blank=True, null=True)),
                ('val_icms', models.FloatField(blank=True, null=True)),
                ('total_nota', models.FloatField(blank=True, null=True)),
                ('modelo', models.CharField(blank=True, max_length=6, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('flag_servico', models.CharField(blank=True, max_length=1, null=True)),
                ('cpf_cnpj', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'db_table': 'br_ped_mestre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrPrevenda',
            fields=[
                ('numprevenda', models.IntegerField(primary_key=True, serialize=False)),
                ('data_cad', models.DateField(blank=True, null=True)),
                ('data_emissao', models.DateField(blank=True, null=True)),
                ('vendedor', models.CharField(blank=True, max_length=20, null=True)),
                ('plano', models.CharField(blank=True, max_length=4, null=True)),
                ('id_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('numloja', models.CharField(max_length=10)),
                ('cancelado', models.CharField(blank=True, max_length=1, null=True)),
                ('n_cupom', models.IntegerField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=60, null=True)),
                ('contrz', models.IntegerField(blank=True, null=True)),
                ('cpf_cnpj', models.CharField(blank=True, max_length=20, null=True)),
                ('endereco', models.CharField(blank=True, max_length=80, null=True)),
                ('nome', models.CharField(blank=True, max_length=70, null=True)),
                ('bairro', models.CharField(blank=True, max_length=50, null=True)),
                ('cidade', models.CharField(blank=True, max_length=50, null=True)),
                ('cep', models.CharField(blank=True, max_length=15, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('fone1', models.CharField(blank=True, max_length=25, null=True)),
                ('fone2', models.CharField(blank=True, max_length=25, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('desconto', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('acrescimo', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('flag_liberado', models.CharField(blank=True, max_length=1, null=True)),
                ('usuario_lib', models.CharField(blank=True, max_length=50, null=True)),
                ('dthora_lib', models.DateField(blank=True, null=True)),
                ('tipo', models.CharField(max_length=1)),
                ('serialpv', models.CharField(blank=True, max_length=30, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('dav_impresso', models.CharField(blank=True, max_length=1, null=True)),
                ('mesa', models.CharField(blank=True, max_length=30, null=True)),
                ('conferencia', models.CharField(blank=True, max_length=1, null=True)),
                ('caixa_conf', models.IntegerField(blank=True, null=True)),
                ('coo_conf', models.IntegerField(blank=True, null=True)),
                ('cer_conf', models.IntegerField(blank=True, null=True)),
                ('data_abertura', models.DateField(blank=True, null=True)),
                ('placa', models.CharField(blank=True, max_length=10, null=True)),
                ('renavan', models.CharField(blank=True, max_length=30, null=True)),
                ('ano', models.CharField(blank=True, max_length=10, null=True)),
                ('marca', models.CharField(blank=True, max_length=50, null=True)),
                ('modelo', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'br_prevenda',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrPrevendaDetalhe',
            fields=[
                ('numprevenda', models.IntegerField(primary_key=True, serialize=False)),
                ('loja', models.CharField(max_length=10)),
                ('cod_produto', models.CharField(max_length=20)),
                ('qtd', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('un', models.CharField(blank=True, max_length=3, null=True)),
                ('valor', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('desconto', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('acrescimo', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('cancelado', models.CharField(blank=True, max_length=1, null=True)),
                ('n_cupom', models.IntegerField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_grade', models.CharField(blank=True, max_length=20, null=True)),
                ('item', models.IntegerField()),
                ('cod_kit', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_vendedor', models.CharField(blank=True, max_length=20, null=True)),
                ('desc_produto', models.CharField(blank=True, max_length=100, null=True)),
                ('aliquota', models.CharField(blank=True, max_length=10, null=True)),
                ('servico', models.CharField(blank=True, max_length=1, null=True)),
                ('serialproduto', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo', models.CharField(max_length=1)),
                ('cod_prod_tcsmart', models.CharField(blank=True, max_length=30, null=True)),
                ('tipo_bloqueado', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('mesa_origem', models.CharField(blank=True, max_length=30, null=True)),
                ('numprevenda_origem', models.IntegerField(blank=True, null=True)),
                ('item_origem', models.IntegerField(blank=True, null=True)),
                ('ccusto', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('ncm', models.CharField(blank=True, max_length=8, null=True)),
                ('ex_ipi', models.CharField(blank=True, max_length=3, null=True)),
                ('genero', models.CharField(blank=True, max_length=2, null=True)),
                ('cst_icms', models.CharField(blank=True, max_length=2, null=True)),
                ('origem_icms', models.CharField(blank=True, max_length=1, null=True)),
                ('aliquota_ipi', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('aliquota_pis', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('tipo_item', models.CharField(blank=True, max_length=2, null=True)),
                ('cfop', models.IntegerField(blank=True, null=True)),
                ('desc_unidade', models.CharField(blank=True, max_length=50, null=True)),
                ('stb', models.CharField(blank=True, max_length=1, null=True)),
                ('complemento_item', models.CharField(blank=True, max_length=100, null=True)),
                ('prdcoutroscodigo', models.CharField(blank=True, max_length=18, null=True)),
            ],
            options={
                'db_table': 'br_prevenda_detalhe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrPrevendaPagamento',
            fields=[
                ('cod_retaguarda', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('numprevenda', models.IntegerField()),
                ('tipo', models.CharField(max_length=1)),
                ('valor', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'br_prevenda_pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrSeqId',
            fields=[
                ('tabela', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('seq_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'br_seq_id',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCAlm',
            fields=[
                ('id_almoxarifado', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_alm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCAus',
            fields=[
                ('id_aus', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('id_funcionario', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_aus',
                'db_table_comment': 'Alterar Acessos do Usußrio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCcr',
            fields=[
                ('id_ccr', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=60, null=True)),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('fone', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ccr',
                'db_table_comment': 'Cadastro de Credenciadora de CartÒo de CrÚdito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCcu',
            fields=[
                ('id_ccusto', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ccu',
                'db_table_comment': 'Cadastro de Centro de Custo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCfo',
            fields=[
                ('id_cfo', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=400)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_cfo_xml', models.CharField(blank=True, max_length=5, null=True)),
                ('desc_nat_operacao_nfe', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_cta', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cfo',
                'db_table_comment': 'Cadastro de Codigo Fiscal de OperaþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCid',
            fields=[
                ('id_cidade', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=60)),
                ('uf', models.CharField(max_length=2)),
                ('cep', models.CharField(max_length=9)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('cod_pais', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cid',
                'db_table_comment': 'Cadastro de Cidades conforme IBGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCin',
            fields=[
                ('id_cli_informa', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cin',
                'db_table_comment': 'Cadastro de Informaþ§es de Clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCli',
            fields=[
                ('id_cliente', models.IntegerField(primary_key=True, serialize=False)),
                ('pessoa', models.IntegerField(db_comment='0-Fisica\n1-Juridica')),
                ('nome', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=60)),
                ('end_complemento', models.CharField(blank=True, max_length=30, null=True)),
                ('cep', models.CharField(max_length=9)),
                ('numero', models.CharField(max_length=10)),
                ('tel_fixo', models.CharField(blank=True, max_length=14, null=True)),
                ('tel_movel', models.CharField(blank=True, max_length=14, null=True)),
                ('fax', models.CharField(blank=True, max_length=14, null=True)),
                ('doc_cnpj_cpf', models.CharField(max_length=14)),
                ('doc_ie_identidade', models.CharField(max_length=20)),
                ('doc_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('doc_im', models.CharField(blank=True, max_length=20, null=True)),
                ('bairro', models.CharField(max_length=40)),
                ('ativo', models.BooleanField()),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('lim_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('lim_saldo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('sexo', models.IntegerField(blank=True, db_comment='0 - Feminino,\n1 - Masculino', null=True)),
                ('situacao', models.IntegerField(db_comment='0 - Normal,\n1 - Especial,\n2 - CrÚditoEncerrado')),
                ('dta_nascimento', models.DateField(blank=True, null=True)),
                ('dta_cadastro', models.DateField()),
                ('tipo_cliente', models.IntegerField(db_comment='0 - Consumidor,\n1 - Revenda')),
                ('cob_endereco', models.CharField(blank=True, max_length=50, null=True)),
                ('cob_bairro', models.CharField(blank=True, max_length=40, null=True)),
                ('cob_cidade', models.CharField(blank=True, max_length=40, null=True)),
                ('cob_estado', models.CharField(blank=True, max_length=2, null=True)),
                ('cob_cep', models.CharField(blank=True, max_length=9, null=True)),
                ('dta_ult_compra', models.DateField(blank=True, null=True)),
                ('dta_pri_compra', models.DateField(blank=True, null=True)),
                ('filiacao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_sufrana', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_pais', models.CharField(blank=True, max_length=5, null=True)),
                ('doc_rg_orgao', models.CharField(blank=True, max_length=10, null=True)),
                ('apelido', models.CharField(blank=True, max_length=40, null=True)),
                ('lim_validade', models.DateField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('contribuinte', models.IntegerField(blank=True, db_comment='0 - Contribuinte de ICMS\n1 - NÒo Contribuinte de ICMS\n2 - ISENTO', null=True)),
                ('dias_prazo_financeiro', models.IntegerField(blank=True, null=True)),
                ('profissao', models.CharField(blank=True, max_length=50, null=True)),
                ('renda', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_controle_fpg_hrq', models.IntegerField(blank=True, null=True)),
                ('permitir_alterar_dias_tit_ped', models.BooleanField(blank=True, null=True)),
                ('status_vis_mobile', models.BooleanField(blank=True, null=True)),
                ('id_cli_temp_mobile', models.CharField(blank=True, max_length=30, null=True)),
                ('per_comissao', models.FloatField(blank=True, null=True)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
                ('substituto_tributario', models.BooleanField(blank=True, null=True)),
                ('desenvolvimento', models.BooleanField(blank=True, null=True)),
                ('dta_inicio_desnv', models.DateField(blank=True, null=True)),
                ('aval_doc_cnpj_cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('aval_nome', models.CharField(blank=True, max_length=40, null=True)),
                ('aval_logradouro', models.CharField(blank=True, max_length=30, null=True)),
                ('aval_nro', models.CharField(blank=True, max_length=10, null=True)),
                ('aval_bairro', models.CharField(blank=True, max_length=20, null=True)),
                ('aval_id_cidade', models.CharField(blank=True, max_length=10, null=True)),
                ('aval_cep', models.CharField(blank=True, max_length=9, null=True)),
                ('aval_fone', models.CharField(blank=True, max_length=14, null=True)),
                ('aval_email', models.CharField(blank=True, max_length=60, null=True)),
                ('nome_proprietario', models.CharField(blank=True, db_comment='A pedido da Colch§es Glogo', max_length=50, null=True)),
                ('doc_cnpj_cpf_proprietario', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli',
                'db_table_comment': 'Cadastro de Clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCne',
            fields=[
                ('id_cnae', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=300)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cne',
                'db_table_comment': 'Tabela de CNAE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCor',
            fields=[
                ('id_cor', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=40)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cor',
                'db_table_comment': 'Tabela de Cor.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCpg',
            fields=[
                ('id_condicao_pag', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('descricao', models.CharField(max_length=30)),
                ('tipo_pagamento', models.IntegerField(db_comment='0 - AVista,\n1 - APrazo,\n2 - SemPagamento')),
                ('num_parcelas', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('per_desc', models.FloatField(blank=True, null=True)),
                ('perm_desc_especial', models.BooleanField(blank=True, db_comment='Campo utilizado no pedido de venda.', null=True)),
                ('sgq_texto_cnd_ped', models.BooleanField(blank=True, db_comment='Se estiver TRUE , o pedido de venda irß abrir o campo para o usußrio digitar o texto a ser impresso no pedido de venda ao invÚs da descriþÒo da condiþÒo de pagamento.', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cpg',
                'db_table_comment': 'Tabela de CondiþÒo de Pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCtc',
            fields=[
                ('id_conta', models.IntegerField(primary_key=True, serialize=False)),
                ('banco', models.IntegerField(blank=True, null=True)),
                ('agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('cedente_cod', models.CharField(blank=True, max_length=20, null=True)),
                ('cedente_nom', models.CharField(blank=True, max_length=50, null=True)),
                ('cedente_mail', models.CharField(blank=True, max_length=60, null=True)),
                ('nnu_proximo', models.CharField(blank=True, max_length=20, null=True)),
                ('conta_corrente', models.CharField(blank=True, max_length=20, null=True)),
                ('descricao', models.CharField(blank=True, max_length=40, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0-Caixa, 1-Banco', null=True)),
                ('mensagem_1', models.CharField(blank=True, max_length=100, null=True)),
                ('mensagem_2', models.CharField(blank=True, max_length=100, null=True)),
                ('cedente_ident', models.CharField(blank=True, max_length=260, null=True)),
                ('layout_remessa', models.CharField(blank=True, max_length=15, null=True)),
                ('tipo_cobranca', models.IntegerField(blank=True, db_comment='0-Nenhum\n1-Banco Do Brasil\n2-Santander\n3-Caixa Economica\n4-Caixa Sicob\n5-Bradesco\n6-Itau\n7-Banco Mercantil\n8-Sicred\n9-Bancoob\n10-Banrisul,\n11-Banestes,\n12-HSBC\n13-BancoDoNordeste\n14-BRB\n15-BicBanco,\n    cobBradescoSICOOB,\n    cobBancoSafra,\n    cobSafraBradesco,\n    cobBancoCECRED\n', null=True)),
                ('caract_titulo', models.IntegerField(blank=True, db_comment='0-Simples\n1-Vinculada\n2-Caucionada\n3-Descontada\n4-Vendor', null=True)),
                ('tipo_carteira', models.IntegerField(blank=True, db_comment='0-Simples\n1-Registrada', null=True)),
                ('resp_emissao', models.IntegerField(blank=True, db_comment='0-Cliente Emite\n1-Banco Emite\n2-Banco Reemite\n3-Banco Nao Reemite', null=True)),
                ('agencia_dig', models.IntegerField(blank=True, null=True)),
                ('conta_corrente_dig', models.IntegerField(blank=True, null=True)),
                ('convenio', models.IntegerField(blank=True, null=True)),
                ('carteira', models.CharField(blank=True, db_comment='Usado na impressÒo do boleto.', max_length=4, null=True)),
                ('msg_local_pagto', models.CharField(blank=True, max_length=80, null=True)),
                ('carteira_variacao', models.CharField(blank=True, max_length=3, null=True)),
                ('cnpj_titular', models.CharField(blank=True, db_comment='Este campo indica qual Ú o CNPJ titula da conta corrente,  pois para o BANCO DO BRASIL, esse valor Ú importante e a mesma conta corrente pode ser usada por outras filiais. Ex. A conta pode ser utilizada para emissÒo de boleto por N filiais, mas essa conta s¾ tem um ·nico CNPJ.', max_length=14, null=True)),
                ('imp_msg_juros_mora', models.BooleanField(blank=True, db_comment='Utilizado no momento de gerar o boleto.', null=True)),
                ('especie_tit', models.CharField(blank=True, db_comment='EspÚcie do TÝtulo\r\nC¾digo adotado pela FEBRABAN para identificar o tipo de tÝtulo de cobranþa.\r\n\r\nDM - Duplicata Mercantil\r\nDS   - Duplicata de Serviþo\r\nNP  - Nota Promiss¾ria\r\nNS  - Nota de Seguro\r\nRC  - Recibo\r\nND -  Nota de DÚbito\r\nLC  -  Letra de CÔmbio\r\n\r\n\r\n', max_length=3, null=True)),
                ('aceite_tit', models.CharField(blank=True, db_comment='C¾digo adotado pela FEBRABAN para identificar se o tÝtulo de cobranþa foi aceito\r\n(reconhecimento da dÝvida pelo Sacado).\r\n\r\nA - Aceite\r\nN - NÒo aceite', max_length=1, null=True)),
                ('qtde_dias_protesto', models.IntegerField(blank=True, null=True)),
                ('perc_multa', models.FloatField(blank=True, null=True)),
                ('protestar_negativar', models.IntegerField(blank=True, db_comment='0 - Nenhum\r\n1 - Protestar\r\n2 - Negativar', null=True)),
                ('sequencia_remessa', models.IntegerField(blank=True, db_comment='Nro sequencial do arquivo de remessa ref. a posicao 111 a 117 no layout 400', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ctc',
                'db_table_comment': 'Tabela de Conta Corrente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCul',
            fields=[
                ('id_cultura', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=30, null=True)),
                ('ciclo_curto', models.BooleanField(blank=True, db_comment='Criado devido o sistema MOBILE.', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cul',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCEcf',
            fields=[
                ('ecf_serial_impressora', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('ecf_marca_impressora', models.CharField(blank=True, max_length=50, null=True)),
                ('ecf_modelo_impressora', models.CharField(blank=True, max_length=50, null=True)),
                ('ecf_caixa', models.CharField(blank=True, max_length=3, null=True)),
                ('serie', models.CharField(blank=True, max_length=3, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('paf_serial_pv', models.CharField(blank=True, max_length=30, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ecf',
                'db_table_comment': 'Cadastro de Impressora Fiscal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCEqp',
            fields=[
                ('id_equipamento', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=60, null=True)),
                ('serial', models.CharField(blank=True, max_length=30, null=True)),
                ('modelo', models.CharField(blank=True, max_length=30, null=True)),
                ('garantia', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_eqp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFam',
            fields=[
                ('id_familia', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=30, null=True)),
                ('faz_corr_preco_perfil', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_fam',
                'db_table_comment': 'Cadastro de Familia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFor',
            fields=[
                ('id_fornecedor', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('fantasia', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=50)),
                ('end_complemento', models.CharField(blank=True, max_length=30, null=True)),
                ('cep', models.CharField(max_length=9)),
                ('numero', models.CharField(max_length=10)),
                ('cp', models.CharField(blank=True, max_length=10, null=True)),
                ('tel_fixo', models.CharField(blank=True, max_length=14, null=True)),
                ('tel_movel', models.CharField(blank=True, max_length=14, null=True)),
                ('fax', models.CharField(blank=True, max_length=14, null=True)),
                ('doc_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('doc_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('doc_ie', models.CharField(blank=True, max_length=20, null=True)),
                ('doc_im', models.CharField(blank=True, max_length=20, null=True)),
                ('bairro', models.CharField(max_length=40)),
                ('ativo', models.BooleanField()),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('lim_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_fundacao', models.DateField(blank=True, null=True)),
                ('dta_cadastro', models.DateField()),
                ('senha_cotacao', models.CharField(blank=True, max_length=30, null=True)),
                ('fin_conta', models.IntegerField(blank=True, null=True)),
                ('fin_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('fin_banco', models.IntegerField(blank=True, null=True)),
                ('fin_favor', models.CharField(blank=True, max_length=50, null=True)),
                ('metodo1_norma_aplicavel', models.CharField(blank=True, max_length=60, null=True)),
                ('metodo1_data_validade', models.DateField(blank=True, null=True)),
                ('metodo2_data_recebimento', models.DateField(blank=True, null=True)),
                ('metodo2_situacao', models.IntegerField(blank=True, null=True)),
                ('metodo2_proc_qualificacao', models.CharField(blank=True, max_length=80, null=True)),
                ('metodo3_metodo', models.IntegerField(blank=True, db_comment='0 - Amostra\r\n1 - Pesquisa de mercado\r\n2 - IndicaþÒo do fabricante\r\n3 - Curriculum vitae\r\n4 - Auto avaliaþÒo\r\n', null=True)),
                ('metodo3_data', models.DateField(blank=True, null=True)),
                ('metodo3_numero_nf', models.CharField(blank=True, max_length=30, null=True)),
                ('transportadora', models.BooleanField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('tipo_fornecedor', models.IntegerField(blank=True, null=True)),
                ('cod_pais', models.CharField(blank=True, max_length=5, null=True)),
                ('regime', models.IntegerField(blank=True, db_comment='0 - Simples Nacional; \r\n1 - Normal - Lucro Presumido\r\n2 - Normal - Lucro Real', null=True)),
                ('aval_ctc_perg_01', models.IntegerField(blank=True, db_comment='0 - NÒo;  1 - Sim;   2 - NÒo se aplica;', null=True)),
                ('aval_ctc_perg_02', models.IntegerField(blank=True, db_comment='0 - NÒo;  1 - Sim;   2 - NÒo se aplica;', null=True)),
                ('aval_ctc_perg_03', models.IntegerField(blank=True, db_comment='0 - NÒo;  1 - Sim;   2 - NÒo se aplica;', null=True)),
                ('aval_ctc_perg_04', models.IntegerField(blank=True, db_comment='0 - NÒo;  1 - Sim;   2 - NÒo se aplica;', null=True)),
                ('metodo2_sit_justificativa', models.CharField(blank=True, db_comment='Este campo nasceu na necessidade do m¾dulo CTC.', max_length=100, null=True)),
                ('metodo3_observacoes', models.CharField(blank=True, db_comment='Este campo surgiu na necessidade do m¾dulo CTC.', max_length=150, null=True)),
                ('contribuinte', models.IntegerField(blank=True, db_comment='0 - Contribuinte de ICMS\n1 - NÒo Contribuinte de ICMS\n2 - ISENTO', null=True)),
                ('dias_entrega', models.IntegerField(blank=True, null=True)),
                ('cod_fab_danfe', models.BooleanField(blank=True, null=True)),
                ('fin_conta_dig', models.CharField(blank=True, max_length=1, null=True)),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('metodo3_dta_auto_avaliacao', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_for',
                'db_table_comment': 'Tabela de Cadastro de Fornecedores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFpg',
            fields=[
                ('id_forma_pag', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('doc_impresso', models.IntegerField(db_comment='0 - Nenhum,\r\n1 - Duplicata,\r\n2 - Promissoria,\r\n3 - Cartao,\r\n4 - Boleto,\r\n5 - Dinheiro,\r\n6 - Cheque \r\n7 - Credito, 8 - PIX')),
                ('car_deb_cre', models.IntegerField(db_comment='Se o cartÒo Ú DÚbito ou CrÚdito')),
                ('car_taxa', models.FloatField(blank=True, db_comment='Taxa de administraþÒo do cartÒo.', null=True)),
                ('car_dia_pag', models.IntegerField(blank=True, null=True)),
                ('car_conta', models.IntegerField(blank=True, null=True)),
                ('car_telefone', models.CharField(blank=True, max_length=13, null=True)),
                ('cri_debi_cliente', models.BooleanField()),
                ('gera_caixa_banco', models.BooleanField()),
                ('tipo_pagamento', models.IntegerField(db_comment='0 - AVista,\n1 - APrazo,\n2 - SemPagamento')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('taxa_antecipacao', models.FloatField(blank=True, db_comment='Campo utilizado pela tela de conciliaþÒo de cartÒo.', null=True)),
                ('car_bandeira', models.CharField(blank=True, db_comment='01- Visa\n02- Mastercard\n03- American Express\n04- Sorocred\n99- Outros ', max_length=2, null=True)),
                ('vlr_min_parcela', models.DecimalField(blank=True, db_comment='Campo utilizado pelo pedido de venda.', decimal_places=4, max_digits=18, null=True)),
                ('ativa_red_parc_car_rec', models.BooleanField(blank=True, null=True)),
                ('aval_duplicata', models.BooleanField(blank=True, null=True)),
                ('dias_vencimento', models.IntegerField(blank=True, null=True)),
                ('qtde_red_parc_car_rec', models.IntegerField(blank=True, null=True)),
                ('utilizado_ped_vnd', models.BooleanField(blank=True, null=True)),
                ('sgq_prestacao_conta', models.BooleanField(blank=True, db_comment='Este campo Ú utilizado pela consulta do cliente, no botÒo Extrato do cliente. Serve para indicar os tÝtulos que estÒo em aberto, Ú que sÒo para PrestaþÒo de Conta.', null=True)),
                ('acresc_dias_em_vencto', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_fpg',
                'db_table_comment': 'Tabela de Cadastro de Forma de Pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFun',
            fields=[
                ('id_funcionario', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('nome', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=50)),
                ('cep', models.CharField(max_length=9)),
                ('numero', models.CharField(max_length=10)),
                ('tel_fixo', models.CharField(blank=True, max_length=14, null=True)),
                ('tel_movel', models.CharField(blank=True, max_length=14, null=True)),
                ('doc_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('doc_identidade', models.CharField(blank=True, max_length=11, null=True)),
                ('bairro', models.CharField(max_length=40)),
                ('estado', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('sexo', models.IntegerField()),
                ('dta_nascimento', models.DateField()),
                ('dta_cadastro', models.DateField()),
                ('login', models.CharField(blank=True, max_length=30, null=True)),
                ('senha', models.CharField(blank=True, max_length=100, null=True)),
                ('dta_senha_expira', models.DateField(blank=True, null=True)),
                ('seg_alt_lim_cli', models.BooleanField(blank=True, null=True)),
                ('seg_alt_sit_cli', models.BooleanField(blank=True, null=True)),
                ('seg_alt_pre_pro', models.BooleanField(blank=True, null=True)),
                ('seg_hab_bot_exc', models.BooleanField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('seg_vis_ult_cmp_ite', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de Pesquisa de Item(F3), que terß a funþÒo de esconder o grid de dados da ·ltima compra do item.', null=True)),
                ('seg_apr_rep_cmp_ped', models.BooleanField(blank=True, db_comment='Permite ao usußrio poder Aprovar/Reprovar pedido de compra.\nImportante:  O sistema s¾ mostrarß essa opþÒo se o m¾dulo SGQ = True;', null=True)),
                ('seg_vis_msg_sol_cmp', models.BooleanField(blank=True, db_comment='Este campo tem a funþÒo de mostrar para o usußrio uma msg com as soliþitaþ§es de compras em aberto.', null=True)),
                ('seg_per_canc_orv', models.BooleanField(blank=True, db_comment='Este campo serß utilizado na tela de Ordem de Serviþo.', null=True)),
                ('seg_habilitar_seg', models.BooleanField(blank=True, db_comment='Caso este campo seja marcado, entÒo o usußrio serß obrigado a preencher os dados para login do sistema no cadastro.', null=True)),
                ('seg_redef_senha', models.BooleanField(blank=True, db_comment='Caso este campo esteja marcado, assim que este funcionßrio fizer o Login, o sistema irß abrir uma tela para que ele redefina a senha de acesso.', null=True)),
                ('seg_hab_bot_alt_fun', models.BooleanField(blank=True, db_comment='Desabilita o botÒo ALTERAR da tela de funcionßrios.', null=True)),
                ('seq_vis_msg_ped_exp_fat', models.BooleanField(blank=True, db_comment='Permite que o usußrio veja os pedidos com prazo de entrega experiado.', null=True)),
                ('seg_ctc_apg', models.BooleanField(blank=True, null=True)),
                ('seg_alt_vend_ped', models.BooleanField(blank=True, null=True)),
                ('seq_vis_alert_est_min', models.BooleanField(blank=True, null=True)),
                ('excluir_caixa', models.BooleanField(blank=True, null=True)),
                ('seg_hab_lib_brd', models.BooleanField(blank=True, db_comment='Utilizado pela tela FIN_FM_M_BRD:\nCaso este campo seja TRUE, o usußrio poderß fazer as operaþ§es de LIBERAR, BAIXAR e CANCELAR;\nCaso FALSE, nÒo terß acesso ao botÒo LIBERAR.', null=True)),
                ('seg_vis_custo_csu_ite', models.BooleanField(blank=True, null=True)),
                ('seg_zerar_est', models.BooleanField(blank=True, null=True)),
                ('seg_vis_nota_csu_ite', models.BooleanField(blank=True, null=True)),
                ('id_empresa_mob', models.IntegerField(blank=True, db_comment='Campo utilizado pelo sistema Mobile.', null=True)),
                ('vnd_interno_externo', models.IntegerField(blank=True, db_comment='0 - Vendedor Interno; 1 - Vendedor Externo', null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - Funcionßrio 1 - Tercerizado', null=True)),
                ('aniversariante_mes', models.BooleanField(blank=True, null=True)),
                ('sgq_reimprime_etq', models.BooleanField(blank=True, db_comment='Se TRUE o usußrio poderß reimprimir uma etiqueta jß impressa. \r\n', null=True)),
                ('mob_alt_preco_ped', models.BooleanField(blank=True, db_comment='Campo utilizado para informar se o usußrio pode alterar o preþo unitßrio no pedido de venda no aplicativo Produtor Mobile.', null=True)),
                ('seg_per_desc_maior', models.BooleanField(blank=True, db_comment='Permite um desconto geral no pedido de venda, onde irß chamar uma telinha.', null=True)),
                ('seg_cancelar_os', models.BooleanField(blank=True, null=True)),
                ('adm_sistema', models.BooleanField(blank=True, null=True)),
                ('per_comissao', models.FloatField(blank=True, null=True)),
                ('seg_alt_cli_ped', models.BooleanField(blank=True, null=True)),
                ('sgq_perm_alt_comissao_ped', models.BooleanField(blank=True, db_comment='Permitir alterar a comissÒo do representane', null=True)),
                ('seg_alterar_local_tit_fin', models.BooleanField(blank=True, null=True)),
                ('seg_vis_aviso_tit_spc_protesto', models.BooleanField(blank=True, null=True)),
                ('sgq_perm_botao_ger_prod', models.BooleanField(blank=True, db_comment='Permite utilizar o botÒo Gerencia ProduþÒo dos Itens.', null=True)),
                ('sgq_perm_atual_contagem', models.BooleanField(blank=True, db_comment='Irß permitir se o usußrio poderß clicar no botÒo Atualizar Contagem , da tela de Contagem de inventßrio', null=True)),
                ('sgq_vis_vlr_tot_carga', models.BooleanField(blank=True, null=True)),
                ('seg_alterar_fpg_tit_fin', models.BooleanField(blank=True, null=True)),
                ('seg_alterar_ped_sit', models.IntegerField(blank=True, db_comment='0 - NÒo se aplica;\r\n1 - Somente pedido em situaþÒo DIGITADO;\r\n2 - Somente pedido em situaþÒo DIGITADO ou APROVADO;\r\n3 - Somente pedido em situaþÒo DIGITADO, APROVADO ou EM PRODUÃ├O;\r\n', null=True)),
                ('sgq_per_comissao', models.FloatField(blank=True, db_comment='Utilizado no pedido de venda quando usa o sgq.', null=True)),
                ('per_alterar_repres', models.BooleanField(blank=True, db_comment='Se TRUE o usußrio poder alterar o campo REPRESENTANTE na tela de clientes.', null=True)),
                ('bus_som_ped_sem_pagtos', models.BooleanField(blank=True, db_comment='Buscar somente pedidos do tipo = Sem Pagamentos (CAD_TB_C_CPG) na importaþÒo para OPs.', null=True)),
                ('sgq_perm_inserir_itens_op', models.BooleanField(blank=True, db_comment='Permite incluir itens na O.P.', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_fun',
                'db_table_comment': 'Tabela de Cadastro de Funcionarios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCGrp',
            fields=[
                ('id_codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cad_tb_c_grp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCGru',
            fields=[
                ('id_grupo', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('origem_mercadoria', models.CharField(blank=True, db_comment='0 - Nacional, exceto as indicadas nos c¾digos 3 a 5\n1 - Estrangeira - ImportaþÒo direta, exceto a indicada no c¾digo 6\n2 - Estrangeira - Adquirida no mercado interno, exceto a indicada no c¾digo 7\n3 - Nacional, mercadoria ou bem com Conte·do de ImportaþÒo superior a 40% (quarenta por cento)\n4 - Nacional, cuja produþÒo tenha sido feita em conformidade com os processos produtivos bßsicos. \n5 - Nacional, mercadoria ou bem com Conte·do de ImportaþÒo inferior ou igual a 40% (quarenta por cento)\n6 - Estrangeira - ImportaþÒo direta, sem similar nacional, constante em lista de ResoluþÒo CAMEX.\n7 - Estrangeira - Adquirida no mercado interno, sem similar nacional, constante em lista de ResoluþÒo CAMEX.\n', max_length=1, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - Analitico,\n1 - Sintetico', null=True)),
                ('nivel', models.IntegerField(blank=True, null=True)),
                ('tipo_item', models.CharField(blank=True, db_comment='  00 - Mercadoria para Revenda\n  01 - Materia prima\n  02 - Embalagem\n  03 - Produto em processo\n  04 - Produto Acabado\n  05 - subproduto\n  06 - Produto Intermediario\n  07 - Material de Uso e consumo\n  08 - Ativo Imobilizado\n  09 - Serviþos\n  10 - Outros Insumos\n  99 - Outros\n', max_length=2, null=True)),
                ('mva', models.FloatField(blank=True, null=True)),
                ('promo_ativa', models.BooleanField(blank=True, null=True)),
                ('promo_perc', models.FloatField(blank=True, null=True)),
                ('ali_interna_icms', models.FloatField(blank=True, null=True)),
                ('id_st_pis_entrada', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_cof_entrada', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_ipi_entrada', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_pis_saida', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_cof_saida', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_ipi_saida', models.CharField(blank=True, max_length=2, null=True)),
                ('desc_ativa', models.BooleanField(blank=True, null=True)),
                ('desc_perc', models.FloatField(blank=True, null=True)),
                ('per_ipi', models.FloatField(blank=True, null=True)),
                ('id_cla', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_fte_etq', models.IntegerField(blank=True, null=True)),
                ('ser_terceiro', models.BooleanField(blank=True, db_comment='Serviþo de Terceiro, campo utilizado na modulo de oficina.', null=True)),
                ('nome_selo_etq', models.CharField(blank=True, db_comment="Este campo Ú utilizado pela tela PCP_FM_R_ETQ (impressÒo de etiqueta)\nex:  'selo_0001.png'", max_length=100, null=True)),
                ('imprime_selo_etq', models.BooleanField(blank=True, db_comment='Caso seja TRUE , no momento da impressÒo o sistema irß utilizar o mesmo lay-out de ColchÒo Bordado, mas sem a imagem do selo.', null=True)),
                ('imprime_msq_etq', models.BooleanField(blank=True, null=True)),
                ('msg_etq1', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq2', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq3', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq4', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq5', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq6', models.CharField(blank=True, max_length=100, null=True)),
                ('msg_etq7', models.CharField(blank=True, max_length=100, null=True)),
                ('ctc_epi', models.BooleanField(blank=True, null=True)),
                ('aliquota_ecf', models.CharField(blank=True, max_length=20, null=True)),
                ('part_perc_fcp', models.FloatField(blank=True, db_comment='Percentual de fundo de combate a pobreza.', null=True)),
                ('fp_per_lucro_ven', models.FloatField(blank=True, db_comment='Colocar no cadastro de grupo', null=True)),
                ('dre_perc_out_ded_ven', models.FloatField(blank=True, null=True)),
                ('dre_perc_ircs', models.FloatField(blank=True, null=True)),
                ('ctr_lot_entr', models.BooleanField(blank=True, null=True)),
                ('imp_etq_simples', models.BooleanField(blank=True, null=True)),
                ('path_etq_simples', models.CharField(blank=True, max_length=100, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('sgq_inf_qtde_ite_carg', models.BooleanField(blank=True, db_comment='Se este campo estiver marcado , quer dizer que o usußrio no momento da conferÛncia de carga poderß informar a Qtde total do item para conferir.', null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('utiliza_lote', models.BooleanField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='1 - Pneu', null=True)),
                ('sgq_verif_cod_barra_ped', models.BooleanField(blank=True, db_comment='utilizado no momento do pedido de venda para verificar se o produto Ú obrigado a ter o c¾digo de barra (GTIN)', null=True)),
                ('sgq_descartar_op_etq_cof', models.BooleanField(blank=True, db_comment='Para os itens que precisa informar a Qtde de etiquetas que vai sair, esse parÔmetro serve para dizer se o sistema tem que levar em consideraþÒo o saldo disponivel em cima da OP da etiqueta ou nÒo.', null=True)),
                ('sgq_bloco_espuma', models.BooleanField(blank=True, db_comment='Se for TRUE o sistema entenderß que os itens deste grupo serÒo do tipo Bloco de Espuma. ', null=True)),
                ('sgq_calc_bloco_produzir', models.BooleanField(blank=True, db_comment='Indica se faz parte de cßlculo p/gerar a O.P do bloco de espuma', null=True)),
                ('id_item_bloco_espuma', models.IntegerField(blank=True, db_comment='S¾ pode aceitar item que faþa parte de grupo de estoque que Ú do tipo Bloco de Espuma.', null=True)),
                ('id_item_bloco_espuma_2', models.IntegerField(blank=True, null=True)),
                ('id_item_bloco_espuma_3', models.IntegerField(blank=True, null=True)),
                ('id_item_bloco_espuma_revest_1', models.IntegerField(blank=True, null=True)),
                ('id_item_bloco_espuma_revest_2', models.IntegerField(blank=True, null=True)),
                ('rastrea_espumacao', models.BooleanField(blank=True, null=True)),
                ('rastrea_laminacao', models.BooleanField(blank=True, null=True)),
                ('rastrea_bordadeira', models.BooleanField(blank=True, null=True)),
                ('rastrea_corte_costura', models.BooleanField(blank=True, null=True)),
                ('rastrea_colagem_tampo_alfin', models.BooleanField(blank=True, null=True)),
                ('rastrea_colagem_molas', models.BooleanField(blank=True, null=True)),
                ('rastrea_montagem_caixa_box', models.BooleanField(blank=True, null=True)),
                ('exibe_na_impressao_op', models.BooleanField(blank=True, null=True)),
                ('nome_selo_inmetro_etq', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_gru',
                'db_table_comment': 'Tabela de Grupo de Produtos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCGruCor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'cad_tb_c_gru_cor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCHfg',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('nivel', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_hfg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCInf',
            fields=[
                ('id_inf', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=800)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_inf',
                'db_table_comment': 'Cadastro de Informaþ§es do Fisco',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIte',
            fields=[
                ('id_item', models.IntegerField(primary_key=True, serialize=False)),
                ('ativo', models.BooleanField()),
                ('cardapio', models.BooleanField()),
                ('descricao', models.CharField(max_length=100)),
                ('fantasia', models.CharField(blank=True, max_length=30, null=True)),
                ('referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('aplicacao', models.CharField(blank=True, max_length=100, null=True)),
                ('emb_compra', models.FloatField(blank=True, null=True)),
                ('emb_venda', models.FloatField(blank=True, null=True)),
                ('cod_barra', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('pes_liquido', models.FloatField(blank=True, null=True)),
                ('pes_bruto', models.FloatField(blank=True, null=True)),
                ('est_minimo', models.FloatField(blank=True, null=True)),
                ('loca_rua', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=4, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=4, null=True)),
                ('cubagem', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tam_largura', models.FloatField(blank=True, null=True)),
                ('tam_comprimento', models.FloatField(blank=True, null=True)),
                ('tam_espessura', models.FloatField(blank=True, null=True)),
                ('densidade', models.IntegerField(blank=True, null=True)),
                ('densidade_2', models.IntegerField(blank=True, null=True)),
                ('densidade_3', models.IntegerField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo\n0 - Normal\n1 - TAMPO  - Utilizado pela bordadeira\n2 - FAIXA  - Utilizado pela bordadeira \n3 - ESPUMA - Utilizado pelo bloco cilindrico  \n', null=True)),
                ('geracao_lote_interno', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nTodo produto tem que ter o seu lote_interno que Ú gerado pelo sistema, isso Ú devido a rastreabilidade.\nO produto pode ter o seu lote gerado a partir de:  \n\n0 - Nota fiscal de entrada, 1 - EspumaþÒo, 2 - Bordadeira, 3 - InspeþÒo de Itens \n, 4 - NÒo utiliza   ', null=True)),
                ('destino_reclamado', models.IntegerField(blank=True, db_comment='Campo utilizado somente no sistema de produþÒo.\nEste campo serß utilizado pela rotina de Atendimento das reclamaþ§es do cliente: PCP_FM_M_ACR.         \n0 - Nenhum\n1 - Flocagem\n2 - Descarte', null=True)),
                ('etiq_classificacao_pro', models.IntegerField(blank=True, db_comment='Campo utilizado no sistema de produþÒo.\nEste campo foi direcinado para a tabela PCP_TB_C_CLE (ID_CLE)', null=True)),
                ('etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('etiq_madeira', models.CharField(blank=True, max_length=200, null=True)),
                ('etiq_espuma1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento1', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento2', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento3', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_recomendacoes_1', models.CharField(blank=True, max_length=80, null=True)),
                ('etiq_recomendacoes_2', models.CharField(blank=True, max_length=80, null=True)),
                ('lote_fabric_obrigatorio', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela controle de inspeþÒo e recebimento de produto (EST_FM_M_NFE_S). \nIsso server para dizer se o campo lote do fabricante Ú obrigat¾rio.', null=True)),
                ('preco_avista', models.DecimalField(blank=True, db_comment='Descricao completa, campo utilizado no enBueld.', decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('etiq_modelo', models.CharField(blank=True, max_length=70, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('des_completa', models.CharField(blank=True, max_length=250, null=True)),
                ('rt_pricipio_ativo', models.CharField(blank=True, max_length=400, null=True)),
                ('rt_composicao', models.CharField(blank=True, max_length=400, null=True)),
                ('ret_emb_capacidade', models.CharField(blank=True, max_length=20, null=True)),
                ('ret_emb_nao_lavavel', models.IntegerField(blank=True, db_comment='0 - Contaminada\n1 - NÒo-Contaminada', null=True)),
                ('ret_emb_lavaveis', models.IntegerField(blank=True, db_comment='0 - Plßstico\n1 - Metal\n2 - Vidro', null=True)),
                ('cod_onu', models.CharField(blank=True, max_length=20, null=True)),
                ('sgq_critica_laudo_fab', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de InspeþÒo de Itens (FAT_FM_M_IQM).', null=True)),
                ('tam_observacoes', models.CharField(blank=True, max_length=150, null=True)),
                ('etiq_id_cue', models.IntegerField(blank=True, db_comment='Refere-se a tabela PCP_TB_C_CUE.', null=True)),
                ('preco_avista_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco_aprazo_ant_reajuste', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_ult_reajuste', models.DateField(blank=True, null=True)),
                ('rt_registro', models.CharField(blank=True, max_length=25, null=True)),
                ('custo_servico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_item_anterior', models.IntegerField(blank=True, null=True)),
                ('preco_sugerido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('etiq_espuma4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_espuma6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento4', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento5', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_revestimento6', models.CharField(blank=True, max_length=300, null=True)),
                ('etiq_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('sgq_tamanho_ite_epp', models.FloatField(blank=True, db_comment='Campo utilizado pelo relat¾rio de Entrada de Produto Acabado', null=True)),
                ('tipo_servico', models.BooleanField(blank=True, null=True)),
                ('mob_nome_foto', models.CharField(blank=True, max_length=60, null=True)),
                ('pneu_largura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_altura', models.CharField(blank=True, max_length=10, null=True)),
                ('pneu_aro', models.CharField(blank=True, max_length=10, null=True)),
                ('id_marca', models.IntegerField(blank=True, null=True)),
                ('sgq_personalizado', models.BooleanField(blank=True, db_comment='produto utilizado pelo m¾dulo sgq.', null=True)),
                ('temp_etiq_medidas', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_item_prod', models.IntegerField(blank=True, db_comment='c¾digo do item da produþÒo ', null=True)),
                ('etiq_tipo_produto', models.IntegerField(blank=True, db_comment='0 - COLCH├O DE ESPUMA\r\n1 - COLCH├O BOX CONJUGADO\r\n2 - COLCH├O AUXILIAR\r\n3 - COLCH├O MISTO\r\n', null=True)),
                ('tam_esp_espessura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comprimento_3', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_3', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_3', models.FloatField(blank=True, null=True)),
                ('tipo_produto', models.IntegerField(blank=True, db_comment='0 - Outros\r\n1 - Manual do Usußrio\r\n2 - Espuma\r\n3 - Bobina\r\n4 - ColchÒo de espuma\r\n5 - ColchÒo de molas\r\n6 - Cama Box\r\n7 - Base Box\r\n8 - Travesseiro\r\n9 - Colchonete\r\n10 - Encosto\r\n11 - Maquete\r\n12 - Caixa de madeira\r\n13 - Grampo\r\n14 - Cama Box de Molas', null=True)),
                ('tam_esp_espessura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_espessura_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_comp_revest_2', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_1', models.FloatField(blank=True, null=True)),
                ('tam_esp_largura_revest_2', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('cubagem_esp_revest_2', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_1', models.FloatField(blank=True, null=True)),
                ('densidade_esp_revest_2', models.FloatField(blank=True, null=True)),
                ('id_item_caixa', models.IntegerField(blank=True, db_comment='Aqui deve ser informado o item do tipo (CAIXA) que Ú utilizado para produzir as bases box, cama box', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ite',
                'db_table_comment': 'Cadastro de Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteCul',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_cul',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCLto',
            fields=[
                ('id_local_titulo', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('em_protesto', models.BooleanField(blank=True, null=True)),
                ('em_spc', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_lto',
                'db_table_comment': 'Tabela de Local de Titulo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCMar',
            fields=[
                ('id_mar', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_mar',
                'db_table_comment': 'Cadastro de Marcas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCMct',
            fields=[
                ('id_maquineta', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=30, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_mct',
                'db_table_comment': 'Cadastro de Maquinetas de CartÒo de CrÚdito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCMtv',
            fields=[
                ('ano', models.IntegerField()),
                ('id_mtv', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cad_tb_c_mtv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCMve',
            fields=[
                ('id_mve', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_mve',
                'db_table_comment': 'Tabela de Cadastro Modelo de Veiculo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCNat',
            fields=[
                ('id_classe', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_nat',
                'db_table_comment': 'Tabela de Naturezas (Classes)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCNcm',
            fields=[
                ('id_ncm', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=100)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('per_imposto', models.FloatField(blank=True, null=True)),
                ('cest', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ncm',
                'db_table_comment': 'Cadastro de NCM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCNtr',
            fields=[
                ('codigo', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ntr',
                'db_table_comment': 'Cadastro Natureza da Receita',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPai',
            fields=[
                ('id_pais', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pai',
                'db_table_comment': 'Cadastro de Pais',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPar',
            fields=[
                ('id_empresa', models.IntegerField(primary_key=True, serialize=False)),
                ('emp_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('emp_razao', models.CharField(max_length=50)),
                ('emp_endereco', models.CharField(max_length=50)),
                ('emp_numero', models.CharField(max_length=10)),
                ('emp_complemento', models.CharField(blank=True, max_length=30, null=True)),
                ('emp_bairro', models.CharField(db_comment='Bairro da Empresa', max_length=40)),
                ('emp_cep', models.CharField(max_length=9)),
                ('emp_telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('emp_fax', models.CharField(blank=True, max_length=14, null=True)),
                ('emp_email', models.CharField(blank=True, max_length=60, null=True)),
                ('emp_site', models.CharField(blank=True, max_length=60, null=True)),
                ('emp_fantasia', models.CharField(blank=True, max_length=50, null=True)),
                ('emp_im', models.CharField(blank=True, max_length=20, null=True)),
                ('emp_ie', models.CharField(blank=True, max_length=20, null=True)),
                ('emp_suframa', models.CharField(blank=True, max_length=20, null=True)),
                ('emp_numero_junta', models.CharField(blank=True, max_length=20, null=True)),
                ('res_nome', models.CharField(max_length=50)),
                ('res_qualificacao', models.CharField(blank=True, max_length=10, null=True)),
                ('res_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('res_cep', models.CharField(max_length=9)),
                ('res_endereco', models.CharField(max_length=50)),
                ('res_numero', models.CharField(max_length=10)),
                ('res_complemento', models.CharField(blank=True, max_length=30, null=True)),
                ('res_bairro', models.CharField(max_length=40)),
                ('res_cp', models.CharField(blank=True, max_length=14, null=True)),
                ('res_telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('res_fax', models.CharField(blank=True, max_length=14, null=True)),
                ('res_email', models.CharField(blank=True, max_length=60, null=True)),
                ('cnt_nome', models.CharField(max_length=50)),
                ('cnt_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('cnt_crc', models.CharField(max_length=10)),
                ('cnt_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cnt_cep', models.CharField(max_length=9)),
                ('cnt_endereco', models.CharField(max_length=50)),
                ('cnt_numero', models.CharField(max_length=10)),
                ('cnt_complemento', models.CharField(blank=True, max_length=30, null=True)),
                ('cnt_bairro', models.CharField(max_length=40)),
                ('cnt_telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('cnt_fax', models.CharField(blank=True, max_length=14, null=True)),
                ('cnt_email', models.CharField(blank=True, max_length=60, null=True)),
                ('cnt_id_cidade', models.CharField(blank=True, max_length=10, null=True)),
                ('cnt_qualificacao', models.CharField(blank=True, max_length=10, null=True)),
                ('cnt_cp', models.CharField(blank=True, max_length=14, null=True)),
                ('res_cidade', models.CharField(blank=True, max_length=30, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('res_id_cidade', models.CharField(blank=True, max_length=10, null=True)),
                ('banco', models.IntegerField(blank=True, null=True)),
                ('agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('conta_corrente', models.CharField(blank=True, max_length=20, null=True)),
                ('agencia_dig', models.IntegerField(blank=True, null=True)),
                ('conta_corrente_dig', models.IntegerField(blank=True, null=True)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par',
                'db_table_comment': 'Cadastro de Empresa e seus parametros.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPcc',
            fields=[
                ('cod_nat_cc', models.CharField(blank=True, max_length=2, null=True)),
                ('ind_cta', models.CharField(blank=True, max_length=1, null=True)),
                ('cod_cta', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nome_cta', models.CharField(blank=True, max_length=60, null=True)),
                ('cod_cta_ref', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pcc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPct',
            fields=[
                ('id_plano', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('tipo', models.IntegerField(db_comment='0 - Analitico,\n1 - Sintetico')),
                ('tipo_mov', models.IntegerField(db_comment='0 - Fixa,\n1 - Variavel')),
                ('tipo_desp', models.IntegerField(db_comment='0 - Despesas,\r\n1 - Receitas,\r\n2 - SemFluxo,\r\n3 - Tributos,\r\n4 - Resultado, 5 - Investimento ')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('estr_dre', models.IntegerField(blank=True, db_comment='0 - Imposto e Custo sobre Vendas\r\n1 - Despesas Operacionais\r\n2 - Receitas NÒo Operacionais\r\n3 - Provis§es para o Imposto\r\n4 - Nenhum', null=True)),
                ('cod_contabil', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pct',
                'db_table_comment': 'Cadastro de Plano de Contas.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPec',
            fields=[
                ('id_perfil_cli', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('per_correcao', models.FloatField(blank=True, null=True)),
                ('operacao', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('per_correcao_aprazo', models.FloatField(blank=True, null=True)),
                ('per_correcao_financeiro', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pec',
                'db_table_comment': 'Cadastro de Perfil de Cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPes',
            fields=[
                ('id_perfil_seg', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pes',
                'db_table_comment': 'Cadastro de Perfil de Seguranþa.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPrg',
            fields=[
                ('id_prg', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=100)),
                ('nome_programa', models.CharField(blank=True, max_length=30, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='   0 - Formulßrio\n   1 - Relatorios', null=True)),
                ('menu_ordem', models.IntegerField(blank=True, null=True)),
                ('modulo', models.IntegerField(blank=True, null=True)),
                ('menu_path', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_prg',
                'db_table_comment': 'Cadastro de Programas do enSoft',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCRam',
            fields=[
                ('id_ramo', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('regime_tributario', models.IntegerField(db_comment='0 - SimplesNacional,\n1 - LucroPresumido,\n2 - LucroReal')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ram',
                'db_table_comment': 'Tabela de Ramo de Atividade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCRvd',
            fields=[
                ('id_rvd', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'cad_tb_c_rvd',
                'db_table_comment': 'Cadastro de Revendas.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCSeq',
            fields=[
                ('id_tabela', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_seq',
                'db_table_comment': 'Tabela de Sequencia de Cadastros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCSet',
            fields=[
                ('id_setor', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('lote_controla', models.BooleanField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - LaminaþÒo\r\n;1 - Bordadeira;2 - Colagem\r\n;3 - Costura;4 - Alfinetagem\r\n;5 - EspumaþÒo;6 - RevisÒo;7 - Outros\r\n8 - Colchoaria', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_set',
                'db_table_comment': 'Cadastro de Setores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTam',
            fields=[
                ('id_tamanho', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=40, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tam',
                'db_table_comment': 'Cadastro de Tamanhos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTdf',
            fields=[
                ('id_tdf', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tdf',
                'db_table_comment': 'Cadastro de Tipo de Defeito.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTif',
            fields=[
                ('id_tipo_financeiro', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('natureza', models.IntegerField(db_comment='0 - Debito\n1 - CrÚdito')),
                ('sigla', models.CharField(max_length=10)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('gera_pag', models.BooleanField(blank=True, null=True)),
                ('cri_exporta', models.BooleanField(blank=True, db_comment='Ativa exportaþÒo no movimento de caixa/banco.', null=True)),
                ('prestacao_conta', models.BooleanField(blank=True, null=True)),
                ('gera_deb_cre', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tif',
                'db_table_comment': 'Cadastro de Tipo Financeiro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTme',
            fields=[
                ('id_tipo_mov_estoque', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('tipo_movimento', models.IntegerField(db_comment='0 - Entrada,\n1 - Saida')),
                ('ativo', models.BooleanField()),
                ('esto_critica', models.BooleanField()),
                ('esto_movimenta', models.BooleanField()),
                ('indicador', models.IntegerField(db_comment='0 - Normal,\n1 - DevoluþÒo,\n2 - Tranferencia')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_servico_dentro', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_servico_fora', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_interno_icm_s_pf', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_interno_icm_s_pj', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_externo_icm_s_pf', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_externo_icm_s_pj', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_exterior_pf', models.CharField(blank=True, max_length=5, null=True)),
                ('cfo_exterior_pj', models.CharField(blank=True, max_length=5, null=True)),
                ('bonificacao', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tme',
                'db_table_comment': 'Cadastro de Tipo de Estoque.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTri',
            fields=[
                ('id_tributo', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=40)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tri',
                'db_table_comment': 'Cadastro de TributaþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCUnd',
            fields=[
                ('id_unidade', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=30)),
                ('num_decimais', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('inf_tempo_ite_coj', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_und',
                'db_table_comment': 'Cadastro deUnidade de Medida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCVei',
            fields=[
                ('id_veiculo', models.IntegerField(primary_key=True, serialize=False)),
                ('id_placa', models.CharField(blank=True, max_length=8, null=True)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('km_aquisicao', models.FloatField(blank=True, null=True)),
                ('dta_aquisicao', models.DateField(blank=True, null=True)),
                ('km_atual', models.FloatField(blank=True, null=True)),
                ('chassi', models.CharField(blank=True, max_length=20, null=True)),
                ('ano_modelo', models.CharField(blank=True, max_length=4, null=True)),
                ('ano_fabricacao', models.CharField(blank=True, max_length=4, null=True)),
                ('renavam', models.CharField(blank=True, max_length=20, null=True)),
                ('alimentacao', models.IntegerField(blank=True, db_comment='0-InjeþÒo Eletr¶nica\n1-Carburador\n2-Bomba Injetora', null=True)),
                ('combustivel', models.IntegerField(blank=True, db_comment='0-Gasolina\n1-Alcool\n2-Diesel\n3-Gas Natural\n4-Eletrico\n5-Flex', null=True)),
                ('serie', models.CharField(blank=True, max_length=11, null=True)),
                ('motor', models.CharField(blank=True, max_length=11, null=True)),
                ('motor_num', models.CharField(blank=True, max_length=20, null=True)),
                ('rastreado', models.BooleanField()),
                ('tipo', models.IntegerField(db_comment='0-Veiculo\n1-Trator/Implemento')),
                ('status', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('media_consumo', models.FloatField(blank=True, null=True)),
                ('eqp_terceiro', models.BooleanField(blank=True, null=True)),
                ('tipo_rodado', models.SmallIntegerField(blank=True, db_comment='0-NÒo Aplicavel, \n1-Truck, \n2-Toco, \n3-Cavalo Mecanico, \n4-VAN, \n5-Utilitario, \n6-Outros', null=True)),
                ('tipo_carroceria', models.SmallIntegerField(blank=True, db_comment='0-NaoAplicavel, \n1-Aberta, \n2-Fechada, \n3-Graneleira, \n4-PortaContainer, \n5-Sider', null=True)),
                ('cap_veiculo', models.FloatField(blank=True, db_comment='Capacidade do veiculo', null=True)),
                ('tara', models.FloatField(blank=True, null=True)),
                ('uf_licenciado', models.CharField(blank=True, db_comment='UF em que veÝculo estß licenciado.', max_length=2, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('cubagem_carga', models.FloatField(blank=True, null=True)),
                ('placa_reboque', models.CharField(blank=True, db_comment='Este campo serß preenchido quando o campo TIPO_RODADO for igual a CAVALO MEC┬NICO.', max_length=8, null=True)),
                ('tara_reboque', models.FloatField(blank=True, null=True)),
                ('cap_reboque', models.FloatField(blank=True, null=True)),
                ('cubagem_reboque', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_vei',
                'db_table_comment': 'Cadastro de Veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCVit',
            fields=[
                ('id_visita', models.IntegerField(primary_key=True, serialize=False)),
                ('doc_cnpj_cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('id_veiculo', models.IntegerField(blank=True, null=True)),
                ('dta_visita', models.DateField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=500, null=True)),
                ('recomendacoes', models.CharField(blank=True, max_length=500, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
                ('hor_ini', models.TimeField(blank=True, null=True)),
                ('hor_fim', models.TimeField(blank=True, null=True)),
                ('semana', models.IntegerField(blank=True, null=True)),
                ('placa', models.CharField(blank=True, max_length=8, null=True)),
                ('id_pedido_mobile', models.IntegerField(blank=True, null=True)),
                ('tipo_mobile', models.IntegerField(blank=True, db_comment='0 - Visita normal (carro pr¾prio)\n1 - Intervalo\n2 - FinalizaþÒo do Dia\n3 - Visita acompanhada.\n', null=True)),
                ('remarcar_vis', models.BooleanField(blank=True, null=True)),
                ('dta_prox_vis', models.DateField(blank=True, null=True)),
                ('semana_prox_vis', models.IntegerField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('semana_visitada', models.IntegerField(blank=True, db_comment='Corresponde a semana real que o vendedor visitou o cliente.', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_vit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMCot',
            fields=[
                ('id_cotacao', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_cotacao', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_lancador', models.CharField(blank=True, max_length=30, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('situacao', models.IntegerField(blank=True, null=True)),
                ('aprovada', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_cot',
                'db_table_comment': 'CotaþÒo de Preþos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPed',
            fields=[
                ('id_pedido', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_pedido', models.DateField()),
                ('dta_entrega', models.DateField(db_comment='Data que o fornecedo irß entregar a mercadoria.')),
                ('observacao', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.IntegerField(db_comment='0 - Pendente\n1 - Entregue Parcial\n2 - Entregue Total\n3 - Finalisado')),
                ('vlr_ipi', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('condicoes_pagamento', models.CharField(blank=True, max_length=60, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_cotacao', models.IntegerField(blank=True, null=True)),
                ('id_solicitacao', models.IntegerField(blank=True, null=True)),
                ('aprovado', models.BooleanField(blank=True, db_comment='Este campo terß utilidade caso m¾dulo SGQ = true;', null=True)),
                ('id_resp_aprov', models.IntegerField(blank=True, db_comment='Este campo terß utilidade caso m¾dulo SGQ = true;', null=True)),
                ('dta_aprov', models.DateField(blank=True, db_comment='Este campo terß utilidade caso m¾dulo SGQ = true;', null=True)),
                ('hor_aprov', models.TimeField(blank=True, db_comment='Este campo terß utilidade caso m¾dulo SGQ = true;', null=True)),
                ('ind_frete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_ped',
                'db_table_comment': 'Pedido a Fornecedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMSol',
            fields=[
                ('id_solicitacao', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_solicitacao', models.DateField()),
                ('status', models.IntegerField()),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('id_op', models.IntegerField()),
                ('id_cotacao_imp', models.IntegerField(blank=True, null=True)),
                ('id_pedido_imp', models.IntegerField(blank=True, null=True)),
                ('selecao', models.BooleanField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_opr_req', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_sol',
                'db_table_comment': 'SolicitaþÒo de Compras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCEoc',
            fields=[
                ('id_estrutura', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_eoc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCEpi',
            fields=[
                ('id_epi', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=30, null=True)),
                ('id_unidade', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_epi',
                'db_table_comment': 'CADASTRO DE EPI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCObr',
            fields=[
                ('id_obra', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cliente', models.IntegerField()),
                ('descricao', models.CharField(max_length=50)),
                ('ativo', models.BooleanField()),
                ('endereco', models.CharField(max_length=50)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('tel_fixo', models.CharField(blank=True, max_length=14, null=True)),
                ('fax', models.CharField(blank=True, max_length=14, null=True)),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
                ('dta_entrega', models.DateField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_obr',
                'db_table_comment': 'Cadastro de Obras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCOco',
            fields=[
                ('id_ocorrencia', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_oco',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCTpr',
            fields=[
                ('id_tpr', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_tpr',
                'db_table_comment': 'Cadastro de Tabela de precos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMApg',
            fields=[
                ('id_apg', models.IntegerField(primary_key=True, serialize=False)),
                ('dia', models.CharField(max_length=2)),
                ('historico', models.CharField(max_length=100)),
                ('vlr_previsto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_apg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMAvf',
            fields=[
                ('id_avf', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_avf', models.DateField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('id_fornecedor', models.IntegerField(blank=True, null=True)),
                ('nom_fornecedor', models.CharField(blank=True, max_length=50, null=True)),
                ('doc_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('perg_01', models.BooleanField(blank=True, null=True)),
                ('perg_02', models.BooleanField(blank=True, null=True)),
                ('perg_03', models.BooleanField(blank=True, null=True)),
                ('perg_04', models.BooleanField(blank=True, null=True)),
                ('criterio_01', models.FloatField(blank=True, null=True)),
                ('criterio_02', models.FloatField(blank=True, null=True)),
                ('criterio_03', models.FloatField(blank=True, null=True)),
                ('criterio_04', models.FloatField(blank=True, null=True)),
                ('criterio_05', models.FloatField(blank=True, null=True)),
                ('criterio_06', models.FloatField(blank=True, null=True)),
                ('criterio_07', models.FloatField(blank=True, null=True)),
                ('peso_01', models.FloatField(blank=True, null=True)),
                ('peso_02', models.FloatField(blank=True, null=True)),
                ('peso_03', models.FloatField(blank=True, null=True)),
                ('peso_04', models.FloatField(blank=True, null=True)),
                ('peso_05', models.FloatField(blank=True, null=True)),
                ('peso_06', models.FloatField(blank=True, null=True)),
                ('peso_07', models.FloatField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('media', models.FloatField(blank=True, null=True)),
                ('for_aprovado', models.BooleanField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_avf',
                'db_table_comment': 'AvalialþÒo de Fornecedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMBde',
            fields=[
                ('id_bde', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('id_meq', models.IntegerField(blank=True, null=True)),
                ('dta_bde', models.DateField(blank=True, null=True)),
                ('id_operador', models.IntegerField(blank=True, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_acrescimo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_comissao', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('hori_inicial', models.FloatField(blank=True, null=True)),
                ('hori_final', models.FloatField(blank=True, null=True)),
                ('vlr_combustivel', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('hori_total', models.FloatField(blank=True, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('nro_bde', models.IntegerField(blank=True, null=True)),
                ('qtde_combustivel', models.FloatField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_bde',
                'db_table_comment': 'BOLETIM DIARIO DE EQUIPAMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMBdeVrf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_bde', models.IntegerField(blank=True, null=True)),
                ('id_verificacao', models.IntegerField(blank=True, null=True)),
                ('pad_buz_funciona', models.CharField(blank=True, db_comment='A buzina estß funcionando?', max_length=1, null=True)),
                ('pad_extintor_incendio', models.CharField(blank=True, db_comment='O extintor de incÛndio estß em condiþ§es de uso?', max_length=1, null=True)),
                ('pad_verif_cinto_seguranca', models.CharField(blank=True, db_comment='Foi verificado o cinto de seguranþa?', max_length=1, null=True)),
                ('pad_veic_possui_mac', models.CharField(blank=True, db_comment='O veÝculo possui macaco?', max_length=1, null=True)),
                ('pad_veic_possui_chv_roda', models.CharField(blank=True, db_comment='O veÝculo possui chave de roda?', max_length=1, null=True)),
                ('pad_veic_possui_mao_forca', models.CharField(blank=True, db_comment='O veÝculo possui mÒo de forþa?', max_length=1, null=True)),
                ('pad_veic_possui_triangulo', models.CharField(blank=True, db_comment='O veÝculo possui triÔngulo de sinalizaþÒo?', max_length=1, null=True)),
                ('pad_veic_possui_martelo_mad', models.CharField(blank=True, db_comment='O veÝculo possui martelo de madeira?', max_length=1, null=True)),
                ('pad_sis_freio_funciona', models.CharField(blank=True, db_comment='Sistema de freio estß funcionando corretamente?', max_length=1, null=True)),
                ('pad_ind_pres_oleo_funciona', models.CharField(blank=True, db_comment='O indicador de pressÒo de ¾leo estß funcionando?', max_length=1, null=True)),
                ('pad_drenagem_tanq_filtro', models.CharField(blank=True, db_comment='Foi feito a drenagem do tanque e do filtro de combustÝvel?', max_length=1, null=True)),
                ('pad_verif_pres_calib_pneus', models.CharField(blank=True, db_comment='Foi verificado a pressÒo de calibragem dos pneus?', max_length=1, null=True)),
                ('pad_verif_folga_rol_rosca_fim', models.CharField(blank=True, db_comment='Foi verificada a folga dos rolamentos da rosca sem fim?', max_length=1, null=True)),
                ('pad_feita_dren_baloes_ar', models.CharField(blank=True, db_comment='Foi feita a drenagem dos bal§es de ar?', max_length=1, null=True)),
                ('pad_verif_estado_correias', models.CharField(blank=True, db_comment='Foi verificado o estado das correias?', max_length=1, null=True)),
                ('pad_verif_estado_maq_geral', models.CharField(blank=True, db_comment='Foi verificado o estado das mangueiras em geral?', max_length=1, null=True)),
                ('pad_feita_lubrif_ger_equip', models.CharField(blank=True, db_comment='Foi feita a lubrificaþÒo geral do equipamento?', max_length=1, null=True)),
                ('pad_equip_ise_vaz_hidraulico', models.CharField(blank=True, db_comment='Equipamento isento de vazamento hidra·lico?', max_length=1, null=True)),
                ('pad_verif_nivel_agua_radiador', models.CharField(blank=True, db_comment='Foi verificado o nivel de ßgua do radiador?', max_length=1, null=True)),
                ('pad_verif_nivel_oleo_mot_hid_freio', models.CharField(blank=True, db_comment='Foram verificados os niveis de ¾leo motor, hidrßulico e freio?', max_length=1, null=True)),
                ('pad_verif_conserv_polos_baterias', models.CharField(blank=True, db_comment='Foi verificado conservaþÒo dos polos das baterias?', max_length=1, null=True)),
                ('pad_verif_filtro_ar_cabine', models.CharField(blank=True, db_comment='Foi verificado o filtro de ar da cabine?', max_length=1, null=True)),
                ('pad_verif_instalacao_instrum_eletr', models.CharField(blank=True, db_comment='Foi verificado a instalaþÒo e instrumentos elÚtricos?', max_length=1, null=True)),
                ('pad_verif_estado_vidragem_ger', models.CharField(blank=True, db_comment='Foi verificado o estado da vidraþaria em geral?', max_length=1, null=True)),
                ('pad_verif_doc_equip', models.CharField(blank=True, db_comment='Foi verificada a documentaþÒo do equipamento?', max_length=1, null=True)),
                ('pad_verif_estado_mat_rodante', models.CharField(blank=True, db_comment='Foi verificado o estado do material rodante?', max_length=1, null=True)),
                ('pad_ha_vazamento_oleo_combust', models.CharField(blank=True, db_comment='Hß vazamento de ¾leo ou combustÝvel?', max_length=1, null=True)),
                ('pad_maq_kit_mitigacao', models.CharField(blank=True, db_comment='A mßquina estß equipada com kit de mitigaþÒo (Pß, bandeja de contenþÒo, lona, p¾ de serra e sacolas plßsticas?)', max_length=1, null=True)),
                ('pad_maq_ruid_excess', models.CharField(blank=True, db_comment='A mßquina apresenta ruÝdos excessivos?', max_length=1, null=True)),
                ('pneu_isento_picotamento', models.CharField(blank=True, db_comment='Pneus isentos de picotamentos?', max_length=1, null=True)),
                ('pneu_livre_corte_lateral', models.CharField(blank=True, db_comment='Pneus livres de cortes na lateral?', max_length=1, null=True)),
                ('pneu_banda_rol_isenta_solt', models.CharField(blank=True, db_comment='Banda de rolagem dos pneus isenta de soltura?', max_length=1, null=True)),
                ('imple_p_lubrif_cruz_eixo_conjunto', models.CharField(blank=True, db_comment='Foram lubrificadas as cruzetas do eixo cardam do conjunto?', max_length=1, null=True)),
                ('imple_p_bord_tom_isenta_vazam', models.CharField(blank=True, db_comment='Borda da tomada de forþa isenta de vazamento?', max_length=1, null=True)),
                ('imple_p_verif_niv_oleo_cxa_mult', models.CharField(blank=True, db_comment='Foi verificado o nÝvel de ¾leo da caixa multiplicadora', max_length=1, null=True)),
                ('imple_p_verif_corr_gax_bomba', models.CharField(blank=True, db_comment='Foi verificado a correia e a gazeta da bomba?', max_length=1, null=True)),
                ('imple_p_algum_vaz_tanq_trans_ag', models.CharField(blank=True, db_comment='Hß algum vazamento_no_tanque de transporte de ßgua?', max_length=1, null=True)),
                ('imple_b_verif_niv_oleo_hid_basc', models.CharField(blank=True, db_comment='Foi verificado o nÝvel do olÚo hidrßulico do basculante?', max_length=1, null=True)),
                ('imple_b_sis_hid_isento_vaz', models.CharField(blank=True, db_comment='Sistema hidrßulico isento de vazamento?', max_length=1, null=True)),
                ('imple_b_lub_pin_cilin_cruz_tom', models.CharField(blank=True, db_comment='Foi feita a lubrificaþÒo dos pinos dos mancais de giro, do cilindro e da cruzeta da tomada de forþa?', max_length=1, null=True)),
                ('imple_m_verif_niv_oleo_mot_comp', models.CharField(blank=True, db_comment='Foi verificado o nÝvel de ¾leo do motor e do compressor?', max_length=1, null=True)),
                ('imple_m_drenag_reserv_ar_comp', models.CharField(blank=True, db_comment='Foi feito a drenagem do reservat¾rio de ar do compressor?', max_length=1, null=True)),
                ('imple_m_prop_j_v_c_tub_isento_vaz', models.CharField(blank=True, db_comment='Propulsora, juntas, vßlvulas, conex§es e tubulaþ§es do compressor isentos de vazamentos?', max_length=1, null=True)),
                ('imple_m_lub_ger_grax', models.CharField(blank=True, db_comment='Foi feita a lubrificaþÒo geral dos graxeiros?', max_length=1, null=True)),
                ('imple_m_verif_corr_acopl_sis', models.CharField(blank=True, db_comment='Foi verificado a correia de acoplamento do sistema?', max_length=1, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_bde_vrf',
                'db_table_comment': '\r\nVeificaþ§es do equipamento informado.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMCep',
            fields=[
                ('id_cep', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('resp_tecnico', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_cep',
                'db_table_comment': 'CONTROLE DE EPI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMCfe',
            fields=[
                ('id_cfe', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, null=True)),
                ('id_funcionario', models.IntegerField(blank=True, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_cfe',
                'db_table_comment': 'CONTROLE DE FERRAMENTAS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMFac',
            fields=[
                ('id_fac', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_abertura', models.DateField(blank=True, null=True)),
                ('pro_acao', models.IntegerField(blank=True, db_comment='0-Corretiva\n1-Preventiva\n2-Melhoria', null=True)),
                ('pro_origem', models.IntegerField(blank=True, db_comment='0-Auditoria Interna\n1-Auditoria Externa\n2-Reclamaþ§es de Clientes\n3-Colaboradores\n4-Outros', null=True)),
                ('pro_id_responsavel', models.IntegerField(blank=True, null=True)),
                ('pro_descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('pro_data', models.DateField(blank=True, null=True)),
                ('aci_descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('aci_id_responsavel', models.IntegerField(blank=True, null=True)),
                ('aci_data', models.DateField(blank=True, null=True)),
                ('ava_avaliacao', models.IntegerField(blank=True, null=True)),
                ('ava_id_responsavel', models.IntegerField(blank=True, null=True)),
                ('ava_data', models.DateField(blank=True, null=True)),
                ('cap_descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('cap_id_responsavel', models.IntegerField(blank=True, null=True)),
                ('cap_data', models.DateField(blank=True, null=True)),
                ('acp_descricao_01', models.CharField(blank=True, max_length=100, null=True)),
                ('acp_descricao_02', models.CharField(blank=True, max_length=100, null=True)),
                ('acp_descricao_03', models.CharField(blank=True, max_length=100, null=True)),
                ('acp_descricao_04', models.CharField(blank=True, max_length=100, null=True)),
                ('acp_id_resp_01', models.IntegerField(blank=True, null=True)),
                ('acp_id_resp_02', models.IntegerField(blank=True, null=True)),
                ('acp_id_resp_03', models.IntegerField(blank=True, null=True)),
                ('acp_id_resp_04', models.IntegerField(blank=True, null=True)),
                ('acp_data_01', models.DateField(blank=True, null=True)),
                ('acp_data_02', models.DateField(blank=True, null=True)),
                ('acp_data_03', models.DateField(blank=True, null=True)),
                ('acp_data_04', models.DateField(blank=True, null=True)),
                ('mae_descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('aco_perg_01', models.BooleanField(blank=True, null=True)),
                ('aco_perg_02', models.BooleanField(blank=True, null=True)),
                ('aco_perg_03', models.BooleanField(blank=True, null=True)),
                ('aco_perg_04', models.BooleanField(blank=True, null=True)),
                ('aco_perg_01_prazo', models.IntegerField(blank=True, null=True)),
                ('aco_perg_02_prazo', models.IntegerField(blank=True, null=True)),
                ('aco_perg_03_fac', models.IntegerField(blank=True, null=True)),
                ('aco_perg_04_fac', models.IntegerField(blank=True, null=True)),
                ('aca_descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_fac',
                'db_table_comment': 'AþÒo Corretiva, Preventiva e de Melhorias (FAC)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMLoc',
            fields=[
                ('id_loc', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_locacao', models.DateField(blank=True, null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('num_contrato', models.IntegerField(blank=True, null=True)),
                ('num_documento', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_fornecedor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_loc',
                'db_table_comment': 'Controle de LocaþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOfi',
            fields=[
                ('id_ofi', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, null=True)),
                ('id_veiculo', models.IntegerField(blank=True, null=True)),
                ('id_fornecedor', models.IntegerField(blank=True, null=True)),
                ('problema', models.CharField(blank=True, max_length=200, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('id_solicitante', models.IntegerField(blank=True, null=True)),
                ('km_veiculo', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_ofi',
                'db_table_comment': 'Oficina - Pecas e servicos gasto em manutenþÒo dos veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOrc',
            fields=[
                ('id_orc', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_orc', models.DateField(blank=True, null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_estrutura', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_orc',
                'db_table_comment': 'Orþamento de Obras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMPme',
            fields=[
                ('id_pme', models.IntegerField(primary_key=True, serialize=False)),
                ('id_equip', models.CharField(blank=True, max_length=8, null=True)),
                ('tipo_cont', models.CharField(blank=True, max_length=20, null=True)),
                ('modelo', models.CharField(blank=True, max_length=30, null=True)),
                ('ult_manu', models.CharField(blank=True, max_length=10, null=True)),
                ('atual_manu', models.CharField(blank=True, max_length=10, null=True)),
                ('prox_manu', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_prox_manu', models.CharField(blank=True, max_length=20, null=True)),
                ('per_restante', models.CharField(blank=True, max_length=10, null=True)),
                ('per_excedido', models.CharField(blank=True, max_length=10, null=True)),
                ('local', models.CharField(blank=True, max_length=50, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('tipo_equip', models.CharField(blank=True, max_length=1, null=True)),
                ('dta_ult_dado', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_pme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMSlm',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_slm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMCte',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_contagem', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=50, null=True)),
                ('cte_tipo', models.IntegerField(db_comment='0-LocalizaþÒo\n1-Itens Movimentados\n2-Livre (qualquer item)')),
                ('localizacao', models.CharField(blank=True, max_length=30, null=True)),
                ('dta_movimento', models.DateField(blank=True, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('per_inicial', models.DateField(blank=True, null=True)),
                ('per_final', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0-Aberto\n1-Atualizado', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('corrigir_custo_medio', models.BooleanField(blank=True, db_comment='Se este campo for TRUE, o usußrio irß especificar apenas o novo valor de custo mÚdio do item.\r\nO saldo irß permanecer o mesmo.', null=True)),
                ('offline', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_cte',
                'db_table_comment': 'Contagem de Estoque',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMFea',
            fields=[
                ('id_fea', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('documento', models.IntegerField()),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('origem', models.IntegerField(db_comment='0 - Por Nota fiscal de entrada\n1 - Por Nota fiscal de saÝda\n2 - Por Ordem de saÝda\n3 - Por almoxarifado - SaÝda\n4 - Por inventßrio\n5 - Por almoxarifado - Devolucao. 6- Por Pedido de Venda 7 - Por Dev. de NF de Fornecedor  8 - Por Dev. de NF de Cliente  9 - Por abertura de OS')),
                ('id_mal', models.IntegerField(blank=True, null=True)),
                ('qtde', models.FloatField()),
                ('per_desconto', models.FloatField()),
                ('per_frete', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_frete', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_custo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_movimento', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_seq_item', models.IntegerField(blank=True, null=True)),
                ('id_pedido', models.IntegerField(blank=True, null=True)),
                ('id_controle', models.IntegerField(blank=True, db_comment='Campo utilizado para gravar o numero de controle da contagem de estoque.', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('id_ordem', models.IntegerField(blank=True, db_comment='Campo utilizado pela Ordem de Serviþo (Oficina)', null=True)),
                ('id_met', models.IntegerField(blank=True, null=True)),
                ('id_ors', models.IntegerField(blank=True, null=True)),
                ('id_epp', models.IntegerField(blank=True, null=True)),
                ('id_coj_ite', models.IntegerField(blank=True, null=True)),
                ('coj_ite_hrq', models.CharField(blank=True, max_length=50, null=True)),
                ('id_seq_coj', models.IntegerField(blank=True, null=True)),
                ('id_ordem_asub', models.IntegerField(blank=True, null=True)),
                ('id_opb', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_fea',
                'db_table_comment': 'Ficha de estqoue analitico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMInv',
            fields=[
                ('dta_inventario', models.DateField(primary_key=True, serialize=False)),
                ('qtde', models.FloatField()),
                ('custo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_inv',
                'db_table_comment': 'Inventario de estqoue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMLot',
            fields=[
                ('id_item', models.IntegerField()),
                ('num_lote', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('id_almoxarifado', models.IntegerField()),
                ('qtde_entrada', models.FloatField()),
                ('qtde_saida', models.FloatField()),
                ('qtde_atual', models.FloatField()),
                ('id_fiscal', models.IntegerField()),
                ('id_controle', models.IntegerField(db_comment='Este campo armazena o numero da contagem!')),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_lot',
                'db_table_comment': 'Tabela de Controle de Lote - PCP\nCONTROLE DE INSUMOS POR LOTE, ESTE TABELA SERA USADA NA ENTRADA E NA SAIDA DO ALMOXARIFADO.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMMal',
            fields=[
                ('id_mal', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_almoxarifado_dest', models.IntegerField(blank=True, null=True)),
                ('id_opr_req', models.IntegerField(blank=True, null=True)),
                ('hora', models.TimeField(blank=True, null=True)),
                ('id_equipamento', models.IntegerField(blank=True, null=True)),
                ('km_atual', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_mal',
                'db_table_comment': 'Movimento de Almoxarifado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMMet',
            fields=[
                ('id_met', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_met',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMEtg',
            fields=[
                ('id_entrega', models.IntegerField(primary_key=True, serialize=False)),
                ('id_pedido', models.IntegerField()),
                ('id_forma_pag', models.IntegerField()),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('mob_id_entrega', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('id_motorista', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_etg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMIqm',
            fields=[
                ('id_iqm', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('id_emitente', models.IntegerField(blank=True, null=True)),
                ('dta_recebimento', models.DateField(blank=True, null=True)),
                ('dta_emissao_nf', models.DateField(blank=True, null=True)),
                ('numero_nf', models.IntegerField(blank=True, null=True)),
                ('serie', models.CharField(blank=True, max_length=3, null=True)),
                ('sub_serie', models.CharField(blank=True, max_length=3, null=True)),
                ('id_pedido_compra', models.IntegerField(blank=True, null=True)),
                ('situacao', models.IntegerField(blank=True, db_comment='0 - em espera  1 - importado', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_iqm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMMkt',
            fields=[
                ('id_mkt', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_criacao', models.DateField()),
                ('hor_criacao', models.TimeField()),
                ('id_responsavel', models.IntegerField()),
                ('id_rota', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_vis', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_mkt',
                'db_table_comment': 'Tabela de Marketing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfe',
            fields=[
                ('id_fiscal', models.IntegerField(primary_key=True, serialize=False)),
                ('id_pedido_compra', models.IntegerField(blank=True, null=True)),
                ('id_emitente', models.IntegerField()),
                ('id_transportadora', models.IntegerField(blank=True, null=True)),
                ('uf_emitente', models.CharField(blank=True, max_length=2, null=True)),
                ('uf_empresa', models.CharField(blank=True, max_length=2, null=True)),
                ('dta_emissao', models.DateField()),
                ('dta_documento', models.DateField()),
                ('cpf_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('numero', models.IntegerField()),
                ('serie', models.CharField(max_length=3)),
                ('sub_serie', models.CharField(max_length=3)),
                ('modelo', models.CharField(max_length=2)),
                ('status', models.IntegerField()),
                ('nfe_ecf', models.IntegerField(db_comment='0-NFE; \r\n1-ECF; 2-NFCe; 3-NFSe')),
                ('ecf_prevenda', models.IntegerField(blank=True, null=True)),
                ('id_fiscal_referenciado', models.IntegerField(blank=True, null=True)),
                ('canc_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('canc_data', models.DateField(blank=True, null=True)),
                ('peso_liquido', models.FloatField(blank=True, null=True)),
                ('peso_bruto', models.FloatField(blank=True, null=True)),
                ('nfe_chave', models.CharField(max_length=44)),
                ('nfe_obs', models.CharField(blank=True, max_length=800, null=True)),
                ('nfe_protocolo', models.CharField(blank=True, max_length=50, null=True)),
                ('nfe_recibo', models.CharField(blank=True, max_length=50, null=True)),
                ('nfe_canc_protocolo', models.CharField(blank=True, max_length=50, null=True)),
                ('nfe_canc_status', models.CharField(blank=True, max_length=50, null=True)),
                ('nfe_tipo_emissao', models.CharField(blank=True, max_length=1, null=True)),
                ('nfe_tipo_ambiente', models.CharField(blank=True, max_length=1, null=True)),
                ('nfe_finalidade', models.IntegerField(blank=True, db_comment='0-Normal, \n1-Complementar, \n2-Ajuste, \n3-Devolucao', null=True)),
                ('nfe_cod_sit', models.CharField(blank=True, max_length=2, null=True)),
                ('ind_operacao', models.IntegerField(db_comment='0-Entrada,\n1-Saida')),
                ('ind_emitente', models.IntegerField()),
                ('ind_frete', models.IntegerField()),
                ('vlr_mercadoria', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_acrescimo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('icm_n_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('iss_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('iss_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_valor_st', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_valor_st', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_isenta', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_seguro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tipo_nf', models.CharField(blank=True, max_length=1, null=True)),
                ('ecf_serial_impressora', models.CharField(blank=True, max_length=60, null=True)),
                ('ecf_marca_impressora', models.CharField(blank=True, max_length=50, null=True)),
                ('ecf_modelo_impressora', models.CharField(blank=True, max_length=50, null=True)),
                ('ecf_caixa', models.CharField(blank=True, max_length=3, null=True)),
                ('dta_movimento', models.DateField()),
                ('origem_nf', models.CharField(blank=True, db_comment='A- Pedido de Venda  B- Estoque  C- Oficina  X- ImportaþÒo XML   G- Gerada de cupom fiscal ;  D - Gerado partindo do Cupom GerConWin', max_length=1, null=True)),
                ('faturada', models.BooleanField()),
                ('situacao_inspecao', models.IntegerField(blank=True, null=True)),
                ('id_fiscal_frete', models.IntegerField(blank=True, null=True)),
                ('id_pedido_venda', models.IntegerField(blank=True, null=True)),
                ('vlr_outras_desp', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_custo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_icm_ser_nao_incide', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('posvenda', models.BooleanField()),
                ('tipo_cte', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('path_xml', models.CharField(blank=True, max_length=200, null=True)),
                ('nfref_chave', models.CharField(blank=True, max_length=44, null=True)),
                ('imp_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tri_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tra_placa', models.CharField(blank=True, max_length=8, null=True)),
                ('tra_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('tra_rntc', models.CharField(blank=True, max_length=10, null=True)),
                ('tra_qtde_vol', models.FloatField(blank=True, null=True)),
                ('tra_especie', models.CharField(blank=True, max_length=30, null=True)),
                ('tra_marca', models.CharField(blank=True, max_length=30, null=True)),
                ('tra_num_vol', models.CharField(blank=True, max_length=10, null=True)),
                ('id_iqm', models.IntegerField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, db_comment='Campo utitlizado pela tela de faturamento, no momento do caixa(usußrio) Gerar NFe.', null=True)),
                ('legenda', models.CharField(blank=True, db_comment='Este campo Ú utilizado pela tela de Controle de Caixa(faturamento), para especificar a situaþÒo da NF do grid de Notas Fiscal atravÚs de cores.', max_length=20, null=True)),
                ('prevenda', models.BooleanField(blank=True, db_comment='Este campo indicar que essa nota fiscal serß um cupom fical no GerconWin.', null=True)),
                ('id_ordem', models.IntegerField(blank=True, db_comment='Campo referente ao ID_ORDEM  da tabela OFI_TB_M_ORV.', null=True)),
                ('venctos_origem', models.CharField(blank=True, db_comment='Este campo poderß ser utilizado no momento do Cupom Fiscal na tela de Controle de Caixa caso a forma de pagamento no GerConWin seja alterado.', max_length=400, null=True)),
                ('canc_usuario', models.IntegerField(blank=True, null=True)),
                ('nro_termo', models.IntegerField(blank=True, db_comment='Neste campo serß armazenado o nro do Termo impresso pela tela de Controle de Caixa atravÚs do botÒo GerarNfe.', null=True)),
                ('ind_nf', models.IntegerField(blank=True, db_comment='Este campo informa que a Nota Fiscal Ú:\n1 - Nota somente de itens;\n2 - Nota somente de Serviþo;\n3 - Nota com Itens e Serviþos;\n', null=True)),
                ('vlr_part_dest', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_part_orig', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_icm_desc', models.DecimalField(blank=True, db_comment='Desconto de ICMS.\r\n', decimal_places=2, max_digits=18, null=True)),
                ('id_ors', models.IntegerField(blank=True, db_comment='Campo utilizado pelo PCP_FM_M_ORS; (Ordem de Faturamento);', null=True)),
                ('vlr_fcp', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('di_estrangeiro', models.CharField(blank=True, max_length=20, null=True)),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('id_fiscal_ref_comp', models.IntegerField(blank=True, db_comment='Utilizado para armazenar id_fiscal da nota original a ser complementada', null=True)),
                ('dis_icm_dispensado', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_ordem_gar', models.IntegerField(blank=True, null=True)),
                ('id_seq_fat_gar', models.IntegerField(blank=True, null=True)),
                ('ped_mod_frete', models.IntegerField(blank=True, db_comment='0 - Nenhum; 1 - CIF; 2 - FOB ', null=True)),
                ('ped_vlr_frete', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('num_rps', models.IntegerField(blank=True, null=True)),
                ('iss_valor_retido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('qtde_volume', models.FloatField(blank=True, null=True)),
                ('vlr_fcp_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('vlr_fcp_st_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('vlr_fcp_st_ret_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_prod_1', models.IntegerField(blank=True, db_comment='Esse campo serß utilizado pela empresa tenha o modulo SGQ = true e o ParÔmetro Atualiza vencimentos no pedido de outra base for igual a True.', null=True)),
                ('vlr_liquido_ped_prod_1', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_prod_2', models.IntegerField(blank=True, db_comment='Esse campo serß utilizado pela empresa tenha o modulo SGQ = true e o ParÔmetro Atualiza vencimentos no pedido de outra base for igual a True.', null=True)),
                ('vlr_liquido_ped_prod_2', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_prod_3', models.IntegerField(blank=True, db_comment='Esse campo serß utilizado pela empresa tenha o modulo SGQ = true e o ParÔmetro Atualiza vencimentos no pedido de outra base for igual a True.', null=True)),
                ('vlr_liquido_ped_prod_3', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_prod_4', models.IntegerField(blank=True, db_comment='Esse campo serß utilizado pela empresa tenha o modulo SGQ = true e o ParÔmetro Atualiza vencimentos no pedido de outra base for igual a True.', null=True)),
                ('vlr_liquido_ped_prod_4', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_prod_5', models.IntegerField(blank=True, db_comment='Esse campo serß utilizado pela empresa tenha o modulo SGQ = true e o ParÔmetro Atualiza vencimentos no pedido de outra base for igual a True.', null=True)),
                ('vlr_liquido_ped_prod_5', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMOrc',
            fields=[
                ('id_orcamento', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_orcamento', models.DateField()),
                ('dta_entrega', models.DateField()),
                ('dta_validade', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
                ('status', models.IntegerField()),
                ('id_pedido', models.IntegerField()),
                ('vlr_servicos_bru', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_produtos_bru', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto_pro', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto_ser', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_servicos_liq', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_produtos_liq', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_total', models.DecimalField(decimal_places=4, max_digits=18)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_basico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_basico', models.FloatField(blank=True, null=True)),
                ('vlr_desc_especial', models.DecimalField(blank=True, decimal_places=0, max_digits=53, null=True)),
                ('per_desc_especial', models.FloatField(blank=True, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('separa_prod_serv', models.BooleanField(blank=True, null=True)),
                ('vlr_icm_desn', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_orc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPca',
            fields=[
                ('id_carregamento', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_carregamento', models.DateField()),
                ('status', models.IntegerField()),
                ('placa', models.CharField(blank=True, max_length=8, null=True)),
                ('seq_carreg_anual', models.IntegerField(blank=True, db_comment='O valor deste campo zera todo vez que se muda de ano.', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_pca',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPed',
            fields=[
                ('id_pedido', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_pedido', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('hor_pedido', models.DateTimeField(blank=True, null=True)),
                ('pcp_obs', models.CharField(blank=True, max_length=200, null=True)),
                ('pcp_id_opr', models.IntegerField(blank=True, null=True)),
                ('situacao', models.IntegerField(db_comment='0 - Em aberto     \n1 - Reprovado   \n2 - Em produþÒo \n3 - Faturado\n4 - Cancelado')),
                ('situacao_aprovacao', models.IntegerField(db_comment='0 - Em espera\n1 - Aprovado\n2 - Reprovado')),
                ('tipo_restricao', models.CharField(blank=True, db_comment='0-Debito\n1-Limite de Credito\n', max_length=100, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('justificativa', models.CharField(blank=True, max_length=100, null=True)),
                ('id_usuario_lib', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('origem', models.IntegerField(blank=True, db_comment='0-desktop\r\n1-dispositivo movel \r\n2-Pedido Cupom\r\n3-SeparaþÒo de Mercadoria\r\n4-Telemarketing', null=True)),
                ('dispositivo', models.CharField(blank=True, db_comment='Nome do dispositivo, se for desktop, colocar o nome da maquina', max_length=50, null=True)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
                ('cubagem', models.FloatField(blank=True, db_comment='Campo utilizado quando o parÔmetro SGQ = True.\nEste campo irß ter o total de cubagem de cada item do pedido.\nCßlculo:\ncubagem do CAD_TB_C_ITE * qtde  do PED_ITE\ndepois SOMA o total de cada item e grava o valor no campo CUBAGEM do FAT_TB_M_PED.\n', null=True)),
                ('id_orcamento', models.IntegerField(blank=True, null=True)),
                ('envia_carga', models.BooleanField(blank=True, db_comment='Este campo irß aparecer na tela se \no campo "ped_envia_carga" do cad_tb_c_par_ctr estiver marcado.   Caso o campo "envia_carga" estiver marcado o sistema irß enviß-lo para a tela de liberaþÒo.', null=True)),
                ('dta_prev_entrega', models.DateField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela (FAT_FM_M_PNF) Pedido Cupom.', null=True)),
                ('dias_cpg_prazo', models.IntegerField(blank=True, null=True)),
                ('offline', models.BooleanField(blank=True, null=True)),
                ('conferido', models.BooleanField(blank=True, null=True)),
                ('id_conf', models.IntegerField(blank=True, null=True)),
                ('dta_conf', models.DateField(blank=True, null=True)),
                ('hor_conf', models.TimeField(blank=True, null=True)),
                ('resultado_conf', models.IntegerField(blank=True, db_comment='0-Total\r\n1-Parcial', null=True)),
                ('id_resp_conf', models.IntegerField(blank=True, null=True)),
                ('id_propriedade', models.IntegerField(blank=True, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('mod_frete', models.IntegerField(blank=True, db_comment='0-CIF;1-FOB', null=True)),
                ('can_usuario', models.IntegerField(blank=True, null=True)),
                ('can_data', models.DateField(blank=True, null=True)),
                ('can_motivo', models.CharField(blank=True, db_comment='Utilizado no momento em que o usußrio cancela o pedido pela tela de Cancelamento de Pedido.', max_length=100, null=True)),
                ('can_hora', models.TimeField(blank=True, null=True)),
                ('semana', models.IntegerField(blank=True, db_comment='Campo utilizado pelo dispositivo movel, usado pelo esquema da visita a produtores.', null=True)),
                ('id_pedido_mob', models.IntegerField(blank=True, db_comment='Neste campo de fato fica gravado o Id pedido do mobile, diferente do ID_PEDIDO_TEMP_MOB.', null=True)),
                ('id_placa', models.CharField(blank=True, max_length=8, null=True)),
                ('vlr_credito', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_temp_mob', models.IntegerField(blank=True, db_comment='Utilizado no momento da sincronizaþÒo com o sistema Mobile. Depois o valor deste campo Ú apagado.', null=True)),
                ('vlr_desc_especial', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_basico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('sgq_per_comissao', models.FloatField(blank=True, null=True)),
                ('qtde_volume', models.FloatField(blank=True, null=True)),
                ('vlr_icm_desn', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_produtos', models.FloatField(blank=True, null=True)),
                ('vlr_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_serv_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_servicos', models.FloatField(blank=True, null=True)),
                ('vlr_ser_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_terceiro', models.FloatField(blank=True, null=True)),
                ('vlr_terc_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ped_gera_fin_separado', models.BooleanField(blank=True, null=True)),
                ('vlr_prod_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('separa_prod_serv', models.BooleanField(blank=True, null=True)),
                ('vlr_cred_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_cred_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_pedido_orig', models.IntegerField(blank=True, null=True)),
                ('id_mecanico', models.IntegerField(blank=True, null=True)),
                ('vlr_desc_pos_fat', models.DecimalField(blank=True, db_comment='Este campo serve para o financeiro informar o valo do desconto ap¾s o faturamento, pois terß influÛncia na comissÒo do representante', decimal_places=4, max_digits=18, null=True)),
                ('sgq_texto_cond_pgto', models.CharField(blank=True, max_length=80, null=True)),
                ('per_desc_basico', models.FloatField(blank=True, db_comment='Utiliazado para quem utiliza SGQ', null=True)),
                ('per_desc_especial', models.FloatField(blank=True, db_comment='Utiliazado para quem utiliza SGQ', null=True)),
                ('dta_liberacao', models.DateField(blank=True, db_comment='Data que foi feita a liberaþÒo do pedido de venda.', null=True)),
                ('pedido_automatico', models.BooleanField(blank=True, db_comment='Pedido gerado automaticamente a partir de um pedido que tenha o seu item alterado para menos e com a confirmaþÒo do usußrio, para poder ser gerado.', null=True)),
                ('pedido_origem_aut', models.IntegerField(blank=True, null=True)),
                ('gerar_pedido_diferenca', models.BooleanField(blank=True, db_comment='Se for true o sistema irß gerar um novo pedido com a qtde retirada do pedido original', null=True)),
                ('id_pedido_gerado', models.IntegerField(blank=True, db_comment='Neste campo fica guardado o nro do pedido que serß gerado com a diferenþa das quantidades dos itens.', null=True)),
                ('per_desconto_fat', models.FloatField(blank=True, db_comment='Este campo Ú utilizado quando o usußrio deseja dar um desconto para abater no valor total liquido dos itens sem ter que deixar informado o percentual do desconto nos itens.', null=True)),
                ('texto_diversos_temp', models.CharField(blank=True, db_comment='Este campo serß utilizado para diversas utilidades.\r\nexemplo: quando rodar algum suporte.', max_length=255, null=True)),
                ('id_func_pri_impressao', models.IntegerField(blank=True, null=True)),
                ('dta_pri_impressao', models.DateField(blank=True, null=True)),
                ('hor_pri_impressao', models.TimeField(blank=True, null=True)),
                ('id_func_seg_impressao', models.IntegerField(blank=True, null=True)),
                ('dta_seg_impressao', models.DateField(blank=True, null=True)),
                ('hor_seg_impressao', models.TimeField(blank=True, null=True)),
                ('id_func_ter_impressao', models.IntegerField(blank=True, null=True)),
                ('dta_ter_impressao', models.DateField(blank=True, null=True)),
                ('hor_ter_impressao', models.TimeField(blank=True, null=True)),
                ('motivo_seg_impressao', models.CharField(blank=True, max_length=100, null=True)),
                ('motivo_ter_impressao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_ped',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPex',
            fields=[
                ('id_pedido', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_pedido', models.DateField()),
                ('id_tipo_mov_estoque', models.IntegerField()),
                ('id_vendedor', models.IntegerField()),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('hor_pedido', models.DateTimeField(blank=True, null=True)),
                ('id_condicao_pag', models.IntegerField()),
                ('pcp_obs', models.CharField(blank=True, max_length=100, null=True)),
                ('pcp_id_opr', models.IntegerField(blank=True, null=True)),
                ('situacao', models.IntegerField()),
                ('situacao_aprovacao', models.IntegerField()),
                ('id_atendente', models.IntegerField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('tipo_restricao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('justificativa', models.CharField(blank=True, max_length=100, null=True)),
                ('id_usuario_lib', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('origem', models.IntegerField(blank=True, null=True)),
                ('dispositivo', models.CharField(blank=True, max_length=50, null=True)),
                ('gps_latitude', models.FloatField(blank=True, null=True)),
                ('gps_longitude', models.FloatField(blank=True, null=True)),
                ('cubagem', models.FloatField(blank=True, null=True)),
                ('id_orcamento', models.IntegerField(blank=True, null=True)),
                ('envia_carga', models.BooleanField(blank=True, null=True)),
                ('dta_prev_entrega', models.DateField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('dias_cpg_prazo', models.IntegerField(blank=True, null=True)),
                ('offline', models.BooleanField(blank=True, null=True)),
                ('conferido', models.BooleanField(blank=True, null=True)),
                ('id_conf', models.IntegerField(blank=True, null=True)),
                ('dta_conf', models.DateField(blank=True, null=True)),
                ('hor_conf', models.TimeField(blank=True, null=True)),
                ('resultado_conf', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_pex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPos',
            fields=[
                ('id_posvenda', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_posvenda', models.DateField()),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_pos',
                'db_table_comment': 'Pos-Venda',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRom',
            fields=[
                ('id_romaneio', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_emissao', models.DateField()),
                ('obs_1', models.CharField(blank=True, max_length=100, null=True)),
                ('obs_2', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('rntrc', models.CharField(blank=True, max_length=20, null=True)),
                ('chave_mdf', models.CharField(blank=True, max_length=44, null=True)),
                ('und_transporte', models.SmallIntegerField(blank=True, db_comment='0-RodoTracao, \n1-RodoReboque, \n2-Navio, \n3-Balsa, \n4-Aeronave, \n5-Vagao, \n6-Outros', null=True)),
                ('total_notas', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vol_carga', models.FloatField(blank=True, null=True)),
                ('qtde_carga', models.FloatField(blank=True, null=True)),
                ('id_veiculo', models.IntegerField(blank=True, null=True)),
                ('mdf_recibo', models.CharField(blank=True, max_length=50, null=True)),
                ('mdf_protocolo', models.CharField(blank=True, max_length=50, null=True)),
                ('veiculo', models.CharField(blank=True, max_length=50, null=True)),
                ('id_placa', models.CharField(blank=True, max_length=8, null=True)),
                ('id_pca', models.IntegerField(blank=True, db_comment='Campo utilizado na importaþÒo de carregamento de pedido', null=True)),
                ('mdf_numero', models.IntegerField(blank=True, null=True)),
                ('ciot', models.DecimalField(blank=True, db_comment='C¾digo Identificador da OperaþÒo de\nTransporte - TambÚm Conhecido como conta frete;', decimal_places=0, max_digits=12, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='Campo criado para informar para o MDF se as notas informadas no MANIFESTO sÒo de Clientes ou Fornecedores.\n0 - Clientes\n1 - Fornecedores', null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0 - Em aberto\n1 - Encerrado', null=True)),
                ('canc_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('canc_data', models.DateField(blank=True, null=True)),
                ('canc_usuario', models.IntegerField(blank=True, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
                ('mdf_encerrado', models.BooleanField(blank=True, null=True)),
                ('dta_hor_ini_viagem', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_rom',
                'db_table_comment': 'Romaneio de Carha',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRte',
            fields=[
                ('id_rte', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_criacao', models.DateField(blank=True, null=True)),
                ('hor_criacao', models.TimeField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField()),
                ('importado', models.BooleanField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_rte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRtePed',
            fields=[
                ('id_rte', models.IntegerField(primary_key=True, serialize=False)),
                ('id_pedido', models.IntegerField()),
            ],
            options={
                'db_table': 'fat_tb_m_rte_ped',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMXml',
            fields=[
                ('nota_fiscal', models.IntegerField()),
                ('dta_emissao', models.DateField()),
                ('serie', models.CharField(blank=True, max_length=3, null=True)),
                ('cfop', models.CharField(blank=True, max_length=5, null=True)),
                ('id_tipo_estoque', models.IntegerField(blank=True, null=True)),
                ('id_condicao_pag', models.IntegerField(blank=True, null=True)),
                ('chave', models.CharField(max_length=44)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('cnpj_emitente', models.CharField(max_length=14)),
                ('nome_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('vlr_icm_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('id_iqm', models.IntegerField(blank=True, null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('fre_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras_desp', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_icms', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('nref_chave', models.CharField(blank=True, max_length=44, null=True)),
                ('nfe_finalidade', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMBrd',
            fields=[
                ('id_brd', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_criacao', models.DateField(blank=True, null=True)),
                ('hor_criacao', models.TimeField(blank=True, null=True)),
                ('dta_lib', models.DateField(blank=True, null=True)),
                ('hor_lib', models.TimeField(blank=True, null=True)),
                ('dta_bxa', models.DateField(blank=True, null=True)),
                ('hor_bxa', models.TimeField(blank=True, null=True)),
                ('id_resp_bxa', models.IntegerField(blank=True, null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('obs', models.CharField(blank=True, max_length=200, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('liberado', models.BooleanField(blank=True, null=True)),
                ('baixado', models.BooleanField(blank=True, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
                ('dta_canc', models.DateField(blank=True, null=True)),
                ('hor_canc', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_brd',
                'db_table_comment': 'Tabela de Border¶',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCbx',
            fields=[
                ('id_cbx', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_baixa', models.DateField(blank=True, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto_ope', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto_antec', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('com_bxa_antecipacao', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cbx',
                'db_table_comment': 'Baixa de Cart§es de CrÚdito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCob',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_cobranca', models.DateField()),
                ('tipo_contato', models.IntegerField(db_comment='0-Telefone\n1-Cobrador\n2-Advogado\n3-E-mail\n4-Carta de cobranþa\n')),
                ('observacao', models.CharField(max_length=800)),
                ('hor_cobranca', models.DateTimeField(blank=True, null=True)),
                ('acordo', models.BooleanField()),
                ('per_juros_negociado', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('dta_acordo', models.DateField(blank=True, null=True)),
                ('vlr_negociado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0-aberto\n1-importado', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('nome_contato', models.CharField(blank=True, max_length=80, null=True)),
                ('contato', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cob',
                'db_table_comment': 'Controle de Cobranþa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCon',
            fields=[
                ('id_conciliacao', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_conciliacao', models.DateField(blank=True, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_con',
                'db_table_comment': 'ConsciliaþÒo Bancaria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCta',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('id_abertura', models.IntegerField()),
                ('id_empresa', models.IntegerField()),
                ('tipo_lancamento', models.IntegerField(db_comment='0-Caixa\n1-Banco')),
                ('dta_lancamento', models.DateField()),
                ('num_doc', models.IntegerField()),
                ('deb_cre', models.IntegerField(db_comment='0-Debito\n1-Credito')),
                ('historico', models.CharField(max_length=100)),
                ('vlr_lancamento', models.DecimalField(decimal_places=4, max_digits=18)),
                ('origem', models.IntegerField(db_comment='0-Manual\r\n1-Baixa de Conta a Receber\r\n2-Baixa de Contas a Pagar\r\n3-DevoluþÒo de vendas 4-ConciliaþÒo bancßria  5-Nota Fiscal de SaÝda 6-Nota de CrÚdito  7 - Abertura de caixa  8 - Controle de Caixa;\r\n9 - MovimentaþÒo de cheque;\r\n10 - Baixa de cart§es de crÚdito;\r\n11 - Baixa automßtica de boletos (Rec);\r\n12 - Cancelamento NF dia Anterior; 13 - Baixa por Border¶;14 - Lanþamento do Movimento do Funcionßrio;15 - PrestaþÒo de Contas; 16 - Desconto de Titulos;17 - Nota Fiscal de Entrada')),
                ('conc_numero', models.IntegerField(blank=True, null=True)),
                ('conc_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('conc_id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('conc_vlr_lancamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('exp_id_controle', models.IntegerField(blank=True, null=True)),
                ('exp_id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('exp_id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('exp_id_conta', models.IntegerField(blank=True, null=True)),
                ('id_baixa_pbx', models.IntegerField(blank=True, null=True)),
                ('id_baixa_rbx', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('dta_movimento', models.DateField(blank=True, null=True)),
                ('conciliado', models.BooleanField(blank=True, null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('id_titulo_rec', models.IntegerField(blank=True, null=True)),
                ('id_credito', models.IntegerField(blank=True, null=True)),
                ('id_mch', models.IntegerField(blank=True, db_comment='Este campo corresponde ao ID_CONTROLE da tabela FIN_TB_M_MCH;', null=True)),
                ('id_conciliacao', models.IntegerField(blank=True, db_comment='Campo utilizado pela Rotina de ConciliaþÒo bancßria;', null=True)),
                ('dta_conciliacao', models.DateField(blank=True, null=True)),
                ('id_cbx', models.IntegerField(blank=True, db_comment='Este campo Ú alimentado pela rotina de FIN_FM_M_CBX.', null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('id_titulo_pag', models.IntegerField(blank=True, null=True)),
                ('id_brd', models.IntegerField(blank=True, db_comment='Refere-se a talela FIN_TB_M_BRD.', null=True)),
                ('id_lmf', models.IntegerField(blank=True, db_comment='C¾digo do Lanþamento de Movimento do Funcionßrio', null=True)),
                ('id_prc', models.IntegerField(blank=True, db_comment='C¾digo de PrestaþÒo de Contas', null=True)),
                ('id_prc_det', models.IntegerField(blank=True, db_comment='C¾digo do registros filhos da prestaþÒo de Contas', null=True)),
                ('id_dct_desc', models.IntegerField(blank=True, null=True)),
                ('id_dct_canc', models.IntegerField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('pag_cred_cli', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cta',
                'db_table_comment': 'Controle de Caixa e Banco.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCxa',
            fields=[
                ('id_abertura', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_abertura', models.DateField()),
                ('ecf_serial_impressora', models.CharField(blank=True, max_length=60, null=True)),
                ('status', models.IntegerField()),
                ('dta_fechamento', models.DateField(blank=True, null=True)),
                ('vlr_suprimento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('hor_fechamento', models.TimeField(blank=True, null=True)),
                ('dta_ult_reabertura', models.DateField(blank=True, null=True)),
                ('hor_ult_reabertura', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cxa',
                'db_table_comment': 'Controle de Abertura de Caixa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMDct',
            fields=[
                ('id_dct', models.IntegerField(primary_key=True, serialize=False)),
                ('data_operacao', models.DateField()),
                ('data_original', models.DateField()),
                ('per_taxa_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_taxa_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tipo_operacao', models.IntegerField(db_comment='0 - Descontar TÝtulos; 1- Baixar TÝtulos Descontados; 2 - Desfazer Desconto de TÝtulos')),
                ('vlr_total_titulos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_empresa', models.IntegerField()),
                ('can_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_dct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMLdm',
            fields=[
                ('id_ldm', models.IntegerField(primary_key=True, serialize=False)),
                ('natureza', models.IntegerField()),
                ('dta_emissao', models.DateField()),
                ('dta_vencimento', models.DateField()),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('historico', models.CharField(blank=True, max_length=100, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('mob_id_ldm', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('caminho_foto', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_ldm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMLmf',
            fields=[
                ('id_lmf', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_movimento', models.DateField()),
                ('historico', models.CharField(blank=True, max_length=100, null=True)),
                ('vlr_movimento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_saldo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0-Aguardando PrestaþÒo;1-PrestaþÒo Parcial;2-Encerrado', null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('vlr_pago', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_lmf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMMch',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_movimento', models.DateField(blank=True, null=True)),
                ('informativo', models.CharField(blank=True, db_comment='Campo utilizado pelo sistema para detalhar a funþÒo da OperaþÒo escolhida pelo o usußrio. O usußrio nÒo manipula este campo.', max_length=100, null=True)),
                ('observacoes', models.CharField(blank=True, max_length=100, null=True)),
                ('vlr_movimento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('hor_movimento', models.TimeField(blank=True, null=True)),
                ('operacao', models.IntegerField(blank=True, db_comment='1 - Depositar;\r\n2 - Devolver;\r\n3 - Pagar parcial;\r\n4 - Resgatar; 5 - Pgto a terceiros; 6 - Cheque descontado;', null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('vlr_tot_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_tot_movimento', models.DecimalField(blank=True, db_comment='╔ o resultado de vlr_movimento + vlr_tot_movimento;', decimal_places=4, max_digits=18, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('id_recibo', models.IntegerField(blank=True, db_comment='Esse campo Ú utilizado para registrar n║ do recibo', null=True)),
                ('id_empresa', models.IntegerField()),
                ('vlr_tot_juros_che', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_mch',
                'db_table_comment': 'MOVIMENTO DE CHEQUE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMOrc',
            fields=[
                ('id_orc', models.IntegerField(primary_key=True, serialize=False)),
                ('ano', models.IntegerField(blank=True, null=True)),
                ('vlr_orcamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_orc',
                'db_table_comment': 'ORCAMENTO ANUAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPag',
            fields=[
                ('id_titulo', models.IntegerField(primary_key=True, serialize=False)),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('dta_emissao', models.DateField()),
                ('historico', models.CharField(max_length=100)),
                ('vlr_parcela', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_original', models.DecimalField(decimal_places=4, max_digits=18)),
                ('dta_vencimento', models.DateField()),
                ('dta_original', models.DateField()),
                ('vlr_saldo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('origem', models.IntegerField(db_comment='0-Estoque\r\n  1-Caixa/Banco  2 - Pequenas Despesas  3 - Baixa Contas a Pagar  4 - Movimento Bancßrio 5 - Lancamento Manual 6 - Lanþamento de Movimento do Funcionßrio  7 - PrestaþÒo de Contas 8 - ConciliaþÒo Bancßria')),
                ('pre_conta', models.IntegerField(blank=True, null=True)),
                ('pre_cheque', models.IntegerField(blank=True, null=True)),
                ('pre_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('pre_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('pre_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_lancamento', models.IntegerField(db_comment='0-Manual\n1-Automatico')),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('per_juros', models.FloatField(blank=True, null=True)),
                ('per_multa', models.FloatField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, db_comment='Campo utilizado pela telinha de Pequeas Despesas;', null=True)),
                ('id_baixa', models.IntegerField(blank=True, null=True)),
                ('id_cta', models.IntegerField(blank=True, db_comment='Refere-se ao valor copiado do campo "id_controle" da tabela fin_tb_m_cta, por sua vez, Ú gerado pela tela MovimentaþÒo Bancßrio ', null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('dta_lancamento', models.DateField(blank=True, null=True)),
                ('id_lmf', models.IntegerField(blank=True, db_comment='C¾digo de Lanþamento de Movimento Funcionßrio', null=True)),
                ('id_prc', models.IntegerField(blank=True, db_comment='C¾digo de PrestaþÒo de Contas', null=True)),
                ('id_prc_det', models.IntegerField(blank=True, db_comment='C¾digo do registros filhos da prestaþÒo de Contas', null=True)),
                ('id_conciliacao', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pag',
                'db_table_comment': 'Contas a Pagar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPbx',
            fields=[
                ('id_baixa', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_baixa', models.DateField(blank=True, null=True)),
                ('vlr_baixa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('vlr_credito_utilizado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('dta_lancamento', models.DateField(blank=True, null=True)),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('vlr_saldo_credito', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_credito_disponivel', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_recibo', models.IntegerField(blank=True, db_comment='Esse campo Ú utilizado para conter n║ do recibo', null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_tot_novo_tit', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pbx',
                'db_table_comment': 'Baixa de Contas a Pagar.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPbxCht',
            fields=[
                ('id_baixa', models.IntegerField(primary_key=True, serialize=False)),
                ('id_titulo', models.IntegerField()),
                ('vlr_cheque', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pbx_cht',
                'db_table_comment': 'Baixa de Contas a Pagar com Cheques de Terceiros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPcr',
            fields=[
                ('id_credito', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('origem', models.IntegerField(db_comment='1 - Baixa Contas a Pagar; 2 - DevoluþÒo do Fornecedor')),
                ('num_documento', models.CharField(max_length=20)),
                ('vlr_credito', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_saldo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_credito', models.DateField()),
                ('deb_cre', models.IntegerField()),
                ('id_fornecedor', models.IntegerField()),
                ('historico', models.CharField(max_length=200)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_baixa', models.IntegerField(blank=True, null=True)),
                ('id_titulo', models.IntegerField(blank=True, null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pcr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPrc',
            fields=[
                ('id_prc', models.IntegerField(primary_key=True, serialize=False)),
                ('vlr_total_prc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_prestacao', models.DateField()),
            ],
            options={
                'db_table': 'fin_tb_m_prc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRbx',
            fields=[
                ('id_baixa', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_baixa', models.DateField(blank=True, null=True)),
                ('vlr_baixa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('vlr_cred_utilizado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('vlr_saldo_credito', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_credito_disponivel', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('dta_lancamento', models.DateField(blank=True, null=True)),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('id_recibo', models.IntegerField(blank=True, db_comment='Esse campo Ú utilizado para conter n║ do recibo', null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_pago_ger', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_tot_ger', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('faz_conciliacao', models.BooleanField(blank=True, db_comment='Jß alimenta os dados ', null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rbx',
                'db_table_comment': 'Baixa de Contas a Receber',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRbxPpe',
            fields=[
                ('id_baixa', models.IntegerField(primary_key=True, serialize=False)),
                ('id_pedido', models.IntegerField()),
                ('vlr_desc_pos_fat', models.DecimalField(blank=True, db_comment='Informe neste campo', decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rbx_ppe',
                'db_table_comment': 'Pedidos que foram prestado conta na baixa do contas a receber. (sgq).',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRcr',
            fields=[
                ('id_credito', models.IntegerField(primary_key=True, serialize=False)),
                ('origem', models.IntegerField(db_comment='0-Manual\r\n1-Baixa de Conta a Receber\r\n2-DevoluþÒo de vendas 3-Nota Fiscal de Venda; \r\n4 - Movimento de Caixa')),
                ('num_documento', models.CharField(max_length=20)),
                ('vlr_credito', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_saldo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_credito', models.DateField()),
                ('deb_cre', models.IntegerField(db_comment='0-Debito\n1-Credito')),
                ('historico', models.CharField(max_length=100)),
                ('pre_conta', models.IntegerField(blank=True, null=True)),
                ('pre_cheque', models.IntegerField(blank=True, null=True)),
                ('pre_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('pre_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('pre_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('car_parcelas', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_baixa', models.IntegerField(blank=True, null=True)),
                ('id_titulo', models.IntegerField(blank=True, db_comment='Campo utilizado pela nota fiscal de saÝda. Quando o cliente utiliza seu crÚdito o sitema deverß registrar a saÝda no FIN_TB_M_RCR.', null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
                ('id_cta', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rcr',
                'db_table_comment': 'Controle de CrÚdito de Cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRec',
            fields=[
                ('id_titulo', models.IntegerField(primary_key=True, serialize=False)),
                ('num_parcela', models.CharField(max_length=20)),
                ('dta_emissao', models.DateField()),
                ('historico', models.CharField(max_length=100)),
                ('vlr_parcela', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_original', models.DecimalField(decimal_places=4, max_digits=18)),
                ('dta_vencimento', models.DateField()),
                ('dta_original', models.DateField()),
                ('vlr_saldo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('origem', models.IntegerField(db_comment='0 - Manual\r\n1 - Baixa do contas a receber\r\n2 - Nota Fiscal de SaÝda\r\n3 - MovimentaþÒo de cheque 4- ConciliaþÒo Bancßria')),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_cheque', models.IntegerField(blank=True, null=True)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_lancamento', models.IntegerField(blank=True, null=True)),
                ('bol_nosso_numero', models.CharField(blank=True, max_length=30, null=True)),
                ('car_taxa', models.FloatField(blank=True, null=True)),
                ('car_motivo_can', models.CharField(blank=True, db_comment='Movito de Cancelamento do CartÒo', max_length=100, null=True)),
                ('car_dta_can', models.DateField(blank=True, db_comment='Data de Cancelamento', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('seq_nosso_numero', models.IntegerField(blank=True, null=True)),
                ('car_taxa_ope', models.FloatField(blank=True, db_comment='Campo utilizado pela tela de Fechamento de Caixa.', null=True)),
                ('car_n_lote', models.CharField(blank=True, db_comment='Campo utilizado pela tela de Fechamento de Caixa.', max_length=30, null=True)),
                ('car_n_lote_id_resp', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela de Fechamento de Caixa.', null=True)),
                ('car_n_lote_id_conta', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela de Fechamento de Caixa.', null=True)),
                ('id_baixa', models.IntegerField(blank=True, db_comment='Campo utilizando pela tela da baixa do contas a receber, quando preciso. Ex:  Caso a baixa seja com cartÒo de crÚdito o sistema terß de criar um novo registro no FIN_TB_M_REC.', null=True)),
                ('situacao_chq', models.IntegerField(blank=True, db_comment='1 - Em aberto\n2 - Depositado\n3 - Devolvido\n4 - Parcial\n5 - Resgatado\n6 - Compensado', null=True)),
                ('bol_chave', models.IntegerField(blank=True, db_comment='Campo utilizado pela geraþÒo de boleto.', null=True)),
                ('bol_id_conta', models.IntegerField(blank=True, db_comment='Campo utilizado pela geraþÒo de boleto.', null=True)),
                ('id_vendedor', models.IntegerField(blank=True, db_comment='Este campo serß alimentado no momento do faturamento da nota fiscal de venda.', null=True)),
                ('id_credito', models.IntegerField(blank=True, db_comment='Refere-se a tabela FIN_TB_M_RCR', null=True)),
                ('id_mch', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela de MovimentaþÒo de cheque', null=True)),
                ('bol_banco', models.IntegerField(blank=True, null=True)),
                ('id_obra', models.IntegerField(blank=True, null=True)),
                ('dta_venc_original', models.DateField(blank=True, null=True)),
                ('id_conciliacao', models.IntegerField(blank=True, null=True)),
                ('dct_id_conta', models.IntegerField(blank=True, db_comment='Utilizado pela rotina Desconto de Titulos', null=True)),
                ('dct_dta_descontado', models.DateField(blank=True, null=True)),
                ('dct_id_local_titulo', models.IntegerField(blank=True, null=True)),
                ('dct_id_desc', models.IntegerField(blank=True, null=True)),
                ('vlr_saldo_anterior', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('bol_remessa_env', models.BooleanField(blank=True, null=True)),
                ('bol_remessa_dta', models.DateField(blank=True, null=True)),
                ('bol_remessa_id_func', models.IntegerField(blank=True, null=True)),
                ('bol_remessa_nome_arq', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rec',
                'db_table_comment': 'Contas a Receber',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObrTbCEqp',
            fields=[
                ('id_equipamento', models.IntegerField(primary_key=True, serialize=False)),
                ('controle', models.CharField(blank=True, max_length=15, null=True)),
                ('descricao', models.CharField(max_length=50)),
                ('especificacao', models.CharField(blank=True, max_length=50, null=True)),
                ('modelo', models.CharField(blank=True, max_length=30, null=True)),
                ('fabricante', models.CharField(blank=True, max_length=30, null=True)),
                ('tipo', models.IntegerField()),
                ('dta_compra', models.DateField()),
                ('local_compra', models.CharField(blank=True, max_length=30, null=True)),
                ('vlr_compra', models.DecimalField(decimal_places=2, max_digits=18)),
                ('garantia', models.IntegerField()),
            ],
            options={
                'db_table': 'obr_tb_c_eqp',
                'db_table_comment': 'Equipamentos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObrTbCGru',
            fields=[
                ('id_grupo_orca', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('ativo', models.BooleanField()),
                ('mes_cronograma', models.IntegerField()),
            ],
            options={
                'db_table': 'obr_tb_c_gru',
                'db_table_comment': 'Grupo de Itens da Obra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObrTbCObr',
            fields=[
                ('id_obra', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('ativo', models.BooleanField()),
                ('endereco', models.CharField(max_length=50)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('tel_fixo', models.CharField(blank=True, max_length=14, null=True)),
                ('fax', models.CharField(blank=True, max_length=14, null=True)),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
                ('dta_entrega', models.DateField()),
                ('id_cliente', models.IntegerField()),
            ],
            options={
                'db_table': 'obr_tb_c_obr',
                'db_table_comment': 'Cadastro de Obras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbCCat',
            fields=[
                ('id_cat', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=60)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_c_cat',
                'db_table_comment': 'Cadastro de Categorias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbCTio',
            fields=[
                ('id_tipo_os', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=30, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - Normal\r\n1 - Garantia', null=True)),
            ],
            options={
                'db_table': 'ofi_tb_c_tio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMAge',
            fields=[
                ('id_agenda', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('nome_cliente', models.CharField(blank=True, max_length=50, null=True)),
                ('dta_agenda', models.DateField(blank=True, null=True)),
                ('hora', models.DateTimeField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, max_length=800, null=True)),
                ('placa', models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_age',
                'db_table_comment': 'Agendamento de veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMCvl',
            fields=[
                ('id_controle', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_controle', models.DateField()),
                ('tipo_movimento', models.IntegerField(db_comment='0 - IPVA; 1 - Multa; 2 - Seguro')),
            ],
            options={
                'db_table': 'ofi_tb_m_cvl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOcq',
            fields=[
                ('id_orcamento', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('id_equipamento', models.IntegerField(blank=True, null=True)),
                ('dta_orcamento', models.DateField(blank=True, null=True)),
                ('dta_validade', models.DateField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('nome_cliente', models.CharField(blank=True, max_length=50, null=True)),
                ('id_funcionario', models.IntegerField(blank=True, null=True)),
                ('id_analista', models.IntegerField(blank=True, null=True)),
                ('id_condicao_pag', models.IntegerField(blank=True, null=True)),
                ('vlr_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('des_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('des_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0 - Em aberto;\r\n1 - Importado;\r\n2 - Cancelado;', null=True)),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('doc_cnpj_cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('hor_orcamento', models.TimeField(blank=True, null=True)),
                ('can_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('can_data', models.DateField(blank=True, null=True)),
                ('can_hora', models.TimeField(blank=True, null=True)),
                ('can_usuario', models.IntegerField(blank=True, null=True)),
                ('serial', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_ocq',
                'db_table_comment': 'Orþamento de Equipamentos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOcv',
            fields=[
                ('id_orcamento', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('placa', models.CharField(blank=True, max_length=8, null=True)),
                ('km_atual', models.IntegerField(blank=True, null=True)),
                ('dta_orcamento', models.DateField(blank=True, null=True)),
                ('dta_validade', models.DateField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('nome_cliente', models.CharField(blank=True, max_length=50, null=True)),
                ('id_funcionario', models.IntegerField(blank=True, null=True)),
                ('id_analista', models.IntegerField(blank=True, null=True)),
                ('id_condicao_pag', models.IntegerField(blank=True, null=True)),
                ('vlr_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('des_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('des_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0 - Em aberto;\n1 - Importado;\n2 - Cancelado;', null=True)),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('doc_cnpj_cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('hor_orcamento', models.TimeField(blank=True, null=True)),
                ('can_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('can_data', models.DateField(blank=True, null=True)),
                ('can_hora', models.TimeField(blank=True, null=True)),
                ('can_usuario', models.IntegerField(blank=True, null=True)),
                ('tipo_orcamento', models.IntegerField(blank=True, db_comment='1-VeÝculo;2-Tratores', null=True)),
                ('chassi', models.CharField(blank=True, max_length=20, null=True)),
                ('id_orcamento_mob', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_ocv',
                'db_table_comment': 'Orþamento de Veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrv',
            fields=[
                ('id_ordem', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_emissao', models.DateField(blank=True, null=True)),
                ('dta_entrega', models.DateField(blank=True, null=True)),
                ('id_cliente', models.IntegerField(blank=True, null=True)),
                ('id_veiculo', models.IntegerField(blank=True, null=True)),
                ('km_atual', models.IntegerField(blank=True, null=True)),
                ('tanque_combus', models.IntegerField(blank=True, null=True)),
                ('id_forma_pag', models.IntegerField(blank=True, null=True)),
                ('id_condicao_pag', models.IntegerField(blank=True, null=True)),
                ('id_analista', models.IntegerField(blank=True, null=True)),
                ('id_orcamento', models.IntegerField(blank=True, null=True)),
                ('obs_reclamacao', models.CharField(blank=True, max_length=800, null=True)),
                ('obs_problema', models.CharField(blank=True, max_length=800, null=True)),
                ('status', models.IntegerField(blank=True, db_comment='0 û Aberta\n1 û Em Andamento\n2 û Fechada\n3 û Faturada\n4 - Cancelada', null=True)),
                ('vlr_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_produtos', models.FloatField(blank=True, null=True)),
                ('vlr_prod_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_serv_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_servicos', models.FloatField(blank=True, null=True)),
                ('vlr_ser_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desc_terceiro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_terceiro', models.FloatField(blank=True, null=True)),
                ('vlr_terc_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_despesas', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_credito', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('can_data', models.DateField(blank=True, null=True)),
                ('can_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('can_hora', models.TimeField(blank=True, null=True)),
                ('rea_data', models.DateField(blank=True, null=True)),
                ('rea_hora', models.TimeField(blank=True, null=True)),
                ('rea_motivo', models.CharField(blank=True, max_length=100, null=True)),
                ('dta_fechamento', models.DateField(blank=True, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('vlr_cred_produtos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_cred_servicos', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('observacoes', models.CharField(blank=True, max_length=400, null=True)),
                ('status_painel', models.IntegerField(blank=True, db_comment='0 - Aguardando Ordem de Serviþo\n1 - Pr¾ximo Ordem de Serviþo\n2 - Em Serviþo\n3 - PrÚ-InspeþÒo\n4 - Aguardando Lavagem\n5 - InspeþÒo Final\n6 - Aguardando AprovaþÒo\n7 - Aguardando Peþas\n8 - Aguardando Serviþo\n9 - Aguardando PrÚ-Entrega\n10 - Aguardando Entrega\n11 - Entregue\n', null=True)),
                ('hor_emissao', models.TimeField(blank=True, null=True)),
                ('hor_fechamento', models.TimeField(blank=True, null=True)),
                ('separa_prod_serv', models.BooleanField(blank=True, null=True)),
                ('tipo_ordem', models.IntegerField(blank=True, db_comment='1-VeÝculo;2-Tratores;3-Equipamentos', null=True)),
                ('chassi', models.CharField(blank=True, max_length=20, null=True)),
                ('id_ordem_orig_gar', models.IntegerField(blank=True, null=True)),
                ('id_fiscal_ref_entrada', models.IntegerField(blank=True, null=True)),
                ('ordem_substituicao', models.BooleanField(blank=True, null=True)),
                ('orv_gera_fin_separado', models.BooleanField(blank=True, db_comment='Campo preenchido automaticamente pelo parÔmetro da oficina. Indica se o financeiro da oficina serß gerado separado.', null=True)),
                ('iss_valor_retido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_ordem_mob', models.IntegerField(blank=True, null=True)),
                ('id_meq', models.IntegerField(blank=True, null=True)),
                ('horimetro', models.FloatField(blank=True, null=True)),
                ('id_atendente', models.IntegerField(blank=True, null=True)),
                ('id_mecanico', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv',
                'db_table_comment': 'Ordem de Serviþos de Veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMPos',
            fields=[
                ('id_posvenda', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('dta_posvenda', models.DateField(blank=True, null=True)),
                ('situacao', models.IntegerField(blank=True, db_comment='0 - Satisfeito;  1 - Insatisfeito;  2 - NÒo encontrado;', null=True)),
                ('observaþÒo', models.CharField(blank=True, max_length=100, null=True)),
                ('solucao', models.CharField(blank=True, max_length=100, null=True)),
                ('hor_posvenda', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_pos',
                'db_table_comment': 'Tabela de P¾s Venda de Oficina',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCdr',
            fields=[
                ('id_cdr', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cor_grupo', models.IntegerField()),
                ('tipo_cadarco', models.IntegerField(db_comment='1 - 18 mm\n2 - 35 mm\n3 - 40 mm')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cdr',
                'db_table_comment': 'Tabela para uso de cadarþo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCin',
            fields=[
                ('id_cin', models.IntegerField(primary_key=True, serialize=False)),
                ('id_num_seq', models.IntegerField(blank=True, null=True)),
                ('tipo_mei', models.IntegerField(blank=True, null=True)),
                ('requer_calibracao', models.IntegerField(blank=True, null=True)),
                ('situacao_instrumento', models.IntegerField(blank=True, db_comment='0- Aprovado\n1- Retido nÒo usado\n2- Descartado\n3- Em calibraþÒo externa', null=True)),
                ('cert_erro_admissivel', models.CharField(blank=True, max_length=20, null=True)),
                ('cert_num', models.CharField(blank=True, max_length=20, null=True)),
                ('cert_id_fornecedor', models.IntegerField(blank=True, null=True)),
                ('cert_id_resp_inspecao', models.IntegerField(blank=True, null=True)),
                ('cert_dta_verificacao', models.DateField(blank=True, null=True)),
                ('num_seq', models.IntegerField(blank=True, null=True)),
                ('tr_sit_encosto', models.IntegerField(blank=True, null=True)),
                ('tr_sit_funcionamento', models.IntegerField(blank=True, null=True)),
                ('tr_sit_escala', models.IntegerField(blank=True, null=True)),
                ('tr_sit_aspecto_geral', models.IntegerField(blank=True, null=True)),
                ('tr_sit_escala_padrao', models.IntegerField(blank=True, null=True)),
                ('tr_resultado', models.IntegerField(blank=True, null=True)),
                ('tr_sit_inspecao', models.IntegerField(blank=True, null=True)),
                ('tr_id_resp_inspecao', models.IntegerField(blank=True, null=True)),
                ('tr_dta_verificacao', models.DateField(blank=True, null=True)),
                ('tr_reg_acao_tomada', models.CharField(blank=True, max_length=200, null=True)),
                ('cal_efet_frequencia', models.CharField(blank=True, max_length=10, null=True)),
                ('cal_efet_proxima', models.DateField(blank=True, null=True)),
                ('numero_nfe', models.IntegerField(blank=True, null=True)),
                ('historico_instrumento', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cin',
                'db_table_comment': 'Controle do Instrumento\nConforme Planilha: P 7.6-01 (Controle de Instrumentos de MediþÒo)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCle',
            fields=[
                ('id_cle', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cle',
                'db_table_comment': 'Tabela de ClassificaþÒo de Etiqueta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCnf',
            fields=[
                ('id_conformidade', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cnf',
                'db_table_comment': 'Conformidade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCrg',
            fields=[
                ('id_cargo', models.IntegerField(primary_key=True, serialize=False)),
                ('aprovador', models.CharField(blank=True, max_length=50, null=True)),
                ('descricao', models.CharField(max_length=70)),
                ('objetivo_cargo', models.CharField(blank=True, max_length=200, null=True)),
                ('atribuicoes', models.CharField(max_length=300)),
                ('requisitos', models.CharField(max_length=500)),
                ('data_aprovacao', models.DateField()),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - Vendedor\n1 - Representante\n2 - Outros\n3 - MecÔnico', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_crg',
                'db_table_comment': 'Cargos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCue',
            fields=[
                ('id_cue', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cue',
                'db_table_comment': 'Tabela de Cadastro Uso da Etiqueta\nex: Uso Geral;\n      Uso Infantil;',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCDis',
            fields=[
                ('id_dis', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=80)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_dis',
                'db_table_comment': 'Cadastro de DisposiþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCEsp',
            fields=[
                ('id_especificacao', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_esp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCFpi',
            fields=[
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('id_fpi', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pcp_tb_c_fpi',
                'db_table_comment': 'Ficha TÚcnica de ProduþÒo do Item.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCFte',
            fields=[
                ('id_fte', models.IntegerField(primary_key=True, serialize=False)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('requisitos', models.CharField(blank=True, max_length=300, null=True)),
                ('inf_contato', models.CharField(blank=True, max_length=80, null=True)),
                ('inf_remocao', models.CharField(blank=True, max_length=80, null=True)),
                ('inf_sac', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_fte',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCIns',
            fields=[
                ('id_ins', models.IntegerField(primary_key=True, serialize=False)),
                ('sigla', models.CharField(blank=True, max_length=20, null=True)),
                ('nro_serie', models.CharField(blank=True, max_length=20, null=True)),
                ('dta_cadastro', models.DateField()),
                ('resolucao_menor_divisao', models.CharField(blank=True, max_length=15, null=True)),
                ('scala', models.CharField(blank=True, max_length=20, null=True)),
                ('garantia', models.BooleanField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_ins',
                'db_table_comment': 'Cadastro de Instrumentos\nConforme Planilha: P 7.6-01 (Controle de Instrumentos de MediþÒo)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCLme',
            fields=[
                ('id_lme', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_lme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCMde',
            fields=[
                ('id_mde', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_mde',
                'db_table_comment': 'Modelo de Equipamento e Instrumentos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCMeq',
            fields=[
                ('id_meq', models.IntegerField(primary_key=True, serialize=False)),
                ('cod_equipamento', models.CharField(blank=True, max_length=15, null=True)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('nro_serie', models.CharField(blank=True, max_length=20, null=True)),
                ('dta_cadastro', models.DateField(blank=True, null=True)),
                ('dta_compra', models.DateField(blank=True, null=True)),
                ('numero_nf', models.IntegerField(blank=True, null=True)),
                ('gara_validade', models.DateField(blank=True, null=True)),
                ('gara_existe', models.BooleanField(blank=True, null=True)),
                ('id_resp_lancto', models.IntegerField(blank=True, null=True)),
                ('tipo_mei', models.IntegerField(blank=True, db_comment='0 - Mßquina  1 - Equipamento   2 - Outros', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('vlr_aquisicao', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('nome_fabricante', models.CharField(blank=True, max_length=60, null=True)),
                ('vlr_hora', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_comissao', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_placa', models.CharField(blank=True, max_length=8, null=True)),
                ('km_aquisicao', models.FloatField(blank=True, null=True)),
                ('dta_aquisicao', models.DateField(blank=True, null=True)),
                ('km_atual', models.FloatField(blank=True, null=True)),
                ('chassi', models.CharField(blank=True, max_length=20, null=True)),
                ('ano_modelo', models.CharField(blank=True, max_length=4, null=True)),
                ('ano_fabricacao', models.CharField(blank=True, max_length=4, null=True)),
                ('renavam', models.CharField(blank=True, max_length=20, null=True)),
                ('alimentacao', models.IntegerField(blank=True, db_comment='0-InjeþÒo Eletr¶nica\n1-Carburador\n2-Bomba Injetora', null=True)),
                ('combustivel', models.IntegerField(blank=True, db_comment='0-Gasolina\n1-Alcool\n2-Diesel\n3-Gas Natural\n4-Eletrico\n5-Flex', null=True)),
                ('motor', models.CharField(blank=True, max_length=11, null=True)),
                ('motor_num', models.CharField(blank=True, max_length=20, null=True)),
                ('rastreado', models.BooleanField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0-Veiculo\n1-Trator/Implemento', null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('media_consumo', models.FloatField(blank=True, db_comment='media de consumo', null=True)),
                ('eqp_terceiro', models.BooleanField(blank=True, db_comment='equipamento de terceiro', null=True)),
                ('tipo_rodado', models.SmallIntegerField(blank=True, db_comment='0-NÒo Aplicavel, \n1-Truck, \n2-Toco, \n3-Cavalo Mecanico, \n4-VAN, \n5-Utilitario, \n6-Outros', null=True)),
                ('tipo_carroceria', models.SmallIntegerField(blank=True, db_comment='0-NaoAplicavel, \n1-Aberta, \n2-Fechada, \n3-Graneleira, \n4-PortaContainer, \n5-Sider', null=True)),
                ('cap_veiculo', models.FloatField(blank=True, db_comment='Capacidade do veiculo', null=True)),
                ('tara', models.FloatField(blank=True, null=True)),
                ('uf_licenciado', models.CharField(blank=True, db_comment='UF em que veÝculo estß licenciado.', max_length=2, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_meq',
                'db_table_comment': 'Cadastro de Veiculos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCMta',
            fields=[
                ('id_motorista', models.IntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=80)),
                ('placa', models.CharField(max_length=8)),
                ('end_endereco', models.CharField(max_length=50)),
                ('end_numero', models.CharField(max_length=10)),
                ('end_cidade', models.CharField(max_length=30)),
                ('end_bairro', models.CharField(max_length=30)),
                ('end_cep', models.CharField(max_length=9)),
                ('end_estado', models.CharField(max_length=2)),
                ('fone', models.CharField(blank=True, max_length=14, null=True)),
                ('celular', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.CharField(blank=True, max_length=80, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('doc_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('mob_senha', models.CharField(blank=True, max_length=100, null=True)),
                ('mob_login', models.CharField(blank=True, max_length=30, null=True)),
                ('mob_id_empresa', models.IntegerField(blank=True, null=True)),
                ('filiacao', models.CharField(blank=True, max_length=100, null=True)),
                ('nome_contato_1', models.CharField(blank=True, max_length=50, null=True)),
                ('fone_contato_1', models.CharField(blank=True, max_length=14, null=True)),
                ('tipo_cnh', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_mta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCOri',
            fields=[
                ('id_ori', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_ori',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCReg',
            fields=[
                ('id_regiao', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('desc_perc', models.FloatField(blank=True, null=True)),
                ('unifica_desc_reg', models.BooleanField(blank=True, db_comment='Se "true", ele irß somar o desconto do Pai + o registro do filho reg_ite', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_reg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCRot',
            fields=[
                ('id_rota', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('dis_inicial', models.FloatField()),
                ('dis_final', models.FloatField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_rot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCRpt',
            fields=[
                ('id_rpt', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_rpt',
                'db_table_comment': 'Recipiente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCTin',
            fields=[
                ('id_tin', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_tin',
                'db_table_comment': 'Tipo de Instrumento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCTlm',
            fields=[
                ('id_tlm', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=80)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_tlm',
                'db_table_comment': 'Tipo de Lista Mestre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCTpp',
            fields=[
                ('id_tpp', models.IntegerField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=50)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_tpp',
                'db_table_comment': 'Tipos de ProgramaþÒo da ProduþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcr',
            fields=[
                ('id_acr', models.IntegerField(primary_key=True, serialize=False)),
                ('data_atendimento', models.DateField()),
                ('hora_atendimento', models.DateTimeField()),
                ('cod_lme', models.CharField(max_length=20)),
                ('rev_lme', models.CharField(max_length=5)),
                ('nro_protocolo', models.CharField(max_length=25)),
                ('tipo_cliente', models.IntegerField(db_comment='Neste campo Ú informado qual o tipo de cliente que ligou fazendo a reclamaþÒo.\n\n0 - Distribuidor / Logista\n1 - Consumidor\n2 - Representante')),
                ('pessoa', models.IntegerField(db_comment='F - FÝsica\nJ - JurÝdica')),
                ('id_representante', models.IntegerField(blank=True, db_comment='Este campo s¾ Ú preenchido se o campo TIPO_CLIENTE for 2 - Representante.', null=True)),
                ('nome_consumidor', models.CharField(max_length=50)),
                ('cnpj_cpf_consumidor', models.CharField(max_length=14)),
                ('bairro_consumidor', models.CharField(blank=True, max_length=40, null=True)),
                ('endereco_consumidor', models.CharField(blank=True, max_length=50, null=True)),
                ('cep_consumidor', models.CharField(blank=True, max_length=9, null=True)),
                ('fone_consumidor', models.CharField(blank=True, max_length=14, null=True)),
                ('numero_nf', models.IntegerField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, db_comment='Alguma observaþÒo do atendimento feito ao cliente.', max_length=200, null=True)),
                ('nro_end_consumidor', models.CharField(blank=True, max_length=10, null=True)),
                ('dta_nf', models.DateField(blank=True, null=True)),
                ('id_busca_clirep', models.IntegerField(blank=True, null=True)),
                ('atendimento_concluido', models.IntegerField(blank=True, db_comment='0-Em Aberto; 1-ConcluÝdo', null=True)),
                ('id_pedido_venda', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_acr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCac',
            fields=[
                ('id_cac', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_entrada', models.DateField()),
                ('texto_nao_conformidade', models.CharField(blank=True, max_length=200, null=True)),
                ('fec_dta_eficacia_apos', models.DateField()),
                ('fec_dta_verificado', models.DateField()),
                ('fec_situacao_n_conf', models.IntegerField(db_comment='0 - Sim   1 - Parcialmente    2 - NÒo ')),
                ('fec_func_informados', models.BooleanField()),
                ('fec_func_treinamento', models.BooleanField()),
                ('fec_comentarios', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('tipo_acao', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_cac',
                'db_table_comment': 'Controle de AþÒo Corretiva/Preventiva\nDoc: P 8.5-02',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCme',
            fields=[
                ('id_meq', models.IntegerField(primary_key=True, serialize=False)),
                ('id_responsavel', models.IntegerField()),
                ('dta_lancto', models.DateField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_cme',
                'db_table_comment': 'Cronograma de ManutenþÒo de Mßquinas/Equipamentos\nPlanilha: P 6.3-02',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCrp',
            fields=[
                ('id_crp', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('num_lote_crp', models.CharField(blank=True, max_length=15, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_grupo', models.CharField(blank=True, db_comment='Este campo farß com que o controle de recipiente s¾ aceite itens do grupo informado. Ex.: Se o usußrio informar grupo POLIOU , recipiente s¾ aceitarß itens do grupo POLIOU.', max_length=11, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_crp',
                'db_table_comment': 'Controle de Recipientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCrq',
            fields=[
                ('id_crq', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_criacao', models.DateField()),
                ('dta_atualizacao', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_crq',
                'db_table_comment': 'Controle de Registros da Qualidade\nConforme planilha: P 4-2 R0',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMEpp',
            fields=[
                ('id_epp', models.IntegerField(primary_key=True, serialize=False)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('dta_entrada', models.DateField()),
                ('hor_entrada', models.TimeField()),
                ('tipo_entrada', models.IntegerField(blank=True, db_comment='0 - Entrada Normal\r\n1 - Entrada por Contagem', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_epp',
                'db_table_comment': 'Tabela: Entrada de Produtos da ProduþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMEtq',
            fields=[
                ('id_opr', models.IntegerField()),
                ('id_etq', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_barra', models.CharField(max_length=50)),
                ('sequencia', models.IntegerField()),
                ('dta_criacao', models.DateField()),
                ('hor_criacao', models.TimeField()),
                ('impressa', models.BooleanField()),
                ('dta_entrada_est', models.DateField(blank=True, db_comment='Data que o item entrou no estoque.', null=True)),
                ('hor_entrada_est', models.TimeField(blank=True, db_comment='Hora em que o item entrou no estoque.', null=True)),
                ('id_funcionario_est', models.IntegerField(blank=True, db_comment='Funcionßrio responsßvel de dar entrada no estoque.', null=True)),
                ('hor_impressa', models.TimeField(blank=True, null=True)),
                ('dta_impressa', models.DateField(blank=True, null=True)),
                ('id_opr_origem', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('dta_saida', models.DateField(blank=True, db_comment='Data da saÝda do produto(etiqueta) do estoque', null=True)),
                ('hor_saida', models.TimeField(blank=True, db_comment='Hora da saÝda do produto(etiqueta) do estoque', null=True)),
                ('id_ors_saida', models.IntegerField(blank=True, db_comment='Ordem de Faturamento responsßvel pela saÝda do produto(etiqueta)', null=True)),
                ('id_rom_saida', models.IntegerField(blank=True, db_comment='Romaneio que tem a conferÛncia desta etiqueta.', null=True)),
                ('id_funcionario_sai', models.CharField(blank=True, db_comment='Responsßvel pela saÝda do produto(etiqueta) do estoque', max_length=255, null=True)),
                ('id_epp', models.IntegerField(blank=True, null=True)),
                ('pcp_obs_item', models.CharField(blank=True, max_length=150, null=True)),
                ('temp_id_ors_saida_antigo', models.IntegerField(blank=True, null=True)),
                ('dta_reimpressa', models.DateField(blank=True, null=True)),
                ('hor_reimpressa', models.TimeField(blank=True, null=True)),
                ('id_func_reimpressa', models.IntegerField(blank=True, null=True)),
                ('motivo_reimpressa', models.CharField(blank=True, max_length=80, null=True)),
                ('temp_id_epp_antigo', models.IntegerField(blank=True, null=True)),
                ('temp_dta_entrada_est', models.DateField(blank=True, null=True)),
                ('contagem', models.BooleanField(blank=True, null=True)),
                ('dta_entrada_antes_contagem', models.DateField(blank=True, null=True)),
                ('hor_entrada_antes_contagem', models.TimeField(blank=True, null=True)),
                ('temp_obs_geral', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_etq',
                'db_table_comment': 'Tabela de Etiquetas da Ordem de ProduþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMEtqTemp',
            fields=[
                ('id_opr', models.IntegerField()),
                ('id_etq', models.IntegerField(primary_key=True, serialize=False)),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_barra', models.CharField(max_length=50)),
                ('sequencia', models.IntegerField()),
                ('dta_criacao', models.DateField()),
                ('hor_criacao', models.TimeField()),
                ('impressa', models.BooleanField()),
                ('dta_entrada_est', models.DateField(blank=True, db_comment='Data que o item entrou no estoque.', null=True)),
                ('hor_entrada_est', models.TimeField(blank=True, db_comment='Hora em que o item entrou no estoque.', null=True)),
                ('id_funcionario_est', models.IntegerField(blank=True, db_comment='Funcionßrio responsßvel de dar entrada no estoque.', null=True)),
                ('hor_impressa', models.TimeField(blank=True, null=True)),
                ('dta_impressa', models.DateField(blank=True, null=True)),
                ('id_opr_origem', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('dta_saida', models.DateField(blank=True, db_comment='Data da saÝda do produto(etiqueta) do estoque', null=True)),
                ('hor_saida', models.TimeField(blank=True, db_comment='Hora da saÝda do produto(etiqueta) do estoque', null=True)),
                ('id_ors_saida', models.IntegerField(blank=True, db_comment='Ordem de Faturamento responsßvel pela saÝda do produto(etiqueta)', null=True)),
                ('id_rom_saida', models.IntegerField(blank=True, db_comment='Romaneio que tem a conferÛncia desta etiqueta.', null=True)),
                ('id_funcionario_sai', models.CharField(blank=True, db_comment='Responsßvel pela saÝda do produto(etiqueta) do estoque', max_length=255, null=True)),
                ('id_epp', models.IntegerField(blank=True, null=True)),
                ('pcp_obs_item', models.CharField(blank=True, max_length=150, null=True)),
                ('temp_id_ors_saida_antigo', models.IntegerField(blank=True, null=True)),
                ('dta_reimpressa', models.DateField(blank=True, null=True)),
                ('hor_reimpressa', models.TimeField(blank=True, null=True)),
                ('id_func_reimpressa', models.IntegerField(blank=True, null=True)),
                ('motivo_reimpressa', models.CharField(blank=True, max_length=80, null=True)),
                ('temp_id_epp_antigo', models.IntegerField(blank=True, null=True)),
                ('temp_dta_entrada_est', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_etq_temp',
                'db_table_comment': 'Tabela de Etiquetas da Ordem de ProduþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMLbe',
            fields=[
                ('id_lbe', models.IntegerField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, db_comment='H - Retangular - Mßquina horizontal   V - Retangular - Mßquina vertical   C - CilÝndrico', max_length=1, null=True)),
                ('dta_laminacao', models.DateField()),
                ('qtde', models.FloatField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_lbe',
                'db_table_comment': 'LaminaþÒo de Bloco Rentangular/CilÝnndrico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMLpr',
            fields=[
                ('id_lpr', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_presenca', models.DateField()),
                ('hora', models.DateTimeField()),
                ('motivo_reuniao', models.CharField(blank=True, max_length=300, null=True)),
                ('conteudo_reuniao', models.CharField(blank=True, max_length=300, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('hora_fin', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_lpr',
                'db_table_comment': 'Tabela de lista de presenþa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMMcp',
            fields=[
                ('id_mcp', models.IntegerField(primary_key=True, serialize=False)),
                ('problema', models.CharField(blank=True, max_length=100, null=True)),
                ('id_cme_meq', models.IntegerField()),
                ('total_pecas', models.DecimalField(decimal_places=4, max_digits=18)),
                ('total_mobra', models.DecimalField(decimal_places=4, max_digits=18)),
                ('total_pecas_garantia', models.DecimalField(decimal_places=4, max_digits=18)),
                ('total_servicos_garantia', models.DecimalField(decimal_places=4, max_digits=18)),
                ('total_garantia', models.DecimalField(decimal_places=4, max_digits=18)),
                ('total_pecas_mobra', models.DecimalField(decimal_places=4, max_digits=18)),
                ('dta_autorizacao', models.DateField()),
                ('dta_inicio_atend', models.DateField()),
                ('hora_inicio_atend', models.DateTimeField()),
                ('dta_termino_atend', models.DateField()),
                ('hora_termino_atend', models.DateTimeField()),
                ('tipo_acao', models.IntegerField(blank=True, null=True)),
                ('tipo_manutencao', models.IntegerField(blank=True, db_comment='0 - Corretiva   1 - Preventiva', null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_mcp',
                'db_table_comment': 'Registro de ManutenþÒo Corretiva e Preventiva\nConforme DOC: P 6.3-01',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMNcf',
            fields=[
                ('id_ncf', models.IntegerField(primary_key=True, serialize=False)),
                ('texto_nao_conformidade', models.CharField(blank=True, max_length=200, null=True)),
                ('id_tamanho', models.IntegerField()),
                ('motivo', models.CharField(blank=True, db_comment='Caso nÒo tenha o produto cadastro o usußrio poderß digitar o Motivo do lanþamento de nÒo conformidade', max_length=100, null=True)),
                ('qtde_total_lote', models.FloatField()),
                ('qtde_nao_conforme', models.FloatField()),
                ('perc_nao_conforme', models.FloatField()),
                ('qtde_troca_dev', models.FloatField()),
                ('dta_emissao', models.DateField()),
                ('re_satisfatoria', models.BooleanField()),
                ('re_especificacao', models.CharField(blank=True, max_length=100, null=True)),
                ('ana_prazo_eficaz', models.IntegerField()),
                ('ana_disp_eficaz', models.IntegerField()),
                ('ana_racp', models.IntegerField()),
                ('ana_func_informados', models.IntegerField()),
                ('ana_func_treinamento', models.IntegerField()),
                ('ana_comentarios', models.CharField(blank=True, max_length=100, null=True)),
                ('ana_id_responsavel', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('re_dta_resp', models.DateField(blank=True, null=True)),
                ('ana_dta_resp', models.DateField(blank=True, null=True)),
                ('ana_dta_diretoria', models.DateField(blank=True, null=True)),
                ('ana_dta_racp', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_ncf',
                'db_table_comment': 'Controle de NÒo Conformidade\nDoc: P-8.3-01',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpb',
            fields=[
                ('id_opb', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('obs_administrativa', models.CharField(blank=True, max_length=200, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=200, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('origem', models.IntegerField(blank=True, db_comment='0 - Gerado Manualmente; \r\n1 - Gerado por Ordem de ProduþÒo;', null=True)),
                ('id_opr', models.IntegerField(blank=True, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opb',
                'db_table_comment': 'Ordem de ProduþÒo de Bloco de Espuma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpr',
            fields=[
                ('id_opr', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('obs_administrativa', models.CharField(blank=True, max_length=800, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=800, null=True)),
                ('id_responsavel', models.IntegerField()),
                ('situacao', models.IntegerField(db_comment='0 - EM ABERTO   1 - INICIADA   2 - ENCERRADA    3 - CANCELADA')),
                ('cub_produzir', models.FloatField()),
                ('cub_pedidos', models.FloatField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr',
                'db_table_comment': 'Ordem de ProduþÒo de Produtos Acabado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOrs',
            fields=[
                ('id_ors', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('id_pedido', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_rom', models.IntegerField(blank=True, db_comment='Este campo Ú alimentado no momento em que o usußrio digita o c¾digo do pedido de venda. Este campo Ú alimentado automaticamente.', null=True)),
                ('id_tipo_mov_estoque', models.IntegerField(blank=True, null=True)),
                ('id_almoxarifado', models.IntegerField(blank=True, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('hor_emissao', models.TimeField(blank=True, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('fin_gerado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_ors',
                'db_table_comment': 'Tabela de Ordem de SaÝdas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMPsc',
            fields=[
                ('id_psc', models.IntegerField(primary_key=True, serialize=False)),
                ('nome_cliente', models.CharField(blank=True, max_length=80, null=True)),
                ('data', models.DateField()),
                ('cidade', models.CharField(blank=True, max_length=30, null=True)),
                ('estado', models.CharField(blank=True, max_length=2, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('celular', models.CharField(blank=True, max_length=15, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('pergunta_1', models.IntegerField(db_comment='(1)\nVocÛ comprarß ou utilizarß o colchÒo GLOBO novamente?\n\n0 - NÒo\n1 - Sim')),
                ('pergunta_2', models.IntegerField(db_comment='(2)\nVocÛ recomendaria colchÒo GLOBO para outras pessoas?\n\n0 - NÒo\n1 - Sim')),
                ('pergunta_3', models.IntegerField(db_comment='(3)\nHß quanto tempo o Sr.(a) vem utilizando o colchÒo de Espuma da GLOBO?\n\n0 - menos de 1 ano\n1 - mais de 1 ano')),
                ('pergunta_4', models.IntegerField(db_comment='(4)\nEm comparaþÒo com outras alternativas de colch§es, o colchÒo GLOBO Ú:\n\n0 - Melhor\n1 - Igual\n2 - Pior')),
                ('pergunta_1_resposta', models.CharField(blank=True, db_comment='Este campo Ú utilizado quando o valor do campo PERGUNTA_4 for = N├O.', max_length=80, null=True)),
                ('pergunta_5', models.IntegerField(db_comment='(5)\nQual Ú o seu grau de satisfaþÒo geral com o seu colchÒo GLOBO?\n\n0 - Excelente\n1 - Bom \n2 - Razoßvel\n3 - Ruim')),
                ('pergunta_2_resposta', models.CharField(blank=True, db_comment='Este campo Ú utilizado quando o valor do campo PERGUNTA_5 for = N├O.', max_length=80, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_psc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRaa',
            fields=[
                ('id_raa', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('nro_raa', models.CharField(blank=True, db_comment='Este campo terß a mesma sequencia do nro do lote interno do produto que Ú utilizado pela NF de entrada.', max_length=15, null=True)),
                ('dta_recebimento_item', models.DateField()),
                ('codigo_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('qtde_amostra', models.FloatField()),
                ('pergunta_1', models.IntegerField(db_comment='Pergunta padrÒo:\nQuantidade da amostra Ú suficiente para os testes?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_2', models.IntegerField(db_comment='Pergunta padrÒo:\nQualidade do produto esta de acordo com o solicitado?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_3', models.IntegerField(db_comment='Pergunta padrÒo:\nO Material atendeu as expectativas?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_4', models.IntegerField(db_comment='Pergunta padrÒo:\nO material precisa de alguma adaptaþÒo?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_5', models.IntegerField(db_comment='Pergunta padrÒo:\nNecessita de mais amostra para concluir os testes?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_6', models.IntegerField(db_comment='Pergunta padrÒo:\nNecessidade de anßlise em laborat¾rio?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_7', models.IntegerField(db_comment='Pergunta padrÒo:\nEspessura X Largura X Comprimento estÒo de acordo com o especificado?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('pergunta_8', models.IntegerField(db_comment='Pergunta padrÒo:\nGramatura/peso estÒo de acordo com o especificado?\n\n0 - NÒo\n1 - Sim\n2 - NÒo aplicßvel')),
                ('resultado', models.IntegerField(db_comment='0 - Reprovado\n1 - Aprovado')),
                ('incorpora_item', models.IntegerField(db_comment='Incorpora o item na estrutura do produto?\n\n0 - NÒo\n1 - Sim')),
                ('dta_analise', models.DateField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, max_length=80, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('qtde_nf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_raa',
                'db_table_comment': 'Relat¾rio de Anßlise de Amostra.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRec',
            fields=[
                ('id_protocolo', models.IntegerField(primary_key=True, serialize=False)),
                ('id_empresa', models.IntegerField()),
                ('dta_reclamacao', models.DateField()),
                ('id_cliente', models.IntegerField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRom',
            fields=[
                ('id_rom', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_emissao', models.DateField()),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('placa', models.CharField(blank=True, max_length=8, null=True)),
                ('lot_qtde_total', models.FloatField(blank=True, db_comment='Neste campo acumula o total das qtde do lote, da tabela PCP_TB_M_ROM_LOT.', null=True)),
                ('hor_emissao', models.TimeField(blank=True, null=True)),
                ('hor_alt', models.TimeField(blank=True, db_comment='Utilizado no momento em que o usußrio altera o romaneio.', null=True)),
                ('id_resp_alt', models.IntegerField(blank=True, db_comment='Usußrio responsßvel por fazer alteraþ§es no Romaneio(Relat¾rio de Cargas).', null=True)),
                ('dta_alt', models.DateField(blank=True, null=True)),
                ('hor_fin', models.TimeField(blank=True, null=True)),
                ('dta_fin', models.DateField(blank=True, null=True)),
                ('id_resp_fin', models.IntegerField(blank=True, db_comment='Usußrio responsßvel pela finalizaþÒo do Romaneio(Relat¾rio de Cargas).', null=True)),
                ('ped_ite_qtde_total', models.IntegerField(blank=True, db_comment='Neste campo acumula o total das qtde dos itens do pedido de venda, da tabela PCP_TB_M_ROM_PED_ITE.', null=True)),
                ('id_pca', models.IntegerField(blank=True, null=True)),
                ('qtde_total_ite_conf', models.FloatField(blank=True, db_comment='Ficarß neste campo qtde total de itens pistolados.', null=True)),
                ('seq_pca_carreg_anual', models.IntegerField(blank=True, db_comment='C¾digo do campo seq_carreg_anual', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom',
                'db_table_comment': 'Tabela de Romaneio de Carga',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomPedIcfCopy',
            fields=[
                ('id_rom', models.IntegerField(primary_key=True, serialize=False)),
                ('id_pedido', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_barra', models.CharField(max_length=50)),
                ('dta_conferencia', models.DateField()),
                ('hor_conferencia', models.TimeField()),
                ('id_opr_etq', models.IntegerField()),
                ('item_conjugado', models.BooleanField(blank=True, db_comment='Quando o valor deste campo for TRUE quer dizer , que este item Ú um item conjugado. Pois existe itens do pedido que tem o CAD_TB_C_ITE_COJ preenchido.', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ped_icf_copy',
                'db_table_comment': 'Tabela de Itens Conferido do Pedido do Romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRvc',
            fields=[
                ('id_rvc', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_revisao', models.DateField()),
                ('col_tot_ite_rev', models.IntegerField()),
                ('col_tot_def_ide', models.IntegerField()),
                ('col_tot_col', models.IntegerField()),
                ('col_num_maior_def', models.IntegerField()),
                ('def_maior_nro_ocor', models.IntegerField()),
                ('indice_defeitos', models.FloatField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rvc',
                'db_table_comment': 'CONTROLE DE DEFEITOS NA REVIS├O DOS COLCHıES\nConforme a planilha C¾d. I 7.5-9-01',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMVve',
            fields=[
                ('id_vve', models.IntegerField(primary_key=True, serialize=False)),
                ('dta_cadastro', models.DateField()),
                ('situacao_limpeza', models.BooleanField()),
                ('situacao_revestimento', models.BooleanField()),
                ('situacao_madeiramento', models.BooleanField()),
                ('situacao_bau', models.BooleanField()),
                ('texto_nao_conformidade', models.CharField(blank=True, max_length=800, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_vve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProTbMPmb',
            fields=[
                ('dta_rec', models.DateField(blank=True, null=True)),
                ('hor_rec', models.TimeField(blank=True, null=True)),
                ('pacote_mobile', models.BinaryField(blank=True, null=True)),
                ('id_funcionario', models.IntegerField(blank=True, null=True)),
                ('pacote_utilizado', models.BooleanField(blank=True, db_comment='Caso for TRUE quer dizer que o pacote foi utilizado com sucesso para a geraþÒo das visitas, pedido, etc.', null=True)),
                ('id_pmb', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'pro_tb_m_pmb',
                'db_table_comment': 'Tabela de Pacote de Dados do Mobile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProTbMVis',
            fields=[
                ('id_vis', models.IntegerField(primary_key=True, serialize=False)),
                ('semana', models.IntegerField()),
                ('fechada', models.BooleanField(blank=True, null=True)),
                ('id_empresa', models.IntegerField(blank=True, null=True)),
                ('ano', models.IntegerField(blank=True, null=True)),
                ('dta_criacao', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_tb_m_vis',
                'db_table_comment': 'Tabela de Vistas a serem feitas aos produtores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbSaldoFinal2020Fea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_item', models.IntegerField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('qtde_tot_entradas', models.FloatField(blank=True, null=True)),
                ('qtde_tot_saidas', models.FloatField(blank=True, null=True)),
                ('saldo', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_saldo_final_2020_fea',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'teste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrCupomDetalhe',
            fields=[
                ('n_cupom', models.OneToOneField(db_column='n_cupom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.brcupommestre')),
                ('cod_produto', models.CharField(max_length=15)),
                ('n_item', models.IntegerField()),
                ('qtde', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('valor_unitario', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('desconto', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('acrecimo', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('cancelado', models.CharField(blank=True, max_length=1, null=True)),
                ('serial_impressora', models.CharField(max_length=60)),
                ('n_caixa', models.CharField(blank=True, max_length=3, null=True)),
                ('aliquota', models.CharField(blank=True, max_length=20, null=True)),
                ('unidade', models.CharField(blank=True, max_length=3, null=True)),
                ('numloja', models.CharField(blank=True, max_length=6, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('tanque', models.CharField(blank=True, max_length=3, null=True)),
                ('bomba', models.CharField(blank=True, max_length=3, null=True)),
                ('bico', models.CharField(blank=True, max_length=3, null=True)),
                ('ei', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('ef', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('cod_grade', models.CharField(blank=True, max_length=20, null=True)),
                ('cartao_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('cartao_autorizador', models.CharField(blank=True, max_length=20, null=True)),
                ('desc_produto', models.CharField(blank=True, max_length=100, null=True)),
                ('numcaixa', models.CharField(blank=True, max_length=5, null=True)),
                ('numterminal', models.CharField(blank=True, max_length=3, null=True)),
                ('bico_posto', models.CharField(blank=True, max_length=3, null=True)),
                ('data_ab', models.DateField(blank=True, null=True)),
                ('hora_ab', models.DateField(blank=True, null=True)),
                ('posicao_ab', models.CharField(blank=True, max_length=10, null=True)),
                ('serial', models.CharField(blank=True, max_length=100, null=True)),
                ('tabela', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_kit', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_vendedor', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_operador', models.CharField(blank=True, max_length=20, null=True)),
                ('pdeccodigo', models.CharField(blank=True, max_length=4, null=True)),
                ('prdcoutroscodigo', models.CharField(blank=True, max_length=18, null=True)),
                ('prvndescontopenota', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('prvnacrescimopenota', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('flag_servico', models.CharField(blank=True, max_length=1, null=True)),
                ('ccusto', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('ncm', models.CharField(blank=True, max_length=8, null=True)),
                ('ex_ipi', models.CharField(blank=True, max_length=3, null=True)),
                ('genero', models.CharField(blank=True, max_length=2, null=True)),
                ('cst_icms', models.CharField(blank=True, max_length=2, null=True)),
                ('origem_icms', models.CharField(blank=True, max_length=1, null=True)),
                ('aliquota_ipi', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('aliquota_pis', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('tipo_item', models.CharField(blank=True, max_length=2, null=True)),
                ('cfop', models.IntegerField(blank=True, null=True)),
                ('desc_unidade', models.CharField(blank=True, max_length=50, null=True)),
                ('stb', models.CharField(blank=True, max_length=1, null=True)),
                ('complemento_item', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'br_cupom_detalhe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrCupomPagamento',
            fields=[
                ('n_cupom', models.OneToOneField(db_column='n_cupom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.brcupommestre')),
                ('cod_forma_pag', models.CharField(max_length=10)),
                ('valor', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('serial_impressora', models.CharField(max_length=60)),
                ('descricao', models.CharField(blank=True, max_length=40, null=True)),
                ('vinculado', models.CharField(blank=True, max_length=1, null=True)),
                ('cancelado', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('cod_forma_troco1', models.CharField(blank=True, max_length=10, null=True)),
                ('forma_troco1', models.CharField(blank=True, max_length=40, null=True)),
                ('cod_forma_troco2', models.CharField(blank=True, max_length=10, null=True)),
                ('forma_troco2', models.CharField(blank=True, max_length=40, null=True)),
                ('cod_forma_troco3', models.CharField(blank=True, max_length=10, null=True)),
                ('forma_troco3', models.CharField(blank=True, max_length=40, null=True)),
                ('n_doc', models.CharField(blank=True, max_length=20, null=True)),
                ('banco', models.CharField(blank=True, max_length=5, null=True)),
                ('agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('conta', models.CharField(blank=True, max_length=10, null=True)),
                ('vencimento', models.DateField(blank=True, null=True)),
                ('qtd_parcela', models.IntegerField(blank=True, null=True)),
                ('valor_troco1', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('valor_troco2', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('valor_troco3', models.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
                ('id_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('nome_cheque', models.CharField(blank=True, max_length=70, null=True)),
                ('cpf_cheque', models.CharField(blank=True, max_length=20, null=True)),
                ('fone_cheque', models.CharField(blank=True, max_length=25, null=True)),
                ('cod_retaguarda', models.CharField(blank=True, max_length=20, null=True)),
                ('item', models.IntegerField()),
                ('strtipotransacaotef', models.CharField(blank=True, max_length=10, null=True)),
                ('cod_bandeira', models.CharField(blank=True, max_length=20, null=True)),
                ('parstrnomeredetef', models.CharField(blank=True, max_length=50, null=True)),
                ('parstrnumidtranstef', models.CharField(blank=True, max_length=20, null=True)),
                ('parstrnsutranstefhost', models.CharField(blank=True, max_length=20, null=True)),
                ('dthoratransacao', models.DateField(blank=True, null=True)),
                ('troco', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'br_cupom_pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrItensRz',
            fields=[
                ('serial', models.OneToOneField(db_column='serial', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.brreducaoz')),
                ('data_movimento', models.DateField()),
                ('tag', models.CharField(max_length=50)),
                ('descricao', models.CharField(max_length=60)),
                ('valor', models.CharField(blank=True, max_length=20, null=True)),
                ('indice', models.CharField(max_length=10)),
                ('sequencial', models.CharField(blank=True, max_length=10, null=True)),
                ('aliquota', models.CharField(blank=True, max_length=10, null=True)),
                ('contador', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo', models.CharField(blank=True, max_length=20, null=True)),
                ('sigla', models.CharField(blank=True, max_length=20, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'br_itens_rz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrPedDetalhe',
            fields=[
                ('dtemissao', models.OneToOneField(db_column='dtemissao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.brpedmestre')),
                ('numero_nota', models.CharField(max_length=20)),
                ('serie_nota', models.CharField(max_length=3)),
                ('cod_produto', models.CharField(max_length=14)),
                ('desc_produto', models.CharField(blank=True, max_length=100, null=True)),
                ('preco', models.FloatField(blank=True, null=True)),
                ('quantidade', models.FloatField(blank=True, null=True)),
                ('acrescimo', models.FloatField(blank=True, null=True)),
                ('desconto', models.FloatField(blank=True, null=True)),
                ('total_item', models.FloatField(blank=True, null=True)),
                ('un', models.CharField(blank=True, max_length=3, null=True)),
                ('aliquota', models.CharField(blank=True, max_length=10, null=True)),
                ('flag_sis', models.CharField(blank=True, max_length=1, null=True)),
                ('flag_aceito', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'br_ped_detalhe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCAusPrg',
            fields=[
                ('id_aus', models.OneToOneField(db_column='id_aus', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcaus')),
                ('id_perfil_seg', models.IntegerField()),
                ('formulario', models.CharField(max_length=100)),
                ('chave', models.CharField(max_length=200)),
                ('id_empresa', models.IntegerField()),
                ('adicionar', models.BooleanField(blank=True, null=True)),
                ('alterar', models.BooleanField(blank=True, null=True)),
                ('excluir', models.BooleanField(blank=True, null=True)),
                ('consulta', models.BooleanField(blank=True, null=True)),
                ('id_aus_prg', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_aus_prg',
                'db_table_comment': 'Alterar Acessos do Usußrio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliBco',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('id_banco_info', models.IntegerField()),
                ('dta_informacao', models.DateField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=2800, null=True)),
                ('arquivo', models.BinaryField(blank=True, null=True)),
                ('nome_arquivo', models.CharField(blank=True, max_length=255, null=True)),
                ('id_mkt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_bco',
                'db_table_comment': 'Banco de Informaþ§es de Clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliCrd',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('lim_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('lim_saldo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_crd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliCto',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('id_contato', models.IntegerField()),
                ('nome', models.CharField(max_length=50)),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('dta_nascimento', models.DateField()),
                ('tipo_contato', models.IntegerField(blank=True, db_comment='0 - Socio\n1 - Filho\n2 - Conjuge\n3 - Pais\n4 - Outros', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_cto',
                'db_table_comment': 'Tabela de Contato de clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliEml',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('email', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_eml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliInf',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('dta_informacao', models.DateField()),
                ('dta_maior_compra', models.DateField(blank=True, null=True)),
                ('vlr_maior_compra', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_lim_liberado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('atrasa', models.BooleanField(blank=True, null=True)),
                ('informante', models.CharField(blank=True, max_length=20, null=True)),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
                ('id_sequencia', models.IntegerField()),
                ('dta_ult_compra', models.DateField(blank=True, null=True)),
                ('vlr_ult_compra', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_inf',
                'db_table_comment': 'Tabela de Informaþ§es de Clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliPrd',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('id_sequencia', models.IntegerField()),
                ('dias', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_cli_prd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliPro',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('id_propriedade', models.IntegerField()),
                ('tipo', models.IntegerField()),
                ('nome', models.CharField(blank=True, max_length=50, null=True)),
                ('bairro', models.CharField(blank=True, max_length=40, null=True)),
                ('id_cidade', models.CharField(blank=True, max_length=10, null=True)),
                ('doc_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('doc_incra', models.CharField(blank=True, max_length=20, null=True)),
                ('doc_cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('doc_ie', models.CharField(blank=True, max_length=20, null=True)),
                ('administrador', models.CharField(blank=True, max_length=50, null=True)),
                ('endereco', models.CharField(blank=True, max_length=60, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('id_pro_mob_temp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliRec',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
                ('id_reclamacao', models.IntegerField()),
                ('dta_registro', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_rec',
                'db_table_comment': 'Tabela de ReclamaþÒo de cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliRvd',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
            ],
            options={
                'db_table': 'cad_tb_c_cli_rvd',
                'db_table_comment': 'Revendas do Cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliVei',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbccli')),
            ],
            options={
                'db_table': 'cad_tb_c_cli_vei',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCEcfFpg',
            fields=[
                ('ecf_serial_impressora', models.OneToOneField(db_column='ecf_serial_impressora', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcecf')),
                ('id_forma_pag', models.IntegerField()),
                ('id_forma_pag_ecf', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_ecf_fpg',
                'db_table_comment': 'Tabela de Formas de Pagamento da ECF\n\nEsta tabela terß a funþÒo de linkar a forma de pagamento do enSoft com a forma de pagamento da ECF.\nCriado por Maxsuel Victor em 20/02/2015',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFamEmp',
            fields=[
                ('id_familia', models.OneToOneField(db_column='id_familia', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfam')),
                ('faz_corr_preco_perfil', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_fam_emp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCForRep',
            fields=[
                ('id_fornecedor', models.OneToOneField(db_column='id_fornecedor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfor')),
                ('id_for_rp', models.IntegerField()),
                ('nome', models.CharField(blank=True, max_length=60, null=True)),
                ('doc_cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('endereco', models.CharField(blank=True, max_length=50, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('id_cidade', models.CharField(blank=True, max_length=10, null=True)),
                ('tel_1', models.CharField(blank=True, max_length=14, null=True)),
                ('tel_2', models.CharField(blank=True, max_length=14, null=True)),
                ('tel_celular', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('obs', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_for_rep',
                'db_table_comment': 'Tabela de Cadstro de Representantes do Fornecedor.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMIqf',
            fields=[
                ('id_fornecedor', models.OneToOneField(db_column='id_fornecedor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfor')),
                ('ano_iqf', models.IntegerField()),
                ('dta_semestre1', models.DateField(blank=True, db_comment='Nome do campo: N·mero de entregas.\nEste campo refere-se a quantidade de notas fiscais do fornecedor no primeiro semestre.', null=True)),
                ('qtde_nf_semestre1', models.IntegerField()),
                ('qtde_demeritos_semestre1', models.IntegerField(db_comment='Nome do campo: Qtde de demÚritos\nSoma os demÚritos de todas as notas do fornecedor. Essa informaþÒo tß na tabela EST_TB_M_NFE_S.')),
                ('qtde_plano_acao_semestre1', models.IntegerField()),
                ('iqf_semestre1', models.FloatField()),
                ('status_semestre1', models.IntegerField(db_comment='1 - Sem fornecimento no semestre\n2 - Ruim\n3 - Regular\n4 - Bom')),
                ('dta_semestre2', models.DateField(blank=True, null=True)),
                ('qtde_nf_semestre2', models.IntegerField(db_comment='Nome do campo: N·mero de entregas.\nEste campo refere-se a quantidade de notas fiscais do fornecedor no segundo semestre.')),
                ('qtde_demeritos_semestre2', models.IntegerField(db_comment='Nome do campo: Qtde de demÚritos\nSoma os demÚritos de todas as notas do fornecedor. Essa informaþÒo tß na tabela EST_TB_M_NFE_S.')),
                ('qtde_plano_acao_semestre2', models.IntegerField()),
                ('iqf_semestre2', models.FloatField()),
                ('status_semestre2', models.IntegerField(db_comment='1 - Sem fornecimento no semestre\n2 - Ruim\n3 - Regular\n4 - Bom')),
                ('ra_dta_prevista', models.DateField(blank=True, db_comment='Faz parte da re-qualificaþÒo anual.', null=True)),
                ('ra_dta_realizada', models.DateField(blank=True, db_comment='Faz parte da re-qualificaþÒo anual.', null=True)),
                ('ra_metodo1_media_anual', models.FloatField(blank=True, null=True)),
                ('ra_metodo1_status', models.CharField(blank=True, max_length=1, null=True)),
                ('ra_metodo2_especifico', models.CharField(blank=True, max_length=150, null=True)),
                ('ra_metodo2_status', models.CharField(blank=True, max_length=100, null=True)),
                ('ra_observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('observacao_geral', models.CharField(blank=True, max_length=150, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_iqf',
                'db_table_comment': 'Indice de qualificaþÒo de fornecedores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFpgTap',
            fields=[
                ('id_forma_pag', models.OneToOneField(db_column='id_forma_pag', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfpg')),
                ('qtde_parc_tot', models.IntegerField()),
                ('qtde_parc_ini', models.IntegerField(blank=True, null=True)),
                ('qtde_parc_fin', models.IntegerField(blank=True, null=True)),
                ('taxa', models.FloatField(blank=True, null=True)),
                ('dias_acres_vencto', models.IntegerField(blank=True, db_comment='Campo utilizado no momento do fechamento do caixa. O sistema irß acrescentar no vencimento do cartÒo a qtde de dias que tem neste campo.', null=True)),
                ('id_empresa', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_fpg_tap',
                'db_table_comment': 'Tabela responsßvel pelas taxas aprazos do cartÒo.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFunCpn',
            fields=[
                ('id_funcionario', models.OneToOneField(db_column='id_funcionario', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfun')),
            ],
            options={
                'db_table': 'cad_tb_c_fun_cpn',
                'db_table_comment': 'Tabela: CondiþÒo de Pagamento nÒo permitada para o vendedor.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFunCrg',
            fields=[
                ('id_funcionario', models.OneToOneField(db_column='id_funcionario', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfun')),
            ],
            options={
                'db_table': 'cad_tb_c_fun_crg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCFunEmp',
            fields=[
                ('id_funcionario', models.OneToOneField(db_column='id_funcionario', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcfun')),
                ('permitir_acesso', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_fun_emp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCGruEmp',
            fields=[
                ('id_grupo', models.OneToOneField(db_column='id_grupo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcgru')),
                ('fator_corr_aprazo', models.FloatField(blank=True, null=True)),
                ('fator_corr_avista', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_gru_emp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCPrp',
            fields=[
                ('id_grupo', models.OneToOneField(db_column='id_grupo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcgru')),
                ('caract_inspecionada', models.CharField(blank=True, max_length=300, null=True)),
                ('criterio_aceitacao', models.CharField(blank=True, max_length=500, null=True)),
                ('metodo_verificacao', models.CharField(blank=True, max_length=500, null=True)),
                ('amostragem', models.CharField(blank=True, max_length=500, null=True)),
                ('manuseio_transporte', models.CharField(blank=True, max_length=500, null=True)),
                ('armazenamento', models.CharField(blank=True, max_length=500, null=True)),
                ('preservacao', models.CharField(blank=True, max_length=500, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_prp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCPrq',
            fields=[
                ('id_grupo', models.OneToOneField(db_column='id_grupo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcgru')),
                ('dta_cadastro', models.DateField()),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_prq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteApl',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_veiculo', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_ite_apl',
                'db_table_comment': 'APLICACAO\nTABELA UTILIZADA PARA COLOCAR OS VEIUCLOS/MAQUIANS QUE UTILIZAM ESTA PEC.\nTABELA UTILIZADA EM CTC E OFI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteCat',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('preco', models.DecimalField(decimal_places=4, max_digits=18)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_cat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteCoj',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_item_conjugado', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('qtde_tempo', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_coj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteCom',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_materia_prima', models.IntegerField()),
                ('qtde', models.FloatField()),
            ],
            options={
                'db_table': 'cad_tb_c_ite_com',
                'db_table_comment': 'Cadastro de Ficha de composiþÒo de produto acabado.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteEsp',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
            ],
            options={
                'db_table': 'cad_tb_c_ite_esp',
                'db_table_comment': 'Tabela de EspecificaþÒo - PCP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteLoc',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('loca_rua', models.CharField(blank=True, max_length=20, null=True)),
                ('loca_prateleira', models.CharField(blank=True, max_length=20, null=True)),
                ('loca_escaninho', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_loc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCItePrc',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_perfil_cli', models.IntegerField()),
                ('preco_avista', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco1', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco2', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco3', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('preco4', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_empresa', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_ite_prc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteTpr',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_tpr', models.IntegerField()),
                ('preco', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_tpr',
                'db_table_comment': 'Tabela de Precos, atender ao sistema enBuild',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCIteXml',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_emitente', models.IntegerField()),
                ('id_fabrica', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'cad_tb_c_ite_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMPro',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('lote', models.CharField(max_length=30)),
                ('data', models.DateField(blank=True, null=True)),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('arquivo', models.CharField(blank=True, max_length=255, null=True)),
                ('doc_pro', models.BinaryField(blank=True, null=True)),
                ('documento', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_pro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMFes',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('data_ult_movimento', models.DateField(blank=True, null=True)),
                ('data_ult_inventario', models.DateField(blank=True, null=True)),
                ('qtde_entrada', models.FloatField(blank=True, null=True)),
                ('qtde_saida', models.FloatField(blank=True, null=True)),
                ('saldo_fisico', models.FloatField(blank=True, null=True)),
                ('qtde_ped_compra', models.FloatField(blank=True, null=True)),
                ('qtde_ped_venda', models.FloatField(blank=True, null=True)),
                ('vlr_custo_medio', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_custo_ult_compra', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('data_ult_compra', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_fes',
                'db_table_comment': 'Ficha de estque sintetica.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCdp',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcite')),
                ('dta_lancamento', models.DateField()),
                ('med_comp_01', models.FloatField()),
                ('med_comp_02', models.FloatField()),
                ('med_comp_03', models.FloatField()),
                ('med_comp_media', models.FloatField()),
                ('med_largura_01', models.FloatField()),
                ('med_largura_02', models.FloatField()),
                ('med_largura_03', models.FloatField()),
                ('med_largura_media', models.FloatField()),
                ('med_altura_01', models.FloatField()),
                ('med_altura_02', models.FloatField()),
                ('med_altura_03', models.FloatField()),
                ('med_altura_media', models.FloatField()),
                ('situacao', models.BooleanField(db_comment='true - Aprovado  False - Reprovado')),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cdp',
                'db_table_comment': 'Controle Dimensional de Produto Acabado\nConforme Planilha: I 7.5.9-02',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCMtvMes',
            fields=[
                ('id_mtv', models.OneToOneField(db_column='id_mtv', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcmtv')),
                ('qtde_mes_01', models.FloatField(blank=True, null=True)),
                ('valor_mes_01', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_02', models.FloatField(blank=True, null=True)),
                ('valor_mes_02', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_03', models.FloatField(blank=True, null=True)),
                ('valor_mes_03', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_04', models.FloatField(blank=True, null=True)),
                ('valor_mes_04', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_05', models.FloatField(blank=True, null=True)),
                ('valor_mes_05', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_06', models.FloatField(blank=True, null=True)),
                ('valor_mes_06', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_07', models.FloatField(blank=True, null=True)),
                ('valor_mes_07', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_08', models.FloatField(blank=True, null=True)),
                ('valor_mes_08', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_09', models.FloatField(blank=True, null=True)),
                ('valor_mes_09', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_10', models.FloatField(blank=True, null=True)),
                ('valor_mes_10', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_11', models.FloatField(blank=True, null=True)),
                ('valor_mes_11', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_mes_12', models.FloatField(blank=True, null=True)),
                ('valor_mes_12', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_total', models.FloatField(blank=True, null=True)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_mtv_mes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParBxp',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('id_empresa_bxp', models.IntegerField()),
                ('permite_baixar', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_bxp',
                'db_table_comment': 'Empresas permitidas baixar contas a pagar na empresa logada.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParBxr',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('id_empresa_bxr', models.IntegerField()),
                ('permite_baixar', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_bxr',
                'db_table_comment': 'Empresas permitidas baixar contas a receber na empresa logada.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParCpg',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('per_reajuste', models.FloatField(blank=True, null=True)),
                ('sequencia', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_cpg',
                'db_table_comment': 'CondiþÒo de pagamento para hieraquia de preþos (composiþÒo do preþoa a prazo)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParCtr',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('ativa_producao', models.BooleanField(blank=True, null=True)),
                ('ped_ativa_titulos', models.BooleanField(blank=True, null=True)),
                ('ped_aceita_est_negativo', models.BooleanField(blank=True, null=True)),
                ('utiliza_almoxarifado', models.BooleanField(blank=True, null=True)),
                ('utiliza_lote_na_entrada', models.BooleanField(blank=True, null=True)),
                ('ativa_cor', models.BooleanField(blank=True, null=True)),
                ('ativa_tamanho', models.BooleanField(blank=True, null=True)),
                ('rcr_inf_pag_credito', models.BooleanField(blank=True, null=True)),
                ('nfe_separa_prod_serv', models.BooleanField(blank=True, db_comment='Separa produtos de serviþos no momento de geraþÒo da nota fiscal, originando de pedido e Ordem de serviþos.', null=True)),
                ('ped_ver_limite', models.BooleanField(blank=True, db_comment='Verifica se no pedido de venda vai validar limite de credito!', null=True)),
                ('faz_corr_preco_perfil', models.BooleanField(blank=True, null=True)),
                ('tax_juros_mensal', models.FloatField(blank=True, null=True)),
                ('per_margem_lucro', models.FloatField(blank=True, db_comment='mARGEM UTILIZADA NA ENTRADA DE MERCADORIA PARA CALCULO DO PREÃO DE VENDA SUGERIDO.', null=True)),
                ('per_desp_fixa', models.FloatField(blank=True, db_comment='Percentual das despesas administrativa, este campo Ú para compor o lucro liquido na venda.', null=True)),
                ('per_cofins_l_real', models.FloatField(blank=True, null=True)),
                ('per_pis_l_real', models.FloatField(blank=True, null=True)),
                ('dia_protesto', models.IntegerField(blank=True, null=True)),
                ('per_ir', models.FloatField(blank=True, null=True)),
                ('per_cssl', models.FloatField(blank=True, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_lim_maximo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_iss', models.FloatField(blank=True, null=True)),
                ('ped_cliente_consumidor', models.IntegerField(blank=True, null=True)),
                ('pde_id_forma_pag', models.IntegerField(blank=True, null=True)),
                ('pde_id_fornecedor', models.IntegerField(blank=True, null=True)),
                ('pde_id_ccusto', models.IntegerField(blank=True, null=True)),
                ('pde_id_local_titulo', models.IntegerField(blank=True, null=True)),
                ('pde_id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('eff_finalidade', models.CharField(blank=True, db_comment='C¾digo da finalidade do arquivo: \n0 - Remessa do arquivo original; \n1 - Remessa do arquivo substituto.', max_length=1, null=True)),
                ('eff_perfil', models.CharField(blank=True, db_comment=' Perfil de apresentaþÒo do arquivo fiscal; \nA û Perfil A; \nB û Perfil B.; \nC û Perfil C', max_length=1, null=True)),
                ('eff_atividade', models.CharField(blank=True, db_comment='Indicador de tipo de atividade: \n0 û Industrial ou equiparado a industrial; \n1 û Outros', max_length=1, null=True)),
                ('efc_layout', models.CharField(blank=True, db_comment='DigitaþÒo Livre', max_length=3, null=True)),
                ('efc_tipo_escrituracao', models.CharField(blank=True, db_comment='0 Original\n1 Retificadora', max_length=1, null=True)),
                ('efc_ind_reg_cum', models.CharField(blank=True, db_comment='1 = Regime de Caixa - escrituraþÒo consolidada.\n2 = Regime de CompetÛncia - EscrituraþÒo Consolidada.\n9 = Regime de CompetÛncia - EscrituraþÒo Detalhada', max_length=1, null=True)),
                ('efc_situa_especial', models.CharField(blank=True, db_comment='0 Aberta\n1 CisÒo\n2 FusÒo\n3 InoperaþÒo\n4 Encerramento', max_length=1, null=True)),
                ('efc_ind_nat_pj', models.CharField(blank=True, db_comment='00 Sociedade Empresaria em Geral\n01 Sociedade Corporativa\n02 Entidade Sujeita ao PIS/Pasep..\n', max_length=2, null=True)),
                ('efc_ind_ativ', models.CharField(blank=True, db_comment='0 Industria\n1 Prestador de Serviþos\n2 Atividade de Comercio\n3 Atividade Financeira\n4 Atividade Imobiliaria\n9 Outros', max_length=1, null=True)),
                ('efc_ind_apro_cred', models.CharField(blank=True, db_comment='1 MÚtodo de ApropriaþÒo Direta\n2 MÚtodo sw Retaio Proporcional', max_length=1, null=True)),
                ('efc_cod_tipo_cont', models.CharField(blank=True, db_comment='1 Aliquota Basica\n2 Aliquota Especifica', max_length=1, null=True)),
                ('efc_cod_inc_trib', models.CharField(blank=True, max_length=1, null=True)),
                ('sef_layout', models.CharField(blank=True, db_comment='DigitaþÒo Livre', max_length=4, null=True)),
                ('sef_cod_fin', models.CharField(blank=True, db_comment='Finalidade \n0 Documento original emitido em arquivo\n1 TranscriþÒo de documentos de emissÒo pr¾pria\n2 TranscriþÒo de documentos emitidos por terceiros\n3 TranscriþÒo de documentos capturados por digitalizaþÒo\n4 TranscriþÒo de documentos emitidos em equipamento especializado\n5 Livros de resultados e obrigaþ§es\n6 Livros e mapas de controle\n7 Guias de informaþ§es econ¶mico-fiscais\n8 Livros da contabilidade\n9 Extratos de documentos', max_length=1, null=True)),
                ('sef_cod_ctd', models.CharField(blank=True, db_comment='Conteudo do Arquivo:\n20 - Lanþamentos de operaþ§es e resultados fiscais\n', max_length=2, null=True)),
                ('sef_ind_ed', models.CharField(blank=True, db_comment='Entrada de dados:\n0- DigitaþÒo de dados\n1- ImportaþÒo de arquivo-texto\n2- AdiþÒo de documentos/arquivo-texto\n3- ExportaþÒo de arquivo-texto', max_length=1, null=True)),
                ('sef_ind_arq', models.CharField(blank=True, db_comment='Documento contido no arquivo:\n5- Livros de resultados e obrigaþ§es', max_length=1, null=True)),
                ('sef_prf_iss', models.CharField(blank=True, db_comment='Indicador de exigibilidade da escrituraþÒo do ISS:\n0- Sim, no modo simplificado de escrituraþÒo do imposto\n2- Sim, no modo integral de escrituraþÒo do regime normal de apuraþÒo do imposto\n9- NÒo obrigado a escriturar', max_length=1, null=True)),
                ('sef_prf_icms', models.CharField(blank=True, db_comment='Indicador de exigibilidade da escrituraþÒo do ICMS:\n0- Sim, no modo simplificado de escrituraþÒo do imposto\n1- Sim, no modo intermedißrio de escrituraþÒo do regime normal de apuraþÒo do imposto\n2- Sim, no modo integral de escrituraþÒo do regime normal de apuraþÒo do imposto\n9- NÒo obrigado a escriturar', max_length=1, null=True)),
                ('sef_prf_ridf', models.CharField(blank=True, db_comment='Indicador de exigibilidade do Registro de ImpressÒo de Documentos Fiscais:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_prf_rudf', models.CharField(blank=True, db_comment='Indicador de exigibilidade do Registro de UtilizaþÒo de Documentos Fiscais:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_prf_lmc', models.CharField(blank=True, db_comment='Indicador de exigibilidade do Livro de MovimentaþÒo de CombustÝveis:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_prf_rv', models.CharField(blank=True, db_comment='Indicador de exigibilidade do Registro de VeÝculos:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_prf_ri', models.CharField(blank=True, db_comment='Indicador de exigibilidade do Registro de VeÝculos:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_ec', models.CharField(blank=True, db_comment='Indicador de apresentaþÒo da escrituraþÒo contßbil:\n0- Completa registrada em arquivo digital\n1- Completa registrada em papel, microfilme, fichas avulsas, ou fichas/folhas contÝnuas\n2- Simplificada registrada em arquivo digital\n3- Simplificada registrada papel, microfilme, fichas avulsas, ou fichas/folhas contÝnuas\n4- Livro Caixa registrado em arquivo digital\n5- Livro Caixa registrado papel, microfilme, fichas avulsas, ou fichas/folhas contÝnuas\n9- NÒo obrigado a escriturar', max_length=1, null=True)),
                ('sef_ind_iss', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas ao ISS:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_rt', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas Ó retenþÒo tributßria do ISS, na condiþÒo de contribuinte-substituÝdo:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_icms', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas ao ICMS:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_st', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas Ó substituiþÒo tributßria do ICMS, na condiþÒo de contribuinte-substituto:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_at', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas Ó antecipaþÒo tributßria do ICMS, nas entradas:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_ipi', models.CharField(blank=True, db_comment='Indicador de operaþ§es sujeitas ao IPI:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('sef_ind_ri', models.CharField(blank=True, db_comment='Indicador de apresentaþÒo avulsa do Registro de Inventßrio:\n0- Sim\n1- NÒo', max_length=1, null=True)),
                ('aliq_interna_icms', models.IntegerField(blank=True, null=True)),
                ('dta_saldo_inicial', models.DateField(blank=True, null=True)),
                ('ano_corrente', models.IntegerField(blank=True, null=True)),
                ('mes_corrente', models.IntegerField(blank=True, null=True)),
                ('id_lme', models.IntegerField(blank=True, null=True)),
                ('tipo_desconto_cmp_ped', models.IntegerField(blank=True, null=True)),
                ('id_alm_padrao', models.IntegerField(blank=True, null=True)),
                ('doc_layout', models.CharField(blank=True, max_length=4, null=True)),
                ('doc_cod_fin', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_cod_ctd', models.CharField(blank=True, max_length=2, null=True)),
                ('doc_ind_ed', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_arq', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_iss', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_icms', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_ridf', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_rudf', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_lmc', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_rv', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_prf_ri', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_ec', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_iss', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_rt', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_icms', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_st', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_at', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_ipi', models.CharField(blank=True, max_length=1, null=True)),
                ('doc_ind_ri', models.CharField(blank=True, max_length=1, null=True)),
                ('per_corr_preco_prazo', models.FloatField(blank=True, null=True)),
                ('cte_tipo_estoque_ent', models.IntegerField(blank=True, null=True)),
                ('cte_tipo_estoque_sai', models.IntegerField(blank=True, null=True)),
                ('dec_forma_pag_credito', models.IntegerField(blank=True, db_comment='DEC=DEVOLUÃ├O DE CLIENTE', null=True)),
                ('pcp_id_item_sob_medida', models.IntegerField(blank=True, null=True)),
                ('pcp_cod_int_fte_etq', models.CharField(blank=True, max_length=5, null=True)),
                ('ped_cliente', models.IntegerField(blank=True, null=True)),
                ('mes_limite', models.IntegerField(blank=True, null=True)),
                ('ped_altera_preco', models.BooleanField(blank=True, null=True)),
                ('msg_email_cotacao', models.CharField(blank=True, max_length=1, null=True)),
                ('avf_media_avaliacao', models.FloatField(blank=True, db_comment='campo utilizado na avaliþÒo de fornecedor do sistema de contrutora', null=True)),
                ('per_desp_var', models.FloatField(blank=True, db_comment='Campo com influÛncia no cßlculo da rentabilidade lÝquida.', null=True)),
                ('orv_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Campo sera utilizado na ordem de servicos.', null=True)),
                ('serie_nf', models.CharField(blank=True, db_comment='Este campo Ú utilizado no momento de gerar nota fiscal de saÝda e de devoluþÒo', max_length=3, null=True)),
                ('rcr_id_tif_deb', models.IntegerField(blank=True, db_comment='Campo utilizado no momento em que Ú feito uma Nota Fiscal de SaÝda (Venda), quando for utilizado forma de pagamento com DOC_IMPRESSO = 7 (CrÚdito);', null=True)),
                ('rcr_id_tif_cre', models.IntegerField(blank=True, db_comment='Campo utilizado no momento em que Ú feito uma Nota Fiscal de SaÝda (Venda), quando for utilizado forma de pagamento com DOC_IMPRESSO = 7 (CrÚdito); ', null=True)),
                ('rcr_id_plano_sef', models.CharField(blank=True, db_comment='Este campo Ú utilizado quando a Nota Fiscal de Venda utiliza forma de pagamento do tipo CR╔DITO. Ele serß usado no momento das geraþ§es dos registros de movimento de caixa. O plano de conta deve ser SEM FLUXO.', max_length=11, null=True)),
                ('cxa_id_plano_suprim', models.CharField(blank=True, db_comment='Este campo serß utilizado pela rotina de Abertura/Fechamento de Caixa que Ú usado pela tela de Controle de Caixa;', max_length=11, null=True)),
                ('cxa_id_tif_suprim', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela rotina de Abertura/Fechamento de Caixa que Ú usado pela tela de Controle de Caixa;', null=True)),
                ('cxa_id_plano_sangria', models.CharField(blank=True, db_comment='Este campo serß utilizado pela rotina de Suprimentos / Sangria  que Ú usado pela tela de Controle de Caixa;', max_length=11, null=True)),
                ('cxa_id_tif_sangria', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela rotina de Suprimentos / Sangria  que Ú usado pela tela de Controle de Caixa;', null=True)),
                ('cxa_exp_id_tif_sangria', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela rotina de Suprimentos / Sangria  que Ú usado pela tela de Controle de Caixa;', null=True)),
                ('cxa_exp_id_plano_sangria', models.CharField(blank=True, db_comment='Este campo serß utilizado pela rotina de Suprimentos / Sangria  que Ú usado pela tela de Controle de Caixa;', max_length=11, null=True)),
                ('rcr_id_condicao_pag', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela DevoluþÒo de NF de Cliente.', null=True)),
                ('rcr_id_forma_pag', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela DevoluþÒo de NF de Cliente.', null=True)),
                ('dev_for_id_condicao_pag', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela tela de Nota Fiscal de Dev. de Fornecedor.', null=True)),
                ('cxa_critica_chq', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela tela de Controle de Caixa na parte de Notas (FAT_UN_M_CXA_NFE);', null=True)),
                ('fat_seq_termo', models.IntegerField(blank=True, db_comment='Campo sequÛncia utilizado pela impressÒo do Termo, pelo botÒo GerarNfe da tela de controle de caixa.', null=True)),
                ('per_cofins_l_presumido', models.FloatField(blank=True, null=True)),
                ('per_pis_l_presumido', models.FloatField(blank=True, null=True)),
                ('cxa_inf_lote_car_fech', models.BooleanField(blank=True, db_comment='Caso o valor seja TRUE, no momento do fechamento do caixa o usußrio serß obrigado a informar o nro do lote de cada cartÒo.', null=True)),
                ('conc_alt_txa_fixa_car', models.BooleanField(blank=True, db_comment='Caso seja TRUE, na tela de conciliaþÒo de cartÒo de crÚdito o sistema permitirß que o usußrio altere o valor da Taxa Fixa que vem do cartÒo (car_taxa).', null=True)),
                ('nfe_ecf_id_condicao_pag', models.IntegerField(blank=True, db_comment='Campo utilizado no momento da GeraþÒo de uma NFE partindo de uma ECF.', null=True)),
                ('nfe_ecf_tipo_estoque', models.IntegerField(blank=True, db_comment='Campo utilizado no momento da GeraþÒo de uma NFE partindo de uma ECF.', null=True)),
                ('cxa_imprime_etq', models.BooleanField(blank=True, db_comment='Campo utilizado pela rotina de Controle de Caixa, no botÒo Gerar Nfe.', null=True)),
                ('cxa_f11_pedido', models.BooleanField(blank=True, db_comment='Campo utilizado pela tela FAT_FM_M_CXA_NFE.', null=True)),
                ('eff_motivo_inv', models.CharField(blank=True, db_comment='01 û No final no perÝodo;\n02 û Na mudanþa de forma de tributaþÒo da\nmercadoria (ICMS);\n03 û Na solicitaþÒo da baixa cadastral, paralisaþÒo\ntemporßria e outras situaþ§es;\n04 û Na alteraþÒo de regime de pagamento û condiþÒo\ndo contribuinte;\n05 û Por determinaþÒo dos fiscos.', max_length=2, null=True)),
                ('fin_id_maquineta_pad', models.IntegerField(blank=True, null=True)),
                ('orv_id_forma_pag_rcr', models.IntegerField(blank=True, null=True)),
                ('fin_perm_n_maquinetas', models.BooleanField(blank=True, null=True)),
                ('mch_id_tif_dep', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Depositar;', null=True)),
                ('mch_id_tif_dev', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Devolver;', null=True)),
                ('mch_id_tif_ppr', models.IntegerField(blank=True, db_comment='Este campo poderß ser utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Paga parcial ou Resgate, isso vai depender da forma de pagamento escolhida;', null=True)),
                ('mch_id_plano_dep', models.CharField(blank=True, db_comment='Este campo serß utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Depositar;', max_length=11, null=True)),
                ('mch_id_plano_dev', models.CharField(blank=True, db_comment='Este campo serß utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Depositar;', max_length=11, null=True)),
                ('mch_id_plano_ppr', models.CharField(blank=True, db_comment='Este campo poderß ser utilizado pela MovimentaþÒo de cheque, no momento da operaþÒo Paga parcial ou Resgate, isso vai depender da forma de pagamento escolhida;', max_length=11, null=True)),
                ('mch_id_forma_pag', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pela Rotina de MovimentaþÒo de cheque, nas operaþ§es:\nDepositar, Pagar parcial e Resgatar.\nO valor deste campo serß gravado no REC_PAG.\nO doc_impresso deste campo deve ser NENHUM.\n', null=True)),
                ('orv_id_cargo_mec', models.IntegerField(blank=True, db_comment='Este campo serß utilizado pelo m¾dulo de oficina. O c¾digo do cargo que for informado aqui, estarß informando para o sistema que todo funcionßrio que tiver cadastro neste c¾digo de cargo serß considerado MEC┬NICO.', null=True)),
                ('orv_critica_ite_aber', models.BooleanField(blank=True, db_comment='Este campo informa para o m¾dulo de oficina que serß obrigado a inserþÒo de Itens na abertura da O.S.', null=True)),
                ('orv_critica_ocv_aber', models.BooleanField(blank=True, db_comment='Este campo informa para o m¾dulo de oficina o seguinte procedimento: Caso o cliente tenha algum orþamento aberto para "aquele veÝculo", no momento da Abertura da O.S a importaþÒo deste orþamento passa a ser obrigat¾rio.', null=True)),
                ('ped_envia_carga', models.BooleanField(blank=True, db_comment='Este campo serß utilizado pela m¾dulo REV.\n Caso seja TRUE, o campo "Envia para carga" no pedido de venda serß exibido.', null=True)),
                ('nfe_per_partilha_dest', models.FloatField(blank=True, null=True)),
                ('nfe_per_partilha_orig', models.FloatField(blank=True, null=True)),
                ('nfe_per_icms_saida', models.FloatField(blank=True, null=True)),
                ('sgq_ped_gera_nfs', models.BooleanField(blank=True, db_comment='Este campo serß utilizado apenas para cliente que usa o m¾dulo SGQ.  Este campo nÒo poderß ser colocado na tela de parÔmetros. ╔ de uso interno da e-north.\n', null=True)),
                ('cbx_id_plano', models.CharField(blank=True, db_comment='Campo utilizado pela rotina de baixa de cart§es de crÚdito;', max_length=11, null=True)),
                ('cbx_id_plano_desc_ope', models.CharField(blank=True, db_comment='Campo utilizado pela rotina de baixa de cart§es de crÚdito;', max_length=11, null=True)),
                ('cbx_id_plano_desc_antec', models.CharField(blank=True, db_comment='Campo utilizado pela rotina de baixa de cart§es de crÚdito;', max_length=11, null=True)),
                ('cbx_id_tipo_financeiro', models.IntegerField(blank=True, db_comment='Campo utilizado pela rotina de baixa de cart§es de crÚdito;', null=True)),
                ('cbx_id_tipo_financeiro_desc', models.IntegerField(blank=True, db_comment='Campo utilizado pela rotina de baixa de cart§es de crÚdito;', null=True)),
                ('rbx_ret_id_plano', models.CharField(blank=True, db_comment='Campo utilizado pela rotina de baixa automßtica de boleto;', max_length=11, null=True)),
                ('rbx_ret_id_tipo_financeiro', models.IntegerField(blank=True, db_comment='Campo utilizado pela rotina de baixa automßtica de boleto;', null=True)),
                ('rbx_ret_id_ccu', models.IntegerField(blank=True, db_comment='Campo utilizado pela rotina de baixa automßtica de boleto;', null=True)),
                ('rbx_ret_id_forma_pag', models.IntegerField(blank=True, db_comment='Campo utilizado pela rotina de baixa automßtica de boleto;', null=True)),
                ('sgq_dias_prev_cid_dentro', models.IntegerField(blank=True, db_comment='campo utilizado somente pelo m¾dulo SGQ.  Ao criar um pedido de venda novo o sistema irß mostrar a previsÒo de entraga. ex:\r\nemissÒo do pedido + a qtde deste campo. Isso, caso o cliente seja da mesma UF.', null=True)),
                ('sgq_dias_prev_cid_fora', models.IntegerField(blank=True, db_comment='campo utilizado somente pelo m¾dulo SGQ.  Ao criar um pedido de venda novo o sistema irß mostrar a previsÒo de entraga. ex:\r\nemissÒo do pedido + a qtde deste campo. Isso, caso o cliente seja da UF diferente.', null=True)),
                ('des_ind_ed', models.IntegerField(blank=True, null=True)),
                ('des_cod_fin', models.IntegerField(blank=True, null=True)),
                ('des_ind_arq', models.IntegerField(blank=True, null=True)),
                ('des_ind_iss', models.IntegerField(blank=True, null=True)),
                ('des_ind_ec', models.IntegerField(blank=True, null=True)),
                ('des_ind_rt', models.IntegerField(blank=True, null=True)),
                ('des_ind_icms', models.IntegerField(blank=True, null=True)),
                ('des_ind_st', models.IntegerField(blank=True, null=True)),
                ('des_ind_at', models.IntegerField(blank=True, null=True)),
                ('des_ind_ipi', models.IntegerField(blank=True, null=True)),
                ('des_ind_pi', models.IntegerField(blank=True, null=True)),
                ('des_ind_gef', models.IntegerField(blank=True, null=True)),
                ('des_prf_icms', models.IntegerField(blank=True, null=True)),
                ('des_prf_iss', models.IntegerField(blank=True, null=True)),
                ('des_prf_ridf', models.IntegerField(blank=True, null=True)),
                ('des_prf_rudf', models.IntegerField(blank=True, null=True)),
                ('des_prf_lcm', models.IntegerField(blank=True, null=True)),
                ('des_prf_rv', models.IntegerField(blank=True, null=True)),
                ('des_prf_ri', models.IntegerField(blank=True, null=True)),
                ('sgq_dias_prev_uf_dentro', models.IntegerField(blank=True, null=True)),
                ('sgq_dias_prev_uf_fora', models.IntegerField(blank=True, null=True)),
                ('ecf_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Campo utilizado pela geraþÒo da NF partindo da tabela BR_CUPOM_MESTRE do GerConWin, no enServer mÚtodo FatGerNfs.', null=True)),
                ('ecf_id_condicao_pag', models.IntegerField(blank=True, db_comment='Campo utilizado pela geraþÒo da NF partindo da tabela BR_CUPOM_MESTRE do GerConWin, no enServer mÚtodo FatGerNfs.', null=True)),
                ('mvb_id_fornecedor', models.IntegerField(blank=True, null=True)),
                ('ped_cupom_imp', models.IntegerField(blank=True, db_comment='1 - ImpressÒo A4\r\n2 - ImpressÒo 40 Colunas', null=True)),
                ('rcr_id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('rcr_id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('perm_bxa_pag_n_emp', models.BooleanField(blank=True, null=True)),
                ('rcr_cri_forma_pag', models.BooleanField(blank=True, null=True)),
                ('fp_per_cust_ven_mens', models.FloatField(blank=True, db_comment='% do Custo Fixo sobre Venda Mensais', null=True)),
                ('fp_per_icms_ven', models.FloatField(blank=True, db_comment='ICMS sobre Vendas', null=True)),
                ('fp_per_simples', models.FloatField(blank=True, db_comment='Simples', null=True)),
                ('fp_per_comissao', models.FloatField(blank=True, db_comment='Comiss§es', null=True)),
                ('fp_per_frete_ven', models.FloatField(blank=True, db_comment='Fretes s/Vendas', null=True)),
                ('fp_per_cust_fin_ven', models.FloatField(blank=True, db_comment='Custo Financeiro sobre Vendas', null=True)),
                ('fp_per_prc_prz_ven_prat', models.FloatField(blank=True, null=True)),
                ('associado_acavasf', models.BooleanField(blank=True, null=True)),
                ('tipo_impressao', models.IntegerField(blank=True, db_comment='0 - ImpressÒo a Laser;1 - ImpressÒo Matricial', null=True)),
                ('ped_corr_preco_prazo', models.BooleanField(blank=True, db_comment='Habilita fazer correþÒo de calculo do preco do item com base nos dias a prazo e percentual do perfil do cliente ', null=True)),
                ('emite_duplicata_aceite', models.BooleanField(blank=True, null=True)),
                ('ped_cli_cns_vnd_max', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cxa_id_tipo_fin_canc_ant', models.IntegerField(blank=True, db_comment='Tipo financeiro usado no momento que Ú cancelado uma nota fiscal do dia anterior.', null=True)),
                ('cxa_id_plano_canc_ant', models.CharField(blank=True, db_comment='Plano de Contas usado no momento que Ú cancelado uma nota fiscal do dia anterior.', max_length=11, null=True)),
                ('prc_ite_manual', models.BooleanField(blank=True, null=True)),
                ('sgq_opr_id_setor', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela de Ordem de ProduþÒo (PCP_FM_M_OPR), para quando for necessßrio gerar a SolicitaþÒo de \r\nCompras.', null=True)),
                ('pcp_epp_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela PCP_FM_M_EPP, para movimentaþÒo do estoque.', null=True)),
                ('mal_tipo_estoque_ent', models.IntegerField(blank=True, null=True)),
                ('path_remessa', models.CharField(blank=True, max_length=200, null=True)),
                ('ativa_forma_fpg_hrq', models.BooleanField(blank=True, null=True)),
                ('avf_peso_01', models.FloatField(blank=True, null=True)),
                ('avf_peso_02', models.FloatField(blank=True, null=True)),
                ('avf_peso_03', models.FloatField(blank=True, null=True)),
                ('avf_peso_04', models.FloatField(blank=True, null=True)),
                ('avf_peso_05', models.FloatField(blank=True, null=True)),
                ('avf_peso_06', models.FloatField(blank=True, null=True)),
                ('avf_peso_07', models.FloatField(blank=True, null=True)),
                ('ativa_ite_conj', models.BooleanField(blank=True, null=True)),
                ('id_tif_deb', models.IntegerField(blank=True, db_comment='Campo utilizado no momento em que Ú feito uma Nota Fiscal de SaÝda (Venda), quando for utilizado forma de pagamento com DOC_IMPRESSO = 7 (CrÚdito);', null=True)),
                ('id_tif_cre', models.IntegerField(blank=True, db_comment='Campo utilizado no momento em que Ú feito uma Nota Fiscal de SaÝda (Venda), quando for utilizado forma de pagamento com DOC_IMPRESSO = 7 (CrÚdito);', null=True)),
                ('ped_utiliza_frete', models.BooleanField(blank=True, null=True)),
                ('utiliza_mecanico', models.BooleanField(blank=True, null=True)),
                ('calc_icm_dispensado', models.BooleanField(blank=True, null=True)),
                ('orv_id_cfo_int_dev_gar', models.CharField(blank=True, db_comment='CFO utilizado no momento de Fechamento de O.S de Garantia na geraþÒo da nota fiscal de devoluþÒo.', max_length=5, null=True)),
                ('orv_id_cfo_ext_dev_gar', models.CharField(blank=True, db_comment='CFO utilizado no momento de Fechamento de O.S de Garantia na geraþÒo da nota fiscal de devoluþÒo.', max_length=5, null=True)),
                ('orv_id_tme_dev_gar', models.IntegerField(blank=True, db_comment='Tipo de movimento estoque utilizado no momento de Fechamento de O.S de Garantia na geraþÒo da nota fiscal de devoluþÒo.', null=True)),
                ('orv_id_tme_dev_cli_gar', models.IntegerField(blank=True, null=True)),
                ('preco_por_filial', models.BooleanField(blank=True, null=True)),
                ('con_id_forma_pag_rec', models.IntegerField(blank=True, null=True)),
                ('con_id_forma_pag_pag', models.IntegerField(blank=True, null=True)),
                ('con_id_local_titulo_rec', models.IntegerField(blank=True, null=True)),
                ('con_id_local_titulo_pag', models.IntegerField(blank=True, null=True)),
                ('con_id_ccusto_pag', models.IntegerField(blank=True, null=True)),
                ('perm_bxa_rec_n_emp', models.BooleanField(blank=True, null=True)),
                ('con_id_tipo_financeiro_rec', models.IntegerField(blank=True, null=True)),
                ('con_id_tipo_financeiro_pag', models.IntegerField(blank=True, null=True)),
                ('ativa_preco_cat_ser', models.BooleanField(blank=True, null=True)),
                ('mob_periodo_ult_vend', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pelo aplicativo mobile.\r\nAqui o usußrio inseri a qtde de meses ·ltimo que o cliente comprou. exe:  6 ->   6 ultimos meses de venda.', null=True)),
                ('dct_id_tipo_financeiro_cred', models.IntegerField(blank=True, null=True)),
                ('dct_id_tipo_financeiro_desc_taxa', models.IntegerField(blank=True, null=True)),
                ('dct_id_tipo_financeiro_canc', models.IntegerField(blank=True, null=True)),
                ('dct_id_plano_cred', models.CharField(blank=True, max_length=11, null=True)),
                ('dct_id_plano_desc_taxa', models.CharField(blank=True, max_length=11, null=True)),
                ('dct_id_forma_pag', models.IntegerField(blank=True, null=True)),
                ('dct_id_plano_canc', models.CharField(blank=True, max_length=11, null=True)),
                ('ped_id_forma_pag_rcr', models.IntegerField(blank=True, null=True)),
                ('eff_layout', models.IntegerField(blank=True, null=True)),
                ('mob_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Campo utilizado pelo sistema mobile para poder fazer os pedidos de venda. Este campo s¾ pode aceitar tipo de estoque do tipo venda.', null=True)),
                ('perm_bxa_rec_n_tit', models.BooleanField(blank=True, null=True)),
                ('substituir_os', models.BooleanField(blank=True, null=True)),
                ('orv_gera_fin_separado', models.BooleanField(blank=True, db_comment='Campo utilizado no momento de fechar a O.S. Mesmo que o usußrio escolha notas separada, ele poderß serpara o financeiro ou nÒo.', null=True)),
                ('per_desc_especial', models.FloatField(blank=True, db_comment='Campo utilizado pelo pedido de venda.', null=True)),
                ('informar_caixa_nfe', models.BooleanField(blank=True, null=True)),
                ('nfe_id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('hab_vlr_custo_cte', models.BooleanField(blank=True, null=True)),
                ('sgq_tipo_comissao', models.IntegerField(blank=True, db_comment='0 - Nenhum;1 - Por Pedido de Venda', null=True)),
                ('sgq_per_comissao_max', models.FloatField(blank=True, null=True)),
                ('pbx_gravar_obs_tit', models.BooleanField(blank=True, null=True)),
                ('rbx_gravar_obs_tit', models.BooleanField(blank=True, null=True)),
                ('nfce_permite_cheque', models.BooleanField(blank=True, null=True)),
                ('perm_bxa_pag_n_tit', models.BooleanField(blank=True, null=True)),
                ('dta_pag_ret_banco', models.IntegerField(blank=True, db_comment='0 - Data da Ocorrencia; 1 - Data de CrÚdito', null=True)),
                ('frete_fob_total_ped', models.BooleanField(blank=True, null=True)),
                ('sgq_calc_sld_produzir_opr', models.BooleanField(blank=True, db_comment='Caso seja FALSE, a OPR irß considerar que o saldo a produzir do produto seja a mesma qtde que vem do pedido de venda.', null=True)),
                ('calcular_iss_retido', models.BooleanField(blank=True, null=True)),
                ('permitir_alterar_vend_ped', models.BooleanField(blank=True, null=True)),
                ('mob_busca_sld_est', models.BooleanField(blank=True, null=True)),
                ('mob_tipo_preco_cli', models.IntegerField(blank=True, db_comment='0 - Cßlculo usando a tabela CAD_TB_C_ITE_PC\r\n1 - Cßlculo usando Perfil de Cliente, PermissÒo de CorreþÒo por Perfil  + PermissÒo de correþÒo por FamÝlia', null=True)),
                ('mob_tipo_ordem', models.IntegerField(blank=True, null=True)),
                ('preco_por_perfil', models.BooleanField(blank=True, null=True)),
                ('hab_icms_desn_saida', models.BooleanField(blank=True, null=True)),
                ('correcao_prc_por_grupo', models.BooleanField(blank=True, null=True)),
                ('chave_bloqueio', models.CharField(blank=True, max_length=100, null=True)),
                ('status_internet', models.BooleanField(blank=True, null=True)),
                ('id_fun_aviso_debito', models.IntegerField(blank=True, null=True)),
                ('horario_aviso_debito', models.TimeField(blank=True, null=True)),
                ('data_aviso_debito', models.DateField(blank=True, null=True)),
                ('limite_cred_fpg', models.BooleanField(blank=True, null=True)),
                ('filtro_pad_csu_ite', models.IntegerField(blank=True, db_comment='Servirß para a tela de consulta de itens\n0-C¾digo\n1-DescriþÒo\n2-Cod.Barra\n3-Cod.Fabrica\n4-Loca-Rua\n5-AplicaþÒo\n6-Nome do Fornecedor\n7-Cod.Grupo\n8-DescriþÒo do Grupo\n9-ReferÛncia\n10-NCM\n', null=True)),
                ('filtro_pad_psq_ite', models.IntegerField(blank=True, db_comment='Servirß para tela de pesquisa de itens\n0-C¾digo\n1-DescriþÒo do item\n2-Cod.Barra\n3-Cod.Fabrica\n4-Loca-Rua\n5-AplicaþÒo\n6-Nome do Fornecedor\n7-Cod.Grupo\n8-DescriþÒo do Grupo\n9-ReferÛncia\n10-NCM', null=True)),
                ('permitir_saida_est_emp', models.BooleanField(blank=True, null=True)),
                ('tipo_controle_lote', models.IntegerField(blank=True, db_comment='0 - Por item; 1 - Por grupo', null=True)),
                ('cad_cli_simplificado', models.BooleanField(blank=True, null=True)),
                ('cad_vei_simplificado', models.BooleanField(blank=True, null=True)),
                ('enviar_rel_grv', models.BooleanField(blank=True, null=True)),
                ('informar_mec_ped_vnd', models.BooleanField(blank=True, null=True)),
                ('exibir_cond_sem_pag', models.BooleanField(blank=True, null=True)),
                ('ped_utiliza_mecanico', models.BooleanField(blank=True, null=True)),
                ('exibir_obs_ped_nfe_fisco', models.BooleanField(blank=True, null=True)),
                ('permitir_nova_os_cli_placa', models.BooleanField(blank=True, null=True)),
                ('obrig_dados_cheque_ped_vnd', models.BooleanField(blank=True, null=True)),
                ('ped_vnd_tme_padrao', models.IntegerField(blank=True, null=True)),
                ('ativo_ped_vnd_tme_padrao', models.BooleanField(blank=True, null=True)),
                ('gerar_nota_fechamento_os', models.BooleanField(blank=True, null=True)),
                ('alterar_vlr_dup_nota_fat', models.BooleanField(blank=True, null=True)),
                ('n_utilizar_cond_pag_os', models.BooleanField(blank=True, null=True)),
                ('tipo_preco_sem_cond_pag_os', models.IntegerField(blank=True, null=True)),
                ('permitir_alterar_dta_baixa_rbx', models.BooleanField(blank=True, null=True)),
                ('ativar_util_fpg_ped_vnd', models.BooleanField(blank=True, null=True)),
                ('letras_maius_obs_ped', models.BooleanField(blank=True, null=True)),
                ('utilizar_ped_bonificacao', models.BooleanField(blank=True, null=True)),
                ('ped_vnd_bonificacao', models.BooleanField(blank=True, null=True)),
                ('informar_mec_por_item_ped', models.BooleanField(blank=True, null=True)),
                ('informar_mec_por_item_os', models.BooleanField(blank=True, null=True)),
                ('csu_cli_fin_separar_fpg', models.BooleanField(blank=True, null=True)),
                ('sgq_verif_op_ped', models.BooleanField(blank=True, db_comment='Campo responsßvel de verificar a checagem de nro da O.P no momento de informar o pedido de venda na Ordem de Faturamento.', null=True)),
                ('sgq_preenc_vlr_pago_bx_tit', models.BooleanField(blank=True, db_comment='Se estiver TRUE o sistema irß fazer com que no momento de selcionar o tÝtulo para baixar , o sistema irß preencher o valor pago jß com o valor do tÝtulo.', null=True)),
                ('sgq_id_almoxarifado_pad_epp', models.IntegerField(blank=True, db_comment='C¾digo de almoxarifado padrÒo utilizado para Entrada de Produto acabado.', null=True)),
                ('pcp_cpa_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela de contagem por entrada de produto acabado', null=True)),
                ('pcp_atualiza_fin_base_prod', models.BooleanField(blank=True, db_comment='Se for TRUE, a tela de GeraþÒo de Nota Fiscal (FIN_FM_M_CXA_NFE), irß pedir o(s) c¾digo(s) do(s) pedido(s) da base da produþÒo que se refere a nota fiscal que serß gerada.', null=True)),
                ('pcp_id_empresa_base_prod', models.IntegerField(blank=True, db_comment='se o campo "pcp_atualiza_fin_base_prod" = true, este campo serß obrigat¾rio o preenchimento.', null=True)),
                ('pcp_id_empresa_base_fat', models.IntegerField(blank=True, db_comment='se o campo "pcp_atualiza_fin_base_prod" = true, este campo serß obrigat¾rio o preenchimento.', null=True)),
                ('pcp_rom_ano_corrente', models.IntegerField(blank=True, null=True)),
                ('pcp_atualiza_dta_pedido', models.BooleanField(blank=True, db_comment='Caso este campo seja TRUE, no momento de gerar as parcelas no pedido de venda, o sistema irß atualizar a data do pedido para a data do dia.', null=True)),
                ('pcp_opb_id_tipo_mov_estoque', models.IntegerField(blank=True, db_comment='Tipo de estoque de saÝda utilizado pela tela de Ordem de ProduþÒo pra gerar as O.Ps de Bloco de Espuma', null=True)),
                ('sgq_nome_etq_maquete', models.CharField(blank=True, max_length=100, null=True)),
                ('sgq_fat_orc_id_condicao_pag', models.IntegerField(blank=True, db_comment='CondiþÒo de pagamento padrÒo para orþamento usado pelo SGQ=TRUE', null=True)),
                ('sgq_fat_ped_id_condicao_pag', models.IntegerField(blank=True, db_comment='CondiþÒo de pagamento padrÒo para pedido de venda usado pelo SGQ=TRUE', null=True)),
                ('fat_validade_orc', models.IntegerField(blank=True, db_comment='Qtde de dias de validade para um orþamento', null=True)),
                ('fat_id_tipo_mov_estoque_rep', models.IntegerField(blank=True, db_comment='Tipo de movimento de estoque para pedido de venda com vendedor externo', null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_ctr',
                'db_table_comment': '-Tabela de Controle dos parametros\r\n\r\nEFF - EFD Fiscal\r\nEFC - EFD Contribuiþ§es',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParEml',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('email', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'cad_tb_c_par_eml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParMod',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('cad', models.BooleanField(db_comment='Cadastros')),
                ('tab', models.BooleanField(blank=True, null=True)),
                ('csu', models.BooleanField(blank=True, null=True)),
                ('cmp', models.BooleanField(db_comment='Compras')),
                ('est', models.BooleanField(db_comment='Estoque')),
                ('fat', models.BooleanField(blank=True, null=True)),
                ('ome', models.BooleanField(db_comment='Oficina Mecanica')),
                ('ota', models.BooleanField(db_comment='Oficina Tratores')),
                ('sgq', models.BooleanField(db_comment='Sistema GestÒo de Qualidade')),
                ('seg', models.BooleanField(blank=True, null=True)),
                ('chave', models.CharField(blank=True, max_length=100, null=True)),
                ('fin', models.BooleanField(blank=True, db_comment='Financeiro', null=True)),
                ('ctc', models.BooleanField(blank=True, null=True)),
                ('rev', models.BooleanField(blank=True, db_comment='Revenda', null=True)),
                ('snf', models.BooleanField(blank=True, null=True)),
                ('car', models.BooleanField(blank=True, null=True)),
                ('oqp', models.BooleanField(blank=True, null=True)),
                ('adf', models.BooleanField(blank=True, null=True)),
                ('tor', models.BooleanField(blank=True, null=True)),
                ('omp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_mod',
                'db_table_comment': 'Modulos do Sistema',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParNfe',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('cert_serie', models.CharField(blank=True, max_length=400, null=True)),
                ('danf_tipo_impressao', models.IntegerField(blank=True, db_comment='0-SemGeracao\n1-Retrato\n2-Paisagem\n3-Simplificado\n4-NFCe\n5-MsgEletronica\n', null=True)),
                ('danf_tipo_emissao', models.IntegerField(blank=True, db_comment='0-Normal, \n1-Contingencia, \n2-SCAN, \n3-DPEC, \n4-FSDA, \n5-SVCAN, \n6-SVCRS, \n7-VCSP, \n8-OffLine\n', null=True)),
                ('ws_estado', models.CharField(blank=True, max_length=2, null=True)),
                ('ws_visualiza_msg', models.CharField(blank=True, max_length=1, null=True)),
                ('situacao_emissor', models.IntegerField(blank=True, db_comment='1-ProduþÒo\n; 2-HomologaþÒo\n', null=True)),
                ('proxy_host', models.CharField(blank=True, max_length=30, null=True)),
                ('proxy_porta', models.IntegerField(blank=True, null=True)),
                ('proxy_usuario', models.CharField(blank=True, max_length=30, null=True)),
                ('proxy_senha', models.CharField(blank=True, max_length=30, null=True)),
                ('email_smtp', models.CharField(blank=True, max_length=100, null=True)),
                ('email_smtp_porta', models.IntegerField(blank=True, null=True)),
                ('email_smtp_seguro', models.CharField(blank=True, max_length=1, null=True)),
                ('email_usuario', models.CharField(blank=True, max_length=30, null=True)),
                ('email_senha', models.CharField(blank=True, max_length=30, null=True)),
                ('email_assunto', models.CharField(blank=True, max_length=150, null=True)),
                ('email_msg', models.CharField(blank=True, max_length=800, null=True)),
                ('contigencia_just', models.CharField(blank=True, max_length=50, null=True)),
                ('contigencia_data', models.DateField(blank=True, null=True)),
                ('path_xml', models.CharField(blank=True, max_length=200, null=True)),
                ('path_logo', models.CharField(blank=True, max_length=200, null=True)),
                ('cert_senha', models.CharField(blank=True, max_length=30, null=True)),
                ('path_status', models.CharField(blank=True, max_length=200, null=True)),
                ('path_carta', models.CharField(blank=True, max_length=200, null=True)),
                ('path_pdf', models.CharField(blank=True, max_length=200, null=True)),
                ('nfe_seq_devolucao', models.BooleanField(blank=True, db_comment='Este campo serve para informar se a empresa trabalha com outro n·mero de sequÛncia para Notas Fiscais de DevoluþÒo.', null=True)),
                ('mdfe_tipo_emissao', models.IntegerField(blank=True, db_comment='0-normal\n1- contiguecia', null=True)),
                ('mdfe_tipo_emitente', models.IntegerField(blank=True, db_comment='1 - Prestador de serviþo de transporte\n2 - transportador de carga propria', null=True)),
                ('nfc_id_token', models.CharField(blank=True, db_comment='O c¾digo de identificaþÒo (cIdToken) do CSC serß um sequencial numÚrico crescente por empresa (CNPJ base 8 dÝgitos) no Estado.', max_length=8, null=True)),
                ('nfc_csc', models.CharField(blank=True, db_comment='O CSC corresponderß a um conjunto de, no mßximo, 36 caracteres alfanumÚricos, sendo que cada CSC possui associado um c¾digo seq³encial de identificaþÒo (cIdToken) de 6 dÝgitos para facilitar a identificaþÒo do respectivo CSC e validaþÒo do QR Code pelo Fisco quando da realizaþÒo da consulta pelo consumidor.\n', max_length=36, null=True)),
                ('email_smtp_ssl', models.BooleanField(blank=True, null=True)),
                ('email_smtp_tls', models.BooleanField(blank=True, null=True)),
                ('cod_lot_rps', models.IntegerField(blank=True, null=True)),
                ('reg_esp_tri', models.IntegerField(blank=True, db_comment='0 - Nenhum\n1 - MicroempresaMunicipal\n2 - Estimativa\n3 - SociedadeProfissionais\n4 - Cooperativa\n5 - MicroempresarioIndividual\n6 - MicroempresarioEmpresaPP\n7 - LucroReal\n8 - LucroPresumido\n9 - SimplesNacional', null=True)),
                ('cod_tri_mcp', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_ite_ser', models.CharField(blank=True, max_length=5, null=True)),
                ('path_xml_outros', models.CharField(blank=True, max_length=200, null=True)),
                ('nfe_permite_salv_xml', models.BooleanField(blank=True, null=True)),
                ('rps_nat_opr', models.CharField(blank=True, max_length=3, null=True)),
                ('rps_prefeitura', models.CharField(blank=True, max_length=100, null=True)),
                ('rps_cod_cnae', models.CharField(blank=True, max_length=7, null=True)),
                ('nfe_separar_xml_mes', models.BooleanField(blank=True, null=True)),
                ('inf_nat_ope_nfe_comp', models.CharField(blank=True, max_length=100, null=True)),
                ('ativar_nat_ope_nfe_comp', models.BooleanField(blank=True, null=True)),
                ('path_logo_prefeitura', models.CharField(blank=True, max_length=200, null=True)),
                ('danfe_cod_item', models.IntegerField(blank=True, db_comment='0 - Cod. Item; 1 - Cod. Fabrica', null=True)),
                ('prot_com_ssllib', models.IntegerField(blank=True, db_comment='0 - libNone\r\n1 - libOpenSSL\r\n2 - libCapicom\r\n3 - libCapicomDelphiSoap\r\n4 - libWinCrypt\r\n5 - libCustom', null=True)),
                ('prot_com_criptlib', models.IntegerField(blank=True, db_comment='0 - cryNone\r\n1 - cryOpenSSL\r\n2 - cryCapicom\r\n3 - cryWinCrypt', null=True)),
                ('prot_com_httplib', models.IntegerField(blank=True, db_comment='0 - httpNone\r\n1 - httpWinNet\r\n2 - httpWinHttp\r\n3 - httpOpenSSL\r\n4 - httpIndy', null=True)),
                ('prot_com_xmlsignlib', models.IntegerField(blank=True, db_comment='0 - xsNone\r\n1 - xsXmlSec\r\n1 - xsMsXml\r\n2 - xsMsXmlCapicom\r\n3 - xsLibXml2', null=True)),
                ('nfe_versao', models.IntegerField(blank=True, db_comment='0- ve200\r\n1 - ve300\r\n2 - ve310\r\n3 - ve400', null=True)),
                ('cert_caminho_pfx', models.CharField(blank=True, max_length=255, null=True)),
                ('cert_senha_pfx', models.CharField(blank=True, max_length=30, null=True)),
                ('nfc_nome_arq_rel', models.CharField(blank=True, db_comment='Nome do arquivo fast report (*.fr3) para emissÒo da NFCe', max_length=30, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_nfe',
                'db_table_comment': 'Parametros de Nota Fiscal Eletronica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParRst',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('letra_restricao', models.CharField(max_length=2)),
                ('tipo_restricao', models.IntegerField(blank=True, db_comment='0 - Nenhum\r\n1 - Bloqueia\r\n2 - Envia para liberaþÒo', null=True)),
                ('descricao', models.CharField(blank=True, db_comment='DescriþÒo da restriþÒo.', max_length=100, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_par_rst',
                'db_table_comment': 'Tabela de Tipos de RestriþÒo para Vendas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCParSer',
            fields=[
                ('id_empresa', models.OneToOneField(db_column='id_empresa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpar')),
                ('nfe_serie', models.CharField(db_comment='N - Normal ; D - DevoluþÒo', max_length=1)),
                ('nfe_numero', models.IntegerField()),
            ],
            options={
                'db_table': 'cad_tb_c_par_ser',
                'db_table_comment': 'Tabela de Serie de Nota Fiscal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPecEmp',
            fields=[
                ('id_perfil_cli', models.OneToOneField(db_column='id_perfil_cli', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpec')),
                ('per_correcao', models.FloatField(blank=True, null=True)),
                ('per_correcao_aprazo', models.FloatField(blank=True, null=True)),
                ('per_correcao_financeiro', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pec_emp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCPesMod',
            fields=[
                ('id_perfil_seg', models.OneToOneField(db_column='id_perfil_seg', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcpes')),
                ('formulario', models.CharField(max_length=100)),
                ('ativo', models.BooleanField()),
                ('chave', models.CharField(blank=True, max_length=200, null=True)),
                ('descricao', models.CharField(max_length=100)),
                ('menu', models.CharField(blank=True, max_length=100, null=True)),
                ('modulo', models.CharField(blank=True, max_length=3, null=True)),
                ('modulo_desc', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_pes_mod',
                'db_table_comment': 'Cadastro de Perfil de Seguranþa - Formulario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCSetTds',
            fields=[
                ('id_setor', models.OneToOneField(db_column='id_setor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcset')),
            ],
            options={
                'db_table': 'cad_tb_c_set_tds',
                'db_table_comment': 'Tabela de Tipo de defito por setor ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCTriReg',
            fields=[
                ('id_tributo', models.OneToOneField(db_column='id_tributo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbctri')),
                ('uf', models.CharField(max_length=2)),
                ('cnt_id_st_icm', models.CharField(blank=True, max_length=3, null=True)),
                ('cnt_reducao', models.FloatField()),
                ('cnt_aliquota', models.FloatField()),
                ('nct_id_st_icm', models.CharField(blank=True, max_length=3, null=True)),
                ('nct_reducao', models.FloatField()),
                ('nct_aliquota', models.FloatField()),
                ('id_empresa', models.IntegerField()),
                ('cnt_csosn', models.CharField(blank=True, max_length=3, null=True)),
                ('nct_csosn', models.CharField(blank=True, max_length=3, null=True)),
                ('nct_aliquota_ecf', models.CharField(blank=True, db_comment='Valores possiveis deste campo:\r\nFF, II, NN,  valor inteiro ou decimal.', max_length=20, null=True)),
                ('part_per_aliq_dest', models.FloatField(blank=True, null=True)),
                ('part_per_ope_int_isen', models.BooleanField(blank=True, null=True)),
                ('part_per_ope_ext_isen', models.BooleanField(blank=True, null=True)),
                ('part_per_red_dest', models.FloatField(blank=True, null=True)),
                ('dis_aliquota', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_tri_reg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCVitFot',
            fields=[
                ('id_visita', models.OneToOneField(db_column='id_visita', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcvit')),
                ('id_vit_fot', models.IntegerField()),
                ('caminho_foto', models.CharField(blank=True, max_length=255, null=True)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_vit_fot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCVitKmt',
            fields=[
                ('id_visita', models.OneToOneField(db_column='id_visita', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcvit')),
                ('id_km', models.IntegerField()),
                ('id_veiculo', models.IntegerField()),
                ('km_inicial', models.FloatField(blank=True, null=True)),
                ('km_final', models.FloatField(blank=True, null=True)),
                ('km_inicial_orig', models.FloatField(blank=True, null=True)),
                ('km_final_orig', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_vit_kmt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMCotFit',
            fields=[
                ('id_cotacao', models.OneToOneField(db_column='id_cotacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmcot')),
                ('id_fornecedor', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(decimal_places=4, max_digits=18)),
                ('frete', models.IntegerField()),
                ('prazo', models.IntegerField()),
                ('disponibilidade', models.BooleanField()),
                ('aprovado', models.BooleanField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('dta_aprovacao', models.DateField(blank=True, null=True)),
                ('ipi', models.BooleanField(blank=True, null=True)),
                ('id_sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'cmp_tb_m_cot_fit',
                'db_table_comment': 'Cotaþ§es - Itens por Fornecedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMCotFitApr',
            fields=[
                ('id_cotacao', models.OneToOneField(db_column='id_cotacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmcot')),
                ('id_fornecedor', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('id_pedido', models.IntegerField(blank=True, null=True)),
                ('dta_aprovacao', models.DateField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'cmp_tb_m_cot_fit_apr',
                'db_table_comment': 'ITEM DA COTAÃ├O APROVADA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMCotFor',
            fields=[
                ('id_cotacao', models.OneToOneField(db_column='id_cotacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmcot')),
                ('dta_lancamento', models.DateField(blank=True, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_cot_for',
                'db_table_comment': 'CotaþÒo por Fornecedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMCotIte',
            fields=[
                ('id_cotacao', models.OneToOneField(db_column='id_cotacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmcot')),
                ('qtde', models.FloatField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'cmp_tb_m_cot_ite',
                'db_table_comment': 'Cotaþ§es - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPedIqm',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmped')),
                ('id_iqm', models.IntegerField()),
            ],
            options={
                'db_table': 'cmp_tb_m_ped_iqm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPedIte',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmped')),
                ('id_sequencia', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_ipi', models.FloatField(blank=True, null=True)),
                ('vlr_ipi', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('qtde_baixada', models.FloatField(blank=True, db_comment='Este campo Ú utilizado pela nota fiscal de entrada.', null=True)),
                ('entre_prazo', models.IntegerField(blank=True, db_comment='Prazo de entrega (dias).', null=True)),
                ('per_frete', models.FloatField()),
                ('vlr_frete', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('qtde_a_baixar', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_ped_ite',
                'db_table_comment': 'Pedido a Fornecedor - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPedNfe',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmped')),
                ('id_fiscal', models.IntegerField()),
            ],
            options={
                'db_table': 'cmp_tb_m_ped_nfe',
                'db_table_comment': 'Para ter a possibilidade de ter mias de uma nota fiscal para um pedido.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMSolIte',
            fields=[
                ('id_solicitacao', models.OneToOneField(db_column='id_solicitacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmsol')),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_sequencia', models.IntegerField()),
                ('desc_item', models.CharField(blank=True, max_length=100, null=True)),
                ('und_item', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_sol_ite',
                'db_table_comment': 'SolicitaþÒo de Compras - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCEocGru',
            fields=[
                ('id_estrutura', models.OneToOneField(db_column='id_estrutura', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbceoc')),
                ('grupo', models.CharField(max_length=5)),
                ('descricao', models.CharField(blank=True, max_length=600, null=True)),
                ('und', models.CharField(blank=True, max_length=4, null=True)),
                ('classe', models.CharField(blank=True, max_length=6, null=True)),
                ('cod_prpoprio', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_eoc_gru',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCObrCrg',
            fields=[
                ('id_obra', models.OneToOneField(db_column='id_obra', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbcobr')),
                ('qtde_func', models.IntegerField()),
                ('valor', models.DecimalField(decimal_places=2, max_digits=18)),
                ('dta_ini_contrato', models.DateField()),
                ('dta_fim_contrato', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=80, null=True)),
                ('id_obra_crg', models.IntegerField()),
            ],
            options={
                'db_table': 'ctc_tb_c_obr_crg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCObrEqp',
            fields=[
                ('id_obra', models.OneToOneField(db_column='id_obra', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbcobr')),
                ('id_obra_seq', models.IntegerField()),
                ('valor', models.DecimalField(decimal_places=2, max_digits=18)),
                ('dta_ini_contrato', models.DateField()),
                ('dta_fim_contrato', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_obr_eqp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCObrIte',
            fields=[
                ('id_obra', models.OneToOneField(db_column='id_obra', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbcobr')),
                ('id_obra_ite', models.IntegerField()),
                ('dta_ini_contrato', models.DateField()),
                ('dta_fim_contrato', models.DateField()),
                ('obs', models.CharField(blank=True, max_length=80, null=True)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=18)),
            ],
            options={
                'db_table': 'ctc_tb_c_obr_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCTprIte',
            fields=[
                ('id_tpr', models.OneToOneField(db_column='id_tpr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbctpr')),
                ('id_item', models.CharField(max_length=20)),
                ('descricao', models.CharField(blank=True, max_length=800, null=True)),
                ('classe', models.IntegerField(blank=True, db_comment='0-Material\n1-Mao-de-obra\n', null=True)),
                ('unidade', models.CharField(blank=True, max_length=10, null=True)),
                ('preco_unitario', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('data_base', models.DateField(blank=True, null=True)),
                ('id_item_interno', models.IntegerField(blank=True, db_comment='Este campo vai servir para fazer a correspondcia entre o codigo das tabelas tcpo... com o codigo do nosso sistema.', null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_tpr_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMBdeOco',
            fields=[
                ('id_bde', models.OneToOneField(db_column='id_bde', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmbde')),
                ('qtde', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_bde_oco',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMCepEpi',
            fields=[
                ('id_cep', models.OneToOneField(db_column='id_cep', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmcep')),
                ('sequencia', models.IntegerField()),
                ('marca', models.CharField(blank=True, max_length=20, null=True)),
                ('modelo', models.CharField(blank=True, max_length=20, null=True)),
                ('ca', models.CharField(blank=True, max_length=20, null=True)),
                ('dta_devolucao', models.DateField(blank=True, null=True)),
                ('dta_entrega', models.DateField(blank=True, null=True)),
                ('qtde', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_cep_epi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMCfeFer',
            fields=[
                ('id_cfe', models.OneToOneField(db_column='id_cfe', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmcfe')),
                ('id_meq', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_devolucao', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_cfe_fer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMLocMeq',
            fields=[
                ('id_loc', models.OneToOneField(db_column='id_loc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmloc')),
                ('id_veiculo', models.IntegerField()),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_inicial', models.DateField(blank=True, null=True)),
                ('dta_final', models.DateField(blank=True, null=True)),
                ('entrega', models.DateField(blank=True, null=True)),
                ('devolucao', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_loc_meq',
                'db_table_comment': 'Equeipamento Locado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOfiIte',
            fields=[
                ('id_ofi', models.OneToOneField(db_column='id_ofi', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmofi')),
                ('sequencia', models.IntegerField()),
                ('descricao', models.CharField(blank=True, max_length=50, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_ofi_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOrcIte',
            fields=[
                ('id_orc', models.OneToOneField(db_column='id_orc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmorc')),
                ('grupo', models.CharField(max_length=5)),
                ('descricao', models.CharField(blank=True, max_length=600, null=True)),
                ('und', models.CharField(blank=True, max_length=4, null=True)),
                ('classe', models.CharField(blank=True, max_length=6, null=True)),
                ('cod_prpoprio', models.CharField(blank=True, max_length=15, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_saldo_medicao', models.FloatField(blank=True, null=True)),
                ('vlr_mo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_mat', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_ls', models.FloatField(blank=True, null=True)),
                ('vlr_ls', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_bdi', models.FloatField(blank=True, null=True)),
                ('vlr_bdi', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_adm', models.FloatField(blank=True, null=True)),
                ('vlr_adm', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('total_taxa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_orc_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMSlmIte',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmslm')),
                ('qtde', models.FloatField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_slm_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMCteIte',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.esttbmcte')),
                ('id_seq_item', models.IntegerField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('contagem', models.FloatField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('diferenca', models.FloatField(blank=True, null=True)),
                ('tipo_diferenca', models.IntegerField(blank=True, db_comment='0- NÒo houve diferenþa\n1- Esta com sobra\n2-Esta com Falta', null=True)),
                ('vlr_custo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('saldo_estoque_momento', models.FloatField(blank=True, db_comment='Ficarß gravado o estoque fÝsico do momento.', null=True)),
            ],
            options={
                'db_table': 'est_tb_m_cte_ite',
                'db_table_comment': 'Contagem de Estoque - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMMalIte',
            fields=[
                ('id_mal', models.OneToOneField(db_column='id_mal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.esttbmmal')),
                ('id_sequencia', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_opr', models.IntegerField(blank=True, null=True)),
                ('id_opr_req', models.IntegerField(blank=True, null=True)),
                ('id_opr_req_ite', models.IntegerField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_mal_ite',
                'db_table_comment': 'Movimento de Almoxarifado - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMMetIte',
            fields=[
                ('id_met', models.OneToOneField(db_column='id_met', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.esttbmmet')),
                ('id_sequencia', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'est_tb_m_met_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMEtgDev',
            fields=[
                ('id_entrega', models.OneToOneField(db_column='id_entrega', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmetg')),
                ('id_sequencia', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('motivo', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_etg_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMEtgFot',
            fields=[
                ('id_entrega', models.OneToOneField(db_column='id_entrega', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmetg')),
                ('caminho_foto', models.CharField(max_length=255)),
                ('id_sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'fat_tb_m_etg_fot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMIqmIte',
            fields=[
                ('id_sequencia', models.IntegerField()),
                ('nro_lote_fabric_produto', models.CharField(blank=True, db_comment='Essse nro de lote , serß o nro que vem no laudo.', max_length=20, null=True)),
                ('num_lote', models.CharField(blank=True, db_comment='Esse nro de lote interno Ú igual ao que vem na nota fiscal.', max_length=15, null=True)),
                ('cert_data', models.DateField(blank=True, null=True)),
                ('cert_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('cnd_comercial', models.IntegerField(blank=True, db_comment='0 - Reprovado\n1 - Aprovado', null=True)),
                ('qtd_pc_nf', models.IntegerField(blank=True, db_comment='Verifica se a quantidade do pedido de compra corresponde a nota fiscal de entrada.\n0 - Reprovado\n1 - Aprovado', null=True)),
                ('pres_produto', models.IntegerField(blank=True, db_comment='PreservaþÒo do produto.\n0 - Reprovado\n1 - Aprovado', null=True)),
                ('cert_qualidade', models.IntegerField(blank=True, null=True)),
                ('resultado', models.IntegerField(blank=True, db_comment='Caso algum campo da parte do recebimento receber "Reprovado", automaticamente este campo ficarß\ncom valor Reprovado.\n0 - Reprovado\n1 - Aprovado', null=True)),
                ('demerito', models.IntegerField(blank=True, null=True)),
                ('origem', models.CharField(blank=True, db_comment='O usußrio irß informar o motivo do problema (NÒo conformidade ).', max_length=200, null=True)),
                ('qtd_nc', models.FloatField(blank=True, null=True)),
                ('per_lot_rec', models.FloatField(blank=True, null=True)),
                ('situacao', models.CharField(blank=True, max_length=800, null=True)),
                ('disposicao', models.IntegerField(blank=True, null=True)),
                ('apro_gerente', models.IntegerField(blank=True, db_comment='Refere-se a tabela de funcionßrios.', null=True)),
                ('apro_data', models.DateField(blank=True, null=True)),
                ('exec_por', models.IntegerField(blank=True, db_comment='Refere-se a tabela de funcionßrios.', null=True)),
                ('dta_finalisado', models.DateField(blank=True, null=True)),
                ('plano_acao_forn', models.BooleanField(blank=True, db_comment='0 - NÒo\n1 - Sim', null=True)),
                ('comentarios', models.CharField(blank=True, max_length=400, null=True)),
                ('qualidade', models.IntegerField(blank=True, db_comment='0 - Reprovado\n1 - Aprovado', null=True)),
                ('dta_inspecao', models.DateField(blank=True, null=True)),
                ('especificado', models.CharField(blank=True, max_length=300, null=True)),
                ('encontrado', models.CharField(blank=True, max_length=300, null=True)),
                ('numero_laudo', models.CharField(blank=True, max_length=30, null=True)),
                ('data_certif_qualidade', models.DateField(blank=True, db_comment='Refere-se ao campo "Data de certificado de qualidade".', null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('id_iqm', models.OneToOneField(db_column='id_iqm', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmiqm')),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('id_sequencia_ite_cmp_ped', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
                ('manual_tam_letras', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_simb_conserv', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_inform_cadast_cont', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_cobert_garant_e_perda', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_tabela_garantia_biotipo', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_aviso_colchao_baby', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_desenho_esquem_colch', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
                ('manual_aviso_asfixia', models.IntegerField(blank=True, db_comment='0 - Reprovado\n 1 - Aprovado', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_iqm_ite',
                'db_table_comment': 'Controle de Recebimento e InsepeþÒo de QuÝmicos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMMktCli',
            fields=[
                ('id_mkt', models.OneToOneField(db_column='id_mkt', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmmkt')),
                ('dta_gravacao', models.DateField(blank=True, null=True)),
                ('hor_gravacao', models.TimeField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=300, null=True)),
                ('selecao', models.BooleanField(blank=True, null=True)),
                ('id_banco_info', models.IntegerField(blank=True, null=True)),
                ('cliente_contato', models.BooleanField(blank=True, db_comment='Indica se o cliente entrou em contato com telemarking', null=True)),
                ('cliente_avulso', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_mkt_cli',
                'db_table_comment': 'Tabela de Clientes do Marketing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMMktPed',
            fields=[
                ('id_mkt', models.OneToOneField(db_column='id_mkt', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmmkt')),
                ('dta_gravacao', models.DateField()),
                ('hor_gravacao', models.TimeField()),
            ],
            options={
                'db_table': 'fat_tb_m_mkt_ped',
                'db_table_comment': 'Tabela Pedidos do Marketing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeArq',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfe')),
                ('arq_xml', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_arq',
                'db_table_comment': 'Tabela que guarda arquivo XML das notas fiscais.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeDev',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfe')),
                ('id_fiscal_dev', models.IntegerField()),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeIte',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfe')),
                ('id_sequencia', models.IntegerField()),
                ('id_inf_fisco', models.IntegerField(blank=True, null=True)),
                ('id_st_pis', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_cof', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_ipi', models.CharField(blank=True, max_length=2, null=True)),
                ('id_st_icm', models.CharField(blank=True, max_length=3, null=True)),
                ('qtde', models.FloatField()),
                ('qtde_devolvida', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(decimal_places=6, max_digits=18)),
                ('vlr_mercadoria', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_custo', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_outras', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_isenta', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_seguro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_aliquota', models.FloatField(blank=True, null=True)),
                ('icm_per_reducao', models.FloatField(blank=True, null=True)),
                ('icm_n_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_aliquota', models.FloatField(blank=True, null=True)),
                ('ipi_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('iss_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('iss_aliquota', models.FloatField(blank=True, null=True)),
                ('iss_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_percentual', models.FloatField(blank=True, null=True)),
                ('fre_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_aliquota', models.FloatField(blank=True, null=True)),
                ('pis_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_aliquota', models.FloatField(blank=True, null=True)),
                ('cof_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('peso_liquido', models.FloatField(blank=True, null=True)),
                ('peso_bruto', models.FloatField(blank=True, null=True)),
                ('nro_pedido', models.IntegerField(blank=True, null=True)),
                ('cof_valor_st', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('imp_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_icm_ser_nao_incide', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras_desp', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('pis_valor_st', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_dif_aliq', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_vlr_dif_aliq', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('para_analise_raa', models.IntegerField(blank=True, db_comment='0 - Falso\n1 - Verdadeiro', null=True)),
                ('fre_dif_aliq_icm', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_vlr_dif_icm', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_custo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('origem_mercadoria', models.CharField(max_length=1)),
                ('icm_s_per_mva', models.FloatField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_tributo', models.IntegerField(blank=True, null=True)),
                ('tri_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('tri_indice', models.FloatField(blank=True, null=True)),
                ('icm_s_vlr_mva', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_sequencia_ite_cmp_ped', models.IntegerField(blank=True, null=True)),
                ('imp_base_calculo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('imp_desp_aduana', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('imp_iof', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('di_numero', models.IntegerField(blank=True, null=True)),
                ('di_data', models.DateField(blank=True, null=True)),
                ('di_local_desemb', models.CharField(blank=True, max_length=60, null=True)),
                ('di_uf_desemb', models.CharField(blank=True, max_length=2, null=True)),
                ('di_data_desemb', models.DateField(blank=True, null=True)),
                ('di_exportador', models.CharField(blank=True, max_length=60, null=True)),
                ('di_numero_adicao', models.IntegerField(blank=True, null=True)),
                ('di_seq_adicao', models.IntegerField(blank=True, null=True)),
                ('di_fabricante', models.CharField(blank=True, max_length=60, null=True)),
                ('di_vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('di_fci', models.CharField(blank=True, max_length=36, null=True)),
                ('id_sequencia_ite_iqm', models.IntegerField(blank=True, null=True)),
                ('id_sequencia_ite_xml', models.IntegerField(blank=True, db_comment='Este campo Ú utilizado pela tela de ImportaþÒo do XML. Corresponde ao campo "Prod.nItem";', null=True)),
                ('vlr_acrescimo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('vlr_part_dest', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_part_orig', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_icm_desc', models.DecimalField(blank=True, db_comment='Desconto de ICMS.', decimal_places=2, max_digits=18, null=True)),
                ('part_per_aliq_dest', models.FloatField(blank=True, null=True)),
                ('part_per_part_orig', models.FloatField(blank=True, null=True)),
                ('part_per_part_dest', models.FloatField(blank=True, null=True)),
                ('vlr_fcp', models.DecimalField(blank=True, db_comment='Fundo de combate a pobreza.', decimal_places=2, max_digits=18, null=True)),
                ('per_fcp', models.FloatField(blank=True, null=True)),
                ('part_per_red_int_dest', models.FloatField(blank=True, db_comment='Guarda o percentual de reduþÒo de alÝquota interna da partilha de destino.', null=True)),
                ('fp_vlr_tot_custo_fix_mens', models.DecimalField(blank=True, db_comment='Total dos Custos Fixos Mensais', decimal_places=2, max_digits=18, null=True)),
                ('fp_vlr_ven_med_mens', models.DecimalField(blank=True, db_comment='Vendas mÚdia mensais', decimal_places=2, max_digits=18, null=True)),
                ('fp_per_cust_ven_mens', models.FloatField(blank=True, db_comment='% do Custo Fixo sobre Venda Mensais', null=True)),
                ('fp_per_icms_ven', models.FloatField(blank=True, db_comment='ICMS sobre Vendas', null=True)),
                ('fp_per_simples', models.FloatField(blank=True, db_comment='Simples', null=True)),
                ('fp_per_comissao', models.FloatField(blank=True, db_comment='Comiss§es', null=True)),
                ('fp_per_frete_ven', models.FloatField(blank=True, db_comment='Fretes s/Vendas', null=True)),
                ('fp_per_cust_fin_ven', models.FloatField(blank=True, db_comment='Custo Financeiro sobre Vendas', null=True)),
                ('fp_per_lucro_ven', models.FloatField(blank=True, db_comment='Lucro Desejado sobre Vendas', null=True)),
                ('fp_per_total_incid', models.FloatField(blank=True, db_comment='% Total das IncidÛncias', null=True)),
                ('fp_per_markup_div', models.FloatField(blank=True, db_comment='MarkUp Divisor', null=True)),
                ('fp_per_markup_mult', models.FloatField(blank=True, db_comment='Markup Multiplicador', null=True)),
                ('fp_vlr_prc_ven_calc', models.DecimalField(blank=True, db_comment='Preþo de Venda Calculado', decimal_places=2, max_digits=18, null=True)),
                ('fp_vlr_prc_ven_prat', models.DecimalField(blank=True, db_comment='Preþo de Venda a ser Praticado ', decimal_places=2, max_digits=18, null=True)),
                ('fp_calculado', models.BooleanField(blank=True, null=True)),
                ('fp_vlr_prc_prz_ven_prat', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('fp_per_prc_prz_ven_prat', models.FloatField(blank=True, null=True)),
                ('id_fiscal_dev', models.IntegerField()),
                ('dre_perc_out_ded_ven', models.FloatField(blank=True, null=True)),
                ('dre_perc_ircs', models.FloatField(blank=True, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('di_draw', models.CharField(blank=True, max_length=11, null=True)),
                ('di_tp_viatransp', models.IntegerField(blank=True, null=True)),
                ('di_tp_intermedio', models.IntegerField(blank=True, null=True)),
                ('dis_aliquota', models.FloatField(blank=True, null=True)),
                ('dis_icm_dispensado', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('per_cmv_interno', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv_externo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_cmv', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('motivo_icms_des', models.IntegerField(blank=True, null=True)),
                ('iss_valor_retido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_base_icms_dest', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('qtde_volume', models.FloatField(blank=True, null=True)),
                ('vlr_fcp_base_uf_dest', models.DecimalField(blank=True, db_comment='Nota tÚcnica: NT_2016_002_v1.42 - Criado para gravar a informaþÒo da base do fcp no caso ', decimal_places=4, max_digits=18, null=True)),
                ('vlr_fcp_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('per_fcp_ope_int', models.FloatField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', null=True)),
                ('vlr_fcp_base_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('vlr_fcp_st_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('per_fcp_st_ope_int', models.FloatField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', null=True)),
                ('vlr_fcp_st_base_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('per_st_sup_cons_final_ope_int', models.FloatField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria\r\nAlÝquota suportada pelo Consumidor Final', null=True)),
                ('vlr_fcp_st_ret_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('per_fcp_st_ret_ope_int', models.FloatField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', null=True)),
                ('vlr_fcp_st_ret_base_ope_int', models.DecimalField(blank=True, db_comment='Criado devido a nota Nota tÚcnica: NT_2016_002_v1.42 - Fundo de combate a pobreza para operaþ§es internas ou interestaduais com substituiþÒo tributßria', decimal_places=4, max_digits=18, null=True)),
                ('pcp_obs_item', models.CharField(blank=True, db_comment='Utilizado quando a empresa utiliza SGQ.', max_length=200, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_ite',
                'db_table_comment': 'Nota Fiscal - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeNff',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfe')),
                ('id_fornecedor', models.IntegerField()),
                ('nota_frete', models.IntegerField()),
                ('vlr_nota', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_frete', models.DecimalField(decimal_places=4, max_digits=18)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_nff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeTit',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfe')),
                ('id_nfe_tit', models.IntegerField()),
                ('num_parcela', models.CharField(max_length=15)),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('vlr_titulo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('historico_pag', models.CharField(blank=True, db_comment='Caso tenha algum texto neste campo , o sistema irß repassar o texto para o campo HISTORICO do tÝtulo do contas a pagar.', max_length=100, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_tit',
                'db_table_comment': 'Nota Fiscal - Titulos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMOrcIte',
            fields=[
                ('id_orcamento', models.OneToOneField(db_column='id_orcamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmorc')),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_seq_item', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('pcp_obs_item', models.CharField(blank=True, max_length=150, null=True)),
                ('per_desc_max', models.FloatField(blank=True, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_basico', models.FloatField(blank=True, null=True)),
                ('vlr_desc_basico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_especial', models.FloatField(blank=True, null=True)),
                ('vlr_desc_especial', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_orc_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPcaPed',
            fields=[
                ('id_carregamento', models.OneToOneField(db_column='id_carregamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmpca')),
            ],
            options={
                'db_table': 'fat_tb_m_pca_ped',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPedIte',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmped')),
                ('id_sequencia', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('per_desc_max', models.FloatField(blank=True, null=True)),
                ('qtde_conferida', models.FloatField(blank=True, null=True)),
                ('pcp_obs_item', models.CharField(blank=True, max_length=150, null=True)),
                ('id_cultura', models.IntegerField(blank=True, null=True)),
                ('vlr_frete', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qtde_volume', models.FloatField(blank=True, null=True)),
                ('vlr_icm_desn', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('motivo_icms_des', models.IntegerField(blank=True, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('id_mecanico', models.IntegerField(blank=True, null=True)),
                ('per_desc_basico', models.FloatField(blank=True, null=True)),
                ('vlr_desc_basico', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desc_especial', models.FloatField(blank=True, null=True)),
                ('vlr_desc_especial', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_ped_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPedTit',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmped')),
                ('id_titulo', models.IntegerField()),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('vlr_titulo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('bol_nosso_numero', models.IntegerField(blank=True, null=True)),
                ('id_maquineta', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela FAT_FM_M_PNF (Pedido Cupom).', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_ped_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPedTitSer',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmped')),
                ('id_titulo', models.IntegerField()),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('vlr_titulo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('bol_nosso_numero', models.IntegerField(blank=True, null=True)),
                ('id_maquineta', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela FAT_FM_M_PNF (Pedido Cupom).', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_ped_tit_ser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPosIte',
            fields=[
                ('id_posvenda', models.OneToOneField(db_column='id_posvenda', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmpos')),
                ('reclamacao', models.CharField(blank=True, max_length=800, null=True)),
                ('solucao', models.CharField(blank=True, max_length=800, null=True)),
                ('avaliacao', models.IntegerField(db_comment='1 - Ëtimo; 2 - Bom; 3 - Regular; 4 - Ruim;\n')),
            ],
            options={
                'db_table': 'fat_tb_m_pos_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRomLac',
            fields=[
                ('id_romaneio', models.OneToOneField(db_column='id_romaneio', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmrom')),
                ('lacre', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'fat_tb_m_rom_lac',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRomLot',
            fields=[
                ('id_romaneio', models.OneToOneField(db_column='id_romaneio', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmrom')),
                ('id_lote_caminhao', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_rom_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRomNfe',
            fields=[
                ('id_romaneio', models.OneToOneField(db_column='id_romaneio', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmrom')),
                ('id_busca_nfe', models.CharField(blank=True, max_length=9, null=True)),
                ('importada', models.BooleanField(blank=True, db_comment='Nota fiscal importada por Carregamento.', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_rom_nfe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRomPer',
            fields=[
                ('id_romaneio', models.OneToOneField(db_column='id_romaneio', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmrom')),
                ('uf', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'fat_tb_m_rom_per',
                'db_table_comment': 'Tabela de Percurso de Estados do Motorista.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMXmlIte',
            fields=[
                ('seq', models.IntegerField()),
                ('cod_fabrica', models.CharField(blank=True, max_length=30, null=True)),
                ('id_item', models.IntegerField(blank=True, null=True)),
                ('id_cst_icms', models.CharField(blank=True, max_length=3, null=True)),
                ('id_cfop', models.CharField(blank=True, max_length=5, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('desc_item', models.CharField(blank=True, max_length=50, null=True)),
                ('und', models.CharField(blank=True, max_length=3, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmxml')),
                ('id_sequencia', models.IntegerField()),
                ('id_sequencia_ite_iqm', models.IntegerField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('icm_n_aliquota', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_per_reducao', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_n_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('icm_s_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras_desp', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_aliquota', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('ipi_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_aliquota', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('pis_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('fre_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_base', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_aliquota', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('cof_valor', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('origem_mercadoria', models.CharField(blank=True, max_length=1, null=True)),
                ('vlr_icm_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_outras', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('motivo_icms_des', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_xml_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMXmlTit',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmxml')),
                ('id_forma_pag', models.IntegerField(blank=True, null=True)),
                ('id_titulo', models.IntegerField()),
                ('num_titulo', models.CharField(max_length=20)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_xml_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMBrdTit',
            fields=[
                ('id_brd', models.OneToOneField(db_column='id_brd', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmbrd')),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_restante', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('vlr_multa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('atraso', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_brd_tit',
                'db_table_comment': 'TÝtulos do border¶',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCbxTit',
            fields=[
                ('id_cbx', models.OneToOneField(db_column='id_cbx', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmcbx')),
                ('vlr_desconto_ope', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto_antec', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cbx_tit',
                'db_table_comment': 'Titulos da baixa de cart§es de crÚdito',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMCobTit',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmcob')),
                ('selecao', models.BooleanField(blank=True, null=True)),
                ('dias_atraso', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_cob_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMConCxb',
            fields=[
                ('id_conciliacao', models.OneToOneField(db_column='id_conciliacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmcon')),
                ('id_cxb', models.IntegerField()),
                ('debcre', models.IntegerField(blank=True, db_comment='0 - DÚbito;  1 - CrÚdito;', null=True)),
                ('historico', models.CharField(blank=True, db_comment='Refere-se a tag-> <MEMO> do arquivo .ofx;', max_length=100, null=True)),
                ('tipo', models.CharField(blank=True, db_comment='Refere-se a tag-> <TRNTYPE> do arquivo .ofx;', max_length=30, null=True)),
                ('documento', models.CharField(blank=True, db_comment='Refere-se a tag-> <CHECKNUM> do arquivo .ofx;', max_length=30, null=True)),
                ('vlr_lancamento', models.DecimalField(blank=True, db_comment='Refere-se a tag-> <TRNAMT> do arquivo .ofx;', decimal_places=4, max_digits=18, null=True)),
                ('status', models.CharField(blank=True, db_comment='F - Fechado (o usußrio fez o relacionamento do registro do arquivo ofx com o movimento do sistema FIN_TB_M_CTA)\nA - Em aberto (o usußrio ainda nÒo fez o relacionamento do registro do arquivo ofx com o movimento do sistema)', max_length=1, null=True)),
                ('selecao', models.IntegerField(blank=True, null=True)),
                ('dta_movimento', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_con_cxb',
                'db_table_comment': 'Tabela de extrato do banco, arquivo OFX dos bancos.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMConCxbDet',
            fields=[
                ('id_conciliacao', models.OneToOneField(db_column='id_conciliacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmcon')),
                ('id_controle', models.IntegerField()),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('vlr_lancamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_titulo', models.IntegerField(blank=True, db_comment='Identificador do titulo no contas a pagar que foi gerado na conciliacao.', null=True)),
                ('historico', models.CharField(blank=True, max_length=100, null=True)),
                ('num_doc', models.IntegerField(blank=True, null=True)),
                ('id_cxb', models.IntegerField(db_comment='Este campo faz relaþÒo com a tabela fin_tb_m_con_cxb.')),
                ('dta_mov_cxb', models.DateField(blank=True, null=True)),
                ('mov_gerado', models.BooleanField(blank=True, db_comment='Se "true", quer dizer que no momento da conciliaþÒo este registro foi criado;\nSe "false", quer dizer que o registro foi importado do FIN_TB_M_CTA.', null=True)),
                ('tipo_reg', models.IntegerField(blank=True, db_comment='0 - Normal;  1- TransferÛncia (Este estatus tem utilizaþÒo no momento de calcular a diferenþa de valores no relacionamento;', null=True)),
                ('id_titulo_rec', models.IntegerField()),
                ('id_titulo_pag', models.IntegerField()),
                ('tipo_titulo', models.IntegerField(blank=True, db_comment='0 - Movimento do CTA; 1 - Contas a Receber; 2 - Contas a Pagar', null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, db_comment='Campo utilizado para titulos de contas a receber e a pagar', decimal_places=4, max_digits=18, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, db_comment='Campo utilizado pelo titulos a receber e a pagar', decimal_places=4, max_digits=18, null=True)),
                ('id_emitente', models.IntegerField(blank=True, null=True)),
                ('vlr_desconto_ope', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('doc_impresso', models.IntegerField(blank=True, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_con_cxb_det',
                'db_table_comment': 'Lanþamento Gerado na conciliaþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMDctTit',
            fields=[
                ('id_dct', models.OneToOneField(db_column='id_dct', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmdct')),
                ('vlr_cobrado_canc_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_taxa_desc', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_dct_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMMchChe',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmmch')),
                ('vlr_pago', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_alinea', models.CharField(blank=True, max_length=2, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_mch_che',
                'db_table_comment': 'CHEQUES DO MOVIMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMMchTit',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmmch')),
                ('id_titulo', models.IntegerField()),
                ('dias', models.IntegerField(blank=True, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('num_parcela', models.CharField(blank=True, max_length=15, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_mch_tit',
                'db_table_comment': 'MovimentaþÒo de Cheque - TÝtulos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMOrcPlc',
            fields=[
                ('id_orc', models.OneToOneField(db_column='id_orc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmorc')),
                ('id_plc', models.CharField(max_length=11)),
                ('prev_jan', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_fev', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_mar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_abr', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_mai', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_jun', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_jul', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_ago', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_set', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_out', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_nov', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_dez', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('prev_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_orc_plc',
                'db_table_comment': 'PLANO DE CONTAS DO ORCAMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPagPag',
            fields=[
                ('id_titulo', models.OneToOneField(db_column='id_titulo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmpag')),
                ('id_baixa', models.IntegerField()),
                ('dta_pagamento', models.DateField()),
                ('vlr_pagamento', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_juros', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_juros', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('historico', models.CharField(max_length=100)),
                ('chp_vlr_anterior', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('id_plano_desconto', models.CharField(blank=True, max_length=11, null=True)),
                ('vlr_multa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('com_substituicao', models.BooleanField(blank=True, null=True)),
                ('vlr_cred_utilizado', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_empresa_bxa', models.IntegerField(blank=True, db_comment='Empresa que recebeu o pagamento.', null=True)),
                ('id_brd', models.IntegerField(blank=True, db_comment='Refere-se a talela FIN_TB_M_BRD.', null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pag_pag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPbxGer',
            fields=[
                ('id_baixa', models.OneToOneField(db_column='id_baixa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmpbx')),
                ('id_controle', models.IntegerField()),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pbx_ger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPbxTit',
            fields=[
                ('id_baixa', models.OneToOneField(db_column='id_baixa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmpbx')),
                ('id_titulo', models.IntegerField()),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_credito_utilizado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_restante', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('vlr_multa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('atraso', models.IntegerField(blank=True, null=True)),
                ('id_conta', models.IntegerField(blank=True, db_comment='Este campo recebe o valor do ID_CONTA da tabela pai (FIN_TB_M_PBX), internamente.', null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_pbx_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMPrcDet',
            fields=[
                ('id_prc', models.OneToOneField(db_column='id_prc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmprc')),
                ('id_tipo_titulo', models.IntegerField(blank=True, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('vlr_prestacao', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('historico', models.CharField(blank=True, max_length=60, null=True)),
                ('id_tipo_financeiro_cp', models.IntegerField(blank=True, null=True)),
                ('id_sequencia', models.IntegerField()),
            ],
            options={
                'db_table': 'fin_tb_m_prc_det',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRbxGer',
            fields=[
                ('id_baixa', models.OneToOneField(db_column='id_baixa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmrbx')),
                ('id_controle', models.IntegerField()),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_cheque', models.IntegerField(blank=True, null=True)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rbx_ger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRbxTit',
            fields=[
                ('id_baixa', models.OneToOneField(db_column='id_baixa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmrbx')),
                ('id_titulo', models.IntegerField()),
                ('vlr_pagamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_juros', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_cred_utilizado', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
                ('vlr_a_pagar', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('atraso', models.IntegerField(blank=True, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('vlr_restante', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('dta_novo_venc', models.DateField(blank=True, null=True)),
                ('concilia', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rbx_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRecHch',
            fields=[
                ('id_titulo', models.OneToOneField(db_column='id_titulo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmrec')),
                ('id_mch', models.IntegerField()),
                ('dta_movimento', models.DateField(blank=True, null=True)),
                ('hor_movimento', models.TimeField(blank=True, null=True)),
                ('situacao_chq', models.IntegerField(blank=True, db_comment='1 - Em aberto\n2 - Depositado\n3 - Devolvido\n4 - Parcial\n5 - Resgatado\n6 - Compensado', null=True)),
                ('operacao', models.IntegerField(blank=True, db_comment='1 - Depositar;\n2 - Devolver;\n3 - Pagar parcial;\n4 - Resgatar;', null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('situacao_chq_ant', models.IntegerField(blank=True, db_comment='Fica gravado a situaþÒo anterior do cheque.', null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rec_hch',
                'db_table_comment': 'Tabela de hist¾rico do cheque',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMRecPag',
            fields=[
                ('id_titulo', models.OneToOneField(db_column='id_titulo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmrec')),
                ('id_baixa', models.IntegerField()),
                ('dta_pagamento', models.DateField()),
                ('vlr_pagamento', models.DecimalField(decimal_places=2, max_digits=18)),
                ('per_juros', models.DecimalField(decimal_places=2, max_digits=18)),
                ('vlr_juros', models.DecimalField(decimal_places=2, max_digits=18)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('historico', models.CharField(max_length=100)),
                ('chp_id_situacao_chq', models.IntegerField(blank=True, null=True)),
                ('chp_vlr_anterior', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_alinea', models.CharField(blank=True, max_length=2, null=True)),
                ('chp_tipo_ocorrencia', models.CharField(blank=True, max_length=1, null=True)),
                ('com_substituicao', models.BooleanField(blank=True, null=True)),
                ('id_ccusto', models.IntegerField(blank=True, null=True)),
                ('id_plano_desconto', models.CharField(blank=True, max_length=11, null=True)),
                ('id_fiscal', models.IntegerField(blank=True, null=True)),
                ('origem', models.IntegerField(blank=True, db_comment='0 - Baixa do Contas a Receber;\r\n1 - Nota Fiscal de SaÝda;\r\n2 - Movimento de cheque;\r\n3 - Baixa automßtica de boleto (Rec);\r\n4 - Baixa de cart§es de crÚdito;\r\n5 - Desconto de TÝtulos', null=True)),
                ('id_abertura', models.IntegerField(blank=True, null=True)),
                ('vlr_cred_utilizado', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('id_mch', models.IntegerField(blank=True, null=True)),
                ('id_cbx', models.IntegerField(blank=True, null=True)),
                ('bol_nome_arq_ret', models.CharField(blank=True, max_length=50, null=True)),
                ('vlr_acrescimo', models.DecimalField(blank=True, db_comment='Este campo Ú utilizado no momento de baixar o arquivo retorno do banco, ele tem o mesmo sentido do campo VLR_JUROS.', decimal_places=2, max_digits=18, null=True)),
                ('id_empresa_bxa', models.IntegerField(blank=True, db_comment='Empresa que recebeu o pagamento.', null=True)),
                ('id_dct_bxa', models.IntegerField(blank=True, null=True)),
                ('vlr_tarifa', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_rec_pag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMCvlIpv',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmcvl')),
                ('id_ipva', models.IntegerField()),
                ('ano_exercicio', models.CharField(max_length=4)),
                ('vlr_seguro_obg', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_ipva', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_venc_unica', models.DateField(blank=True, null=True)),
                ('dta_pag_unica', models.DateField(blank=True, null=True)),
                ('dta_venc_cta01', models.DateField(blank=True, null=True)),
                ('dta_pag_cta01', models.DateField(blank=True, null=True)),
                ('valor_cta01', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_venc_cta02', models.DateField(blank=True, null=True)),
                ('dta_pag_cta02', models.DateField(blank=True, null=True)),
                ('valor_cta02', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_venc_cta03', models.DateField(blank=True, null=True)),
                ('dta_pag_cta03', models.DateField(blank=True, null=True)),
                ('valor_cta03', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_cvl_ipv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMCvlMlt',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmcvl')),
                ('id_multa', models.IntegerField()),
                ('local', models.CharField(max_length=100)),
                ('cod_infracao', models.CharField(max_length=30)),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
                ('vlr_multa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_pago', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('dta_pagamento', models.DateField(blank=True, null=True)),
                ('processo', models.CharField(blank=True, max_length=30, null=True)),
                ('recurso', models.BooleanField(blank=True, null=True)),
                ('recurso_aceito', models.BooleanField(blank=True, null=True)),
                ('pago', models.BooleanField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_cvl_mlt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMCvlSgr',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmcvl')),
                ('id_seguro', models.IntegerField()),
                ('dta_contrato', models.DateField(blank=True, null=True)),
                ('dta_vigencia', models.DateField(blank=True, null=True)),
                ('num_apolice', models.CharField(max_length=30)),
                ('vlr_seguro', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_franquia', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_cobertura', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_danos_materiais', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_danos_corporais', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('corretor_nome', models.CharField(blank=True, max_length=50, null=True)),
                ('corretor_telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('corretor_celular', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_cvl_sgr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOcqIte',
            fields=[
                ('id_orcamento', models.OneToOneField(db_column='id_orcamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmocq')),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_terceiro', models.IntegerField(blank=True, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('nome_ite', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_ocq_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOcvFot',
            fields=[
                ('id_orcamento', models.OneToOneField(db_column='id_orcamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmocv')),
                ('id_sequencia', models.IntegerField()),
                ('caminho_foto', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ofi_tb_m_ocv_fot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOcvIte',
            fields=[
                ('id_orcamento', models.OneToOneField(db_column='id_orcamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmocv')),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_terceiro', models.IntegerField(blank=True, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('nome_ite', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_ocv_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrvDes',
            fields=[
                ('id_ordem', models.OneToOneField(db_column='id_ordem', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmorv')),
                ('id_sequencia', models.IntegerField()),
                ('dta_despesa', models.DateField(blank=True, null=True)),
                ('local', models.CharField(blank=True, max_length=50, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - Hotel\n1 - Almoþo  \n2 - Jantar\n3 - CombustÝvel\n4 - Outros', null=True)),
                ('vlr_despesa', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv_des',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrvFot',
            fields=[
                ('id_ordem', models.OneToOneField(db_column='id_ordem', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmorv')),
                ('id_sequencia', models.IntegerField()),
                ('caminho_foto', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv_fot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrvIte',
            fields=[
                ('id_ordem', models.OneToOneField(db_column='id_ordem', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmorv')),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_bruto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('per_desconto', models.FloatField()),
                ('vlr_desconto', models.DecimalField(decimal_places=4, max_digits=18)),
                ('vlr_liquido', models.DecimalField(decimal_places=4, max_digits=18)),
                ('id_mecanico', models.IntegerField(blank=True, null=True)),
                ('id_terceiro', models.IntegerField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('cancelada', models.BooleanField(blank=True, null=True)),
                ('id_sequencia_ite_ocv', models.IntegerField(blank=True, db_comment='Campo utilizado no momento da ImportaþÒo do Orþamento da Oficina.', null=True)),
                ('id_requisicao', models.IntegerField(blank=True, db_comment='Este campo serß alimentado pela tela OFI_FM_M_RQV', null=True)),
                ('can_usuario', models.IntegerField(blank=True, db_comment='Campo utilizado pela tela OFI_FM_M_RQV no momento de cancelamento de peþa;', null=True)),
                ('can_data', models.DateField(blank=True, db_comment='Campo utilizado pela tela OFI_FM_M_RQV no momento de cancelamento de peþa;', null=True)),
                ('can_hora', models.TimeField(blank=True, db_comment='Campo utilizado pela tela OFI_FM_M_RQV no momento de cancelamento de peþa;', null=True)),
                ('can_motivo', models.CharField(blank=True, db_comment='Campo utilizado pela tela OFI_FM_M_RQV no momento de cancelamento de peþa;', max_length=100, null=True)),
                ('dta_requisicao', models.DateField(blank=True, db_comment='Este campo serß alimentado quando o campo id_requisicao for preenchido', null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('vlr_unitario_orig', models.DecimalField(blank=True, db_comment='Este campo irß armazenar o preþo original (Que Ú calculado pelo sistema).  Assim o sistema saberß se o usußrio alterou o preþo no pedido ao verificar VLR_UNITARIO vs VLR_UNITARIO_ORIG', decimal_places=4, max_digits=18, null=True)),
                ('id_ordem_subst', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrvTit',
            fields=[
                ('id_ordem', models.OneToOneField(db_column='id_ordem', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmorv')),
                ('id_titulo', models.IntegerField()),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('vlr_titulo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('id_forma_pag', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfiTbMOrvTitSer',
            fields=[
                ('id_ordem', models.OneToOneField(db_column='id_ordem', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ofitbmorv')),
                ('id_titulo', models.IntegerField()),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('vlr_titulo', models.DecimalField(decimal_places=4, max_digits=18)),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('id_forma_pag', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ofi_tb_m_orv_tit_ser',
                'db_table_comment': 'Ordem de Serviþo - Titulos dos Serviþos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCCinLns',
            fields=[
                ('id_cin', models.OneToOneField(db_column='id_cin', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbccin')),
                ('id_cin_lns', models.IntegerField()),
                ('dta_cadastro', models.DateField()),
                ('tolerancia_processo', models.CharField(blank=True, max_length=30, null=True)),
                ('frequencia', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_cin_lns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCFpiFti',
            fields=[
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('tipo_acao', models.IntegerField(db_comment='1 - A requisitar\n2 - A executar')),
                ('qtde', models.FloatField()),
                ('id_fpi', models.OneToOneField(db_column='id_fpi', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbcfpi')),
                ('id_fpi_fti', models.IntegerField()),
                ('id_busca_item', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'pcp_tb_c_fpi_fti',
                'db_table_comment': 'Itens da Ficha TÚcnica de ProduþÒo do Item.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCFteEtq',
            fields=[
                ('id_fte', models.OneToOneField(db_column='id_fte', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbcfte')),
                ('id_fte_etq', models.IntegerField()),
                ('cod_int_etq', models.CharField(max_length=10)),
                ('cod_int_etq_rev', models.CharField(max_length=5)),
                ('descricao', models.CharField(max_length=60)),
                ('especificacoes', models.CharField(max_length=200)),
                ('img_modelo', models.BinaryField(blank=True, null=True)),
                ('texto_livre1', models.CharField(blank=True, max_length=100, null=True)),
                ('texto_livre2', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo_etq', models.IntegerField(blank=True, db_comment='1 û ColchÒo padrÒo\n2 û ColchÒo baby\n3 û ColchÒo bordado\n', null=True)),
                ('etq_tecnica', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_fte_etq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCLmeDoc',
            fields=[
                ('id_lme', models.OneToOneField(db_column='id_lme', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbclme')),
                ('id_lme_d', models.IntegerField()),
                ('origem', models.IntegerField(db_comment='0 - Interna\n1 - Externa')),
                ('descricao', models.CharField(max_length=100)),
                ('codigo', models.CharField(db_comment='Este c¾digo refere-se ao c¾digo da ISO.', max_length=20)),
                ('revisao', models.CharField(max_length=5)),
                ('data_aprovacao', models.DateField()),
                ('id_setor', models.IntegerField(db_comment='0 - AdministraþÒo\n1 - ProduþÒo\n2 - Qualidade')),
                ('distribuicao_tipo', models.IntegerField(db_comment='0 - FÝsico\n1 - Informatizado')),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_lme_doc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCRegIte',
            fields=[
                ('id_regiao', models.OneToOneField(db_column='id_regiao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbcreg')),
                ('tipo', models.IntegerField(db_comment='0 - Por Grupo de estoque;   1 - Por Item ')),
                ('id_grupo', models.CharField(max_length=11)),
                ('id_item', models.IntegerField()),
                ('per_desconto', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_reg_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCTppSet',
            fields=[
                ('id_tpp', models.OneToOneField(db_column='id_tpp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbctpp')),
                ('gera_estoque', models.BooleanField()),
                ('grava_nro_lote', models.BooleanField()),
                ('gera_nro_lote', models.BooleanField()),
                ('executa_servico', models.BooleanField()),
            ],
            options={
                'db_table': 'pcp_tb_c_tpp_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcrIte',
            fields=[
                ('id_acr', models.OneToOneField(db_column='id_acr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmacr')),
                ('id_acr_p', models.IntegerField()),
                ('defeito_produto', models.CharField(blank=True, max_length=800, null=True)),
                ('garantia', models.BooleanField(blank=True, null=True)),
                ('data_validade', models.DateField(blank=True, null=True)),
                ('data_fabricacao', models.DateField(blank=True, null=True)),
                ('data_venda', models.DateField(blank=True, null=True)),
                ('defeito_procede', models.BooleanField(blank=True, null=True)),
                ('defeito_constatado', models.CharField(blank=True, max_length=200, null=True)),
                ('motivo_nao_procede', models.CharField(blank=True, db_comment='Se nÒo procede, justicar.', max_length=200, null=True)),
                ('comentarios', models.CharField(blank=True, max_length=800, null=True)),
                ('data_monitor_abert', models.DateField(blank=True, null=True)),
                ('hora_monitor_abert', models.DateTimeField(blank=True, null=True)),
                ('data_monitor_encer', models.DateField(blank=True, null=True)),
                ('hora_monitor_encer', models.DateTimeField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_resp_ana', models.IntegerField(blank=True, null=True)),
                ('data_entrada_ana', models.DateField(blank=True, null=True)),
                ('data_saida_ana', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_acr_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCacAna',
            fields=[
                ('id_cac', models.OneToOneField(db_column='id_cac', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcac')),
                ('id_cac_ana', models.IntegerField()),
                ('tipo_causa', models.IntegerField(db_comment='0 - MÚtodo - forma como o produto Ú fabricado, sequencia, padr§es,  organizaþÒo e informaþ§es.\n1 - Mßquina / Equipamento - recursos utilizados na execuþÒo do trabalho\n2 - Material / Insumos - caracterÝsticas necessßrias para a realizaþÒo do produto.\n3 - Meio de MediþÒo - forma como o resultado do processo ou produto Ú medido.\n4 - MÒo de Obra - qualificaþÒo; treinamento inadequado, descumprimento de regras ou prßticas.\n5 - Meio-Ambiente - interferÛncia do ambiente de trabalho no processo e produto (umidade, temperatura, ruÝdo, poeira, etc.).')),
                ('subcausa', models.CharField(blank=True, max_length=100, null=True)),
                ('motivo', models.CharField(blank=True, max_length=200, null=True)),
                ('causa_raiz', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_cac_ana',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCacPla',
            fields=[
                ('id_cac', models.OneToOneField(db_column='id_cac', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcac')),
                ('id_cac_pla', models.IntegerField()),
                ('acao', models.CharField(blank=True, max_length=100, null=True)),
                ('dta_prazo', models.DateField()),
                ('dta_efetivo', models.DateField()),
            ],
            options={
                'db_table': 'pcp_tb_m_cac_pla',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCmeMeq',
            fields=[
                ('id_meq', models.OneToOneField(db_column='id_meq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcme')),
                ('id_cme_meq', models.IntegerField()),
                ('nro_semana', models.IntegerField(blank=True, null=True)),
                ('mes', models.IntegerField(blank=True, null=True)),
                ('ano', models.IntegerField(blank=True, null=True)),
                ('tipo_controle', models.IntegerField(blank=True, db_comment='0 - Planejado  1 - Executado   2 - Reprogramado', null=True)),
                ('tipo_manutencao', models.IntegerField(blank=True, db_comment='0 - MecÔnica\n  1 - ElÚtrica/Eletronica\n  2 - Hidrßulica\n  3 - Pneumßtica\n  4 - Total', null=True)),
                ('frequencia', models.IntegerField(blank=True, null=True)),
                ('realizado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_cme_meq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCrpIte',
            fields=[
                ('id_crp', models.OneToOneField(db_column='id_crp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcrp')),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('num_lote', models.CharField(blank=True, db_comment='Refere-se ao Nro do lote interno', max_length=15, null=True)),
                ('qtde', models.FloatField()),
                ('qtde_baixada', models.FloatField()),
                ('id_sequencia', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_crp_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCrqReg',
            fields=[
                ('id_crq', models.OneToOneField(db_column='id_crq', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcrq')),
                ('id_lme_d', models.IntegerField()),
                ('forma', models.IntegerField(db_comment='0 - Pasta A-Z   1 - Rede  2- Eletr¶nico')),
                ('indexacao', models.IntegerField(db_comment='0 - Por Data em Ordem Crescente')),
                ('metodo_recuperacao', models.IntegerField(db_comment='0 - Data')),
                ('tempo_retencao', models.IntegerField()),
                ('disposicao_tempo', models.IntegerField(db_comment='0 - Ap¾s, Manter em Arquivo Morto')),
                ('dta_cadastro', models.DateField()),
            ],
            options={
                'db_table': 'pcp_tb_m_crq_reg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMEppIte',
            fields=[
                ('id_epp', models.OneToOneField(db_column='id_epp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmepp')),
                ('id_epp_ite', models.IntegerField()),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('cod_barra', models.CharField(max_length=50)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('id_func_colchoaria', models.IntegerField(blank=True, null=True)),
                ('lancto_func_colch_manual', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_epp_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMLbeBlo',
            fields=[
                ('id_lbe', models.OneToOneField(db_column='id_lbe', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmlbe')),
                ('id_lbe_blo', models.IntegerField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('qtde', models.FloatField()),
                ('id_opb', models.IntegerField()),
                ('id_opb_ope', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_lbe_blo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMLprFun',
            fields=[
                ('id_lpr', models.OneToOneField(db_column='id_lpr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmlpr')),
            ],
            options={
                'db_table': 'pcp_tb_m_lpr_fun',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMMcpIve',
            fields=[
                ('id_mcp', models.OneToOneField(db_column='id_mcp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmmcp')),
                ('id_mcp_ive', models.IntegerField()),
                ('texto_verificado', models.CharField(blank=True, max_length=100, null=True)),
                ('verificado', models.BooleanField()),
                ('substituido', models.BooleanField()),
                ('lubrificado', models.BooleanField()),
                ('ajustado', models.BooleanField()),
                ('completado', models.BooleanField()),
                ('trocado', models.BooleanField()),
                ('limpado', models.BooleanField()),
                ('reparado', models.BooleanField()),
                ('outros', models.BooleanField()),
                ('texto_outros', models.CharField(blank=True, max_length=60, null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_mcp_ive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMMcpSer',
            fields=[
                ('id_mcp', models.OneToOneField(db_column='id_mcp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmmcp')),
                ('id_mcp_ser', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_mcp_ser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMNcfDis',
            fields=[
                ('id_ncf', models.OneToOneField(db_column='id_ncf', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmncf')),
                ('id_ncf_dis', models.IntegerField()),
                ('prazo', models.IntegerField()),
                ('efetivo', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_ncf_dis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbBlo',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopb')),
                ('num_lote', models.CharField(max_length=15)),
                ('dta_emissao', models.DateField()),
                ('hor_emissao', models.TimeField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('bloco_aprovado', models.BooleanField()),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_blo',
                'db_table_comment': 'Blocos produzidos da Ordem de ProduþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbObl',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopb')),
                ('id_opb_obl', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cubagem_a_produzir', models.FloatField()),
                ('obs', models.CharField(blank=True, max_length=100, null=True)),
                ('qtde_abater_sld', models.FloatField(blank=True, db_comment='A qtde deste campo serß utilizada para abater na tabela de saldo do item.', null=True)),
                ('op_espumacao_impressa', models.BooleanField(blank=True, null=True)),
                ('op_impressa_por', models.IntegerField(blank=True, null=True)),
                ('op_impressa_em', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_obl',
                'db_table_comment': 'Blocos de espuma para serem produzidos.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbOpe',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopb')),
                ('id_opb_ope', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('dta_producao', models.DateField()),
                ('hora_producao', models.DateField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_ope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbOpr',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopb')),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_opr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprIpa',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_opp', models.IntegerField()),
                ('id_opr_ipa', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_ipa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOpp',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_opp', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde_a_produzir', models.FloatField()),
                ('qtde_produzida', models.FloatField()),
                ('qtde_a_produzir_orig', models.FloatField(db_comment='Este campo nÒo pode ser alterado pelo usußrio.\nNo momento da criaþÒo deste registro, este campo terß o mesmo valor do campo QTDE_A_PRODUZIR.')),
                ('id_resp_alt', models.IntegerField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('dta_alt', models.DateField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('hora_alt', models.TimeField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('qtde_atender_opr', models.FloatField(db_comment='Este campo tem a funþÒo de informar Ó O.P.R a qtde real que serß utilizada para ela. De inicio ela pode ter mandado Produzir 100, mas depois teve pedido com desistÛncia , onde a qtde a produzir baixaria pra 80, mas o usußrio resolveu deixar a Produzir 100, com isso a O.P.R terß um saldo de 20 que servirß para demais O.P.R.')),
                ('qtde_atender_opr_ext', models.FloatField(db_comment='Toda vez que uma O.P.R externa utiliza o saldo disponÝvel de uma O.P.R, ela deverß quardar a qtde utilizada neste campo.   \n\tImagine que: QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 4\n                                      SALDO_DISPONIVEL = 6 \n e a O.P.R Externa estß precisando de 2.  \n               EntÒo  ficarß:   QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 6\n                                      SALDO_DISPONIVEL = 4 \n')),
                ('saldo_disponivel', models.FloatField(db_comment='SALDO_DISPONIVEL:  float    QTDE_A_PRODUZIR û ( QTD_ATENDER_OPR +  QTD_ATENDER_OPR_EXT)')),
                ('reg_alt', models.BooleanField(blank=True, null=True)),
                ('historico_alt', models.CharField(blank=True, db_comment='Cada vez que houver alguma alteraþÒo neste registro o sistema irß guardando o conte·do do campo Motivo da alteraþÒo.', max_length=500, null=True)),
                ('motivo_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('gerado_aut', models.BooleanField(blank=True, db_comment='Serß TRUE quando for gerado pela ImportaþÒo do Pedido de Venda. Caso for inserido manualmente, serß FALSE;', null=True)),
                ('motivo_ger_man', models.CharField(blank=True, db_comment='Motivo do por quÛ que estß inserido o produto manualmente na ordem de produþÒo.', max_length=100, null=True)),
                ('id_resp_man', models.IntegerField(blank=True, null=True)),
                ('dta_man', models.DateField(blank=True, null=True)),
                ('hor_man', models.TimeField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=20, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=800, null=True)),
                ('saldo_fisico_momento', models.FloatField(blank=True, null=True)),
                ('saldo_pendente', models.FloatField(blank=True, null=True)),
                ('saldo_disponivel_est', models.FloatField(blank=True, null=True)),
                ('saldo_disp_outras_opr', models.FloatField(blank=True, null=True)),
                ('temp_qtde_produzida', models.FloatField(blank=True, null=True)),
                ('pcp_desc_item_person', models.CharField(blank=True, max_length=150, null=True)),
                ('bloco_gerado', models.IntegerField(blank=True, db_comment='Se foi gerado a ordem de produþÒo de bloco para espuma do produto.\r\n0 - NÒo necessita de criaþÒo de bloco;\r\n1 - Ord. de produþÒo do bloco nÒo gerada;\r\n2 - Gerado a ordem de produþÒo;\r\n3 - GeraþÒo de bloco cancelada;', null=True)),
                ('id_opb', models.IntegerField(blank=True, db_comment='Ao gerar a Ordem de produþÒo dos blocos de espuma , o sistema irß gravar o c¾digo da O.P.B.', null=True)),
                ('criado_em', models.DateField(blank=True, db_comment='Data quando o registro do opp foi criado.', null=True)),
                ('hora_criado', models.TimeField(blank=True, db_comment='Hora quando o registro do opp foi criado.', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_opp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOpp030318',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_opp', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde_a_produzir', models.FloatField()),
                ('qtde_produzida', models.FloatField()),
                ('qtde_a_produzir_orig', models.FloatField(db_comment='Este campo nÒo pode ser alterado pelo usußrio.\nNo momento da criaþÒo deste registro, este campo terß o mesmo valor do campo QTDE_A_PRODUZIR.')),
                ('id_resp_alt', models.IntegerField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('dta_alt', models.DateField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('hora_alt', models.TimeField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('qtde_atender_opr', models.FloatField(db_comment='Este campo tem a funþÒo de informar Ó O.P.R a qtde real que serß utilizada para ela. De inicio ela pode ter mandado Produzir 100, mas depois teve pedido com desistÛncia , onde a qtde a produzir baixaria pra 80, mas o usußrio resolveu deixar a Produzir 100, com isso a O.P.R terß um saldo de 20 que servirß para demais O.P.R.')),
                ('qtde_atender_opr_ext', models.FloatField(db_comment='Toda vez que uma O.P.R externa utiliza o saldo disponÝvel de uma O.P.R, ela deverß quardar a qtde utilizada neste campo.   \n\tImagine que: QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 4\n                                      SALDO_DISPONIVEL = 6 \n e a O.P.R Externa estß precisando de 2.  \n               EntÒo  ficarß:   QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 6\n                                      SALDO_DISPONIVEL = 4 \n')),
                ('saldo_disponivel', models.FloatField(db_comment='SALDO_DISPONIVEL:  float    QTDE_A_PRODUZIR û ( QTD_ATENDER_OPR +  QTD_ATENDER_OPR_EXT)')),
                ('reg_alt', models.BooleanField(blank=True, null=True)),
                ('historico_alt', models.CharField(blank=True, db_comment='Cada vez que houver alguma alteraþÒo neste registro o sistema irß guardando o conte·do do campo Motivo da alteraþÒo.', max_length=500, null=True)),
                ('motivo_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('gerado_aut', models.BooleanField(blank=True, db_comment='Serß TRUE quando for gerado pela ImportaþÒo do Pedido de Venda. Caso for inserido manualmente, serß FALSE;', null=True)),
                ('motivo_ger_man', models.CharField(blank=True, db_comment='Motivo do por quÛ que estß inserido o produto manualmente na ordem de produþÒo.', max_length=100, null=True)),
                ('id_resp_man', models.IntegerField(blank=True, null=True)),
                ('dta_man', models.DateField(blank=True, null=True)),
                ('hor_man', models.TimeField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=20, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=800, null=True)),
                ('pcp_desc_item_person', models.CharField(blank=True, max_length=150, null=True)),
                ('saldo_fisico_momento', models.FloatField(blank=True, null=True)),
                ('saldo_pendente', models.FloatField(blank=True, null=True)),
                ('saldo_disponivel_est', models.FloatField(blank=True, null=True)),
                ('saldo_disp_outras_opr', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_opp_030318',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOppCopy',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_opp', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde_a_produzir', models.FloatField()),
                ('qtde_produzida', models.FloatField()),
                ('qtde_a_produzir_orig', models.FloatField(db_comment='Este campo nÒo pode ser alterado pelo usußrio.\nNo momento da criaþÒo deste registro, este campo terß o mesmo valor do campo QTDE_A_PRODUZIR.')),
                ('id_resp_alt', models.IntegerField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('dta_alt', models.DateField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('hora_alt', models.TimeField(blank=True, db_comment='Este campo Ú preenchido no momento em que o usußrio altera o valor do campo QTDE_A_PRODUZIR.', null=True)),
                ('qtde_atender_opr', models.FloatField(db_comment='Este campo tem a funþÒo de informar Ó O.P.R a qtde real que serß utilizada para ela. De inicio ela pode ter mandado Produzir 100, mas depois teve pedido com desistÛncia , onde a qtde a produzir baixaria pra 80, mas o usußrio resolveu deixar a Produzir 100, com isso a O.P.R terß um saldo de 20 que servirß para demais O.P.R.')),
                ('qtde_atender_opr_ext', models.FloatField(db_comment='Toda vez que uma O.P.R externa utiliza o saldo disponÝvel de uma O.P.R, ela deverß quardar a qtde utilizada neste campo.   \n\tImagine que: QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 4\n                                      SALDO_DISPONIVEL = 6 \n e a O.P.R Externa estß precisando de 2.  \n               EntÒo  ficarß:   QTDE_A_PRODUZIR = 70 \n                                      QTDE_ATENDER_OPR = 60 \n                                      QTD_ATENDER_OPR_EXT = 6\n                                      SALDO_DISPONIVEL = 4 \n')),
                ('saldo_disponivel', models.FloatField(db_comment='SALDO_DISPONIVEL:  float    QTDE_A_PRODUZIR û ( QTD_ATENDER_OPR +  QTD_ATENDER_OPR_EXT)')),
                ('reg_alt', models.BooleanField(blank=True, null=True)),
                ('historico_alt', models.CharField(blank=True, db_comment='Cada vez que houver alguma alteraþÒo neste registro o sistema irß guardando o conte·do do campo Motivo da alteraþÒo.', max_length=500, null=True)),
                ('motivo_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('gerado_aut', models.BooleanField(blank=True, db_comment='Serß TRUE quando for gerado pela ImportaþÒo do Pedido de Venda. Caso for inserido manualmente, serß FALSE;', null=True)),
                ('motivo_ger_man', models.CharField(blank=True, db_comment='Motivo do por quÛ que estß inserido o produto manualmente na ordem de produþÒo.', max_length=100, null=True)),
                ('id_resp_man', models.IntegerField(blank=True, null=True)),
                ('dta_man', models.DateField(blank=True, null=True)),
                ('hor_man', models.TimeField(blank=True, null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=20, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=800, null=True)),
                ('pcp_desc_item_person', models.CharField(blank=True, max_length=150, null=True)),
                ('saldo_fisico_momento', models.FloatField(blank=True, null=True)),
                ('saldo_pendente', models.FloatField(blank=True, null=True)),
                ('saldo_disponivel_est', models.FloatField(blank=True, null=True)),
                ('saldo_disp_outras_opr', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_opp_copy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOps',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_ops', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('tamanho', models.CharField(blank=True, max_length=15, null=True)),
                ('referencias', models.CharField(blank=True, max_length=100, null=True)),
                ('num_lote', models.CharField(blank=True, db_comment='O usußrio poderß informar N lotes.', max_length=150, null=True)),
                ('id_cor_acabado', models.IntegerField()),
                ('id_tamanho_acabado', models.IntegerField()),
                ('num_lote_bordadeira', models.CharField(blank=True, max_length=150, null=True)),
                ('num_lote_espuma', models.CharField(blank=True, max_length=150, null=True)),
                ('num_lote_tecido', models.CharField(blank=True, max_length=150, null=True)),
                ('num_lote_tnt', models.CharField(blank=True, max_length=150, null=True)),
                ('qtde_acabado', models.FloatField(blank=True, null=True)),
                ('obs_producao', models.CharField(blank=True, max_length=800, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_ops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprPed',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('remanejado', models.BooleanField(db_comment='Este campo receberß TRUE automaticamente quando outra O.P.R pegar este pedido de venda, senÒo terß o valor FALSE.')),
                ('id_opr_ori', models.IntegerField(blank=True, db_comment='Este campo Ú preenchido no momento da importaþÒo do pedido. Este campos serß preenchido quando o pedido de venda for oriundo de outra O.P.R.', null=True)),
                ('id_opr_dest', models.IntegerField(blank=True, db_comment='Este campo serß preenchido automaticamente no momento em que outra O.P.R pegar este pedido de venda.', null=True)),
                ('origem_insercao', models.IntegerField(blank=True, db_comment='0 - Pedido inserido por importacao;\r\n1 - Pedido inserido por pedido automßtico(Quando  o pedido Ú gerado partindo de um pedido jß em produþÒo);', null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
                ('dta_importacao', models.DateField(blank=True, null=True)),
                ('hor_importacao', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_ped',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprReq',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopr')),
                ('id_opr_req', models.IntegerField()),
                ('dta_emissao', models.DateField()),
                ('id_funcionario_canc', models.IntegerField(blank=True, null=True)),
                ('dta_canc', models.DateField(blank=True, null=True)),
                ('hor_canc', models.TimeField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_req',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOrsIco',
            fields=[
                ('id_ors', models.OneToOneField(db_column='id_ors', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmors')),
                ('id_sequencia', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_ors_ico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOrsIte',
            fields=[
                ('id_ors', models.OneToOneField(db_column='id_ors', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmors')),
                ('id_sequencia', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_bruto', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_sequencia_ped', models.IntegerField(blank=True, null=True)),
                ('vlr_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('vlr_desconto', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('per_desconto', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_ors_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOrsTit',
            fields=[
                ('id_ors', models.OneToOneField(db_column='id_ors', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmors')),
                ('id_ors_tit', models.IntegerField()),
                ('num_parcela', models.CharField(blank=True, max_length=20, null=True)),
                ('dias', models.IntegerField()),
                ('dta_vencimento', models.DateField()),
                ('che_banco', models.CharField(blank=True, max_length=10, null=True)),
                ('che_agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('che_conta', models.IntegerField(blank=True, null=True)),
                ('che_numero', models.IntegerField(blank=True, null=True)),
                ('che_emitente', models.CharField(blank=True, max_length=50, null=True)),
                ('vlr_titulo', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_ors_tit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRaaIte',
            fields=[
                ('id_raa', models.OneToOneField(db_column='id_raa', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmraa')),
                ('id_raa_ite', models.IntegerField()),
                ('acao_necessaria', models.CharField(blank=True, max_length=150, null=True)),
                ('dta_prazo', models.DateField(db_comment='Prazo')),
                ('dta_executado', models.DateField(blank=True, db_comment='Executado em', null=True)),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_raa_ite',
                'db_table_comment': 'Relat¾rio de Anßlise de Amostra - Itens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRecIpp',
            fields=[
                ('id_protocolo', models.OneToOneField(db_column='id_protocolo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrec')),
                ('id_sequencia', models.IntegerField()),
                ('id_pedido', models.IntegerField()),
                ('id_item', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_rec_ipp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomIcf',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrom')),
                ('id_rom_icf', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_barra', models.CharField(max_length=50)),
                ('dta_conferencia', models.DateField()),
                ('hor_conferencia', models.TimeField()),
                ('id_opr_etq', models.IntegerField()),
                ('item_conjugado', models.BooleanField(blank=True, db_comment='Quando o valor deste campo for TRUE quer dizer , que este item Ú um item conjugado. Pois existe itens do pedido que tem o CAD_TB_C_ITE_COJ preenchido.', null=True)),
                ('temp_cod_barra_antigo', models.CharField(blank=True, max_length=50, null=True)),
                ('id_pedido', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_icf',
                'db_table_comment': 'Tabela de Itens Conferido do Romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomIte',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrom')),
                ('id_rom_ite', models.IntegerField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('qtde_conferida', models.FloatField(blank=True, null=True)),
                ('qtde_conj', models.FloatField(blank=True, null=True)),
                ('qtde_conj_conf', models.FloatField(blank=True, null=True)),
                ('nome_ite', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ite',
                'db_table_comment': 'Itens do romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomLot',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrom')),
                ('nro_lote_caminhao', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('observacao', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomPed',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrom')),
                ('status', models.IntegerField(blank=True, db_comment='0-Pendente\r\n1-Em Andamento\r\n2-Conferido', null=True)),
                ('qtde_total_item_conj', models.FloatField(blank=True, null=True)),
                ('qtde_total_item_conj_conf', models.FloatField(blank=True, null=True)),
                ('importado', models.BooleanField(blank=True, db_comment='Se true, quer dizer que foi importado do Carregamento do Pedido.', null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ped',
                'db_table_comment': 'Pedidos do Romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRvcIte',
            fields=[
                ('id_rvc', models.OneToOneField(db_column='id_rvc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrvc')),
                ('id_rvc_ite', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rvc_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProTbMVisCli',
            fields=[
                ('id_vis', models.OneToOneField(db_column='id_vis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.protbmvis')),
                ('id_vis_cli', models.IntegerField()),
                ('doc_cnpj_cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('dta_visita', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pro_tb_m_vis_cli',
                'db_table_comment': 'Tabela de clientes da vista ao produtor por semana.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CadTbCCliProCul',
            fields=[
                ('id_cliente', models.OneToOneField(db_column='id_cliente', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cadtbcclipro')),
                ('id_propriedade', models.IntegerField()),
                ('lote', models.CharField(max_length=20)),
                ('idade', models.SmallIntegerField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('produtividade', models.FloatField(blank=True, null=True)),
                ('obs', models.CharField(blank=True, max_length=800, null=True)),
                ('variedade', models.CharField(blank=True, max_length=30, null=True)),
                ('producao_estimada', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cad_tb_c_cli_pro_cul',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCPrqEsp',
            fields=[
                ('id_grupo', models.OneToOneField(db_column='id_grupo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbcprq')),
                ('id_item', models.IntegerField()),
                ('id_prq_esp', models.IntegerField()),
                ('verif_texto', models.CharField(blank=True, max_length=80, null=True)),
                ('verif_minimo', models.CharField(blank=True, max_length=15, null=True)),
                ('vefif_maximo', models.CharField(blank=True, max_length=15, null=True)),
                ('verif_metodo', models.CharField(blank=True, max_length=80, null=True)),
                ('amostragem', models.CharField(blank=True, max_length=80, null=True)),
                ('manuseio_transp', models.CharField(blank=True, max_length=80, null=True)),
                ('armazenamento', models.CharField(blank=True, max_length=80, null=True)),
                ('preservacao', models.CharField(blank=True, max_length=80, null=True)),
                ('id_especificacao', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_prq_esp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstTbMFesAlm',
            fields=[
                ('id_item', models.OneToOneField(db_column='id_item', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.esttbmfes')),
                ('id_empresa', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('data_ult_movimento', models.DateField(blank=True, null=True)),
                ('data_ult_inventario', models.DateField(blank=True, null=True)),
                ('qtde_entrada', models.FloatField()),
                ('qtde_saida', models.FloatField()),
                ('saldo_fisico', models.FloatField()),
            ],
            options={
                'db_table': 'est_tb_m_fes_alm',
                'db_table_comment': 'Ficha de estque sintetica por almoxarifado.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPedIqmIte',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmpediqm')),
                ('id_iqm', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_ped_iqm_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CmpTbMPedNfeIte',
            fields=[
                ('id_pedido', models.OneToOneField(db_column='id_pedido', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.cmptbmpednfe')),
                ('id_fiscal', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cmp_tb_m_ped_nfe_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbCTprIteCom',
            fields=[
                ('id_tpr', models.OneToOneField(db_column='id_tpr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbctprite')),
                ('id_item', models.CharField(max_length=20)),
                ('id_item_comp', models.CharField(max_length=20)),
                ('qtde', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_c_tpr_ite_com',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOrcIteCom',
            fields=[
                ('id_orc', models.OneToOneField(db_column='id_orc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmorcite')),
                ('grupo', models.CharField(max_length=5)),
                ('id_com', models.IntegerField()),
                ('id_item', models.CharField(max_length=20)),
                ('coeficiente', models.FloatField(blank=True, null=True)),
                ('vlr_unitario', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('vlr_total', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_orc_ite_com',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtcTbMOrcIteMed',
            fields=[
                ('id_orc', models.OneToOneField(db_column='id_orc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.ctctbmorcite')),
                ('grupo', models.CharField(max_length=5)),
                ('id_med', models.IntegerField()),
                ('id_item', models.CharField(max_length=20)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('dta_medicao', models.DateField(blank=True, null=True)),
                ('id_responsavel', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctc_tb_m_orc_ite_med',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMIqmIteAna',
            fields=[
                ('id_iqm', models.OneToOneField(db_column='id_iqm', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmiqmite')),
                ('id_sequencia', models.IntegerField()),
                ('num_plano_acao', models.IntegerField()),
                ('dta_emissao', models.DateField()),
                ('especificado', models.CharField(blank=True, max_length=300, null=True)),
                ('encontrado', models.CharField(blank=True, max_length=300, null=True)),
                ('observacao', models.CharField(blank=True, max_length=300, null=True)),
                ('qtde_nc', models.FloatField(db_comment='Este campo deve ter o mesmo conte·do do campo qtde_nc do produto da tabela EST_TB_M_NFE_S.')),
                ('qtde_total', models.FloatField(db_comment='Este campo terß o mesmo valor do campo qtde do produto da tabela EST_TB_M_NFE_I.')),
                ('perc_nc', models.FloatField(db_comment='Este campo terß o mesmo valor do campo QTDE_NC da tabela FAT_TB_M_NFE_ITE_IQM')),
                ('qtde_devolvida', models.FloatField(db_comment='Este campo, o pr¾prio usußrio irß alimentar e seu valor nunca poderß ser maior que o campo QTDE_TOTAL.')),
                ('causa_do_problema_forn', models.CharField(blank=True, max_length=300, null=True)),
                ('resolucao_problema_forn', models.CharField(blank=True, max_length=300, null=True)),
                ('responsavel_forn', models.CharField(blank=True, max_length=80, null=True)),
                ('cargo_resp_forn', models.CharField(blank=True, max_length=60, null=True)),
                ('data_inf_forn', models.DateField(blank=True, null=True)),
                ('acao_tomada_analise', models.IntegerField(blank=True, db_comment='A aþÒo tomada pelo fornecedor\nfoi considera?\n\n0 - NÒo\n1 - Sim', null=True)),
                ('nao_conform_analise', models.IntegerField(blank=True, db_comment='A nÒo conformidade Ú reincidente?\n0 - NÒo\n1 - Sim', null=True)),
                ('requer_nova_acao_analise', models.IntegerField(blank=True, db_comment='Requer nova aþÒo?\n0 - NÒo\n1 - Sim', null=True)),
                ('comentarios_analise', models.CharField(blank=True, max_length=300, null=True)),
                ('data_analise', models.DateField(blank=True, null=True)),
                ('cod_lme', models.CharField(blank=True, max_length=20, null=True)),
                ('rev_lme', models.CharField(blank=True, max_length=5, null=True)),
                ('situacao_analise', models.IntegerField(blank=True, db_comment='0-ABERTO\n1-FECHADO', null=True)),
                ('id_for_rp', models.IntegerField(blank=True, db_comment='Este campo busca os representantes do fornecedor que estß informado no IQM.', null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_iqm_ite_ana',
                'db_table_comment': 'Plano de aþÒo do Fornecedor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMNfeDevIte',
            fields=[
                ('id_fiscal', models.OneToOneField(db_column='id_fiscal', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmnfedev')),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_fiscal_dev', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('qtde_sld_orig', models.FloatField(blank=True, db_comment='Neste campo ficarß o saldo da qtde do Item da Nota Fiscal de Origem.', null=True)),
                ('id_st_icm', models.CharField(blank=True, max_length=3, null=True)),
                ('origem_mercadoria', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_nfe_dev_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMPcaPedIte',
            fields=[
                ('id_pedido', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('id_carregamento', models.OneToOneField(db_column='id_carregamento', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmpcaped')),
                ('pcp_obs_item', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_pca_ped_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMRomNfeIte',
            fields=[
                ('id_romaneio', models.OneToOneField(db_column='id_romaneio', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmromnfe')),
                ('id_fiscal', models.IntegerField()),
                ('id_item', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('id_sequencia', models.IntegerField()),
                ('peso_liquido', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_rom_nfe_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FatTbMXmlIteLot',
            fields=[
                ('id_controle', models.OneToOneField(db_column='id_controle', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fattbmxmlite')),
                ('id_sequencia', models.IntegerField()),
                ('num_lote', models.CharField(max_length=15)),
                ('qtde', models.FloatField()),
                ('dta_vencimento', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fat_tb_m_xml_ite_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinTbMConCxbAux',
            fields=[
                ('id_conciliacao', models.OneToOneField(db_column='id_conciliacao', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.fintbmconcxb')),
                ('id_controle', models.IntegerField()),
                ('id_plano', models.CharField(blank=True, max_length=11, null=True)),
                ('id_conta', models.IntegerField(blank=True, null=True)),
                ('id_tipo_financeiro', models.IntegerField(blank=True, null=True)),
                ('vlr_lancamento', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('id_titulo', models.IntegerField(blank=True, db_comment='Identificador do titulo no contas a pagar que foi gerado na conciliacao.', null=True)),
                ('historico', models.CharField(blank=True, max_length=100, null=True)),
                ('num_doc', models.IntegerField(blank=True, null=True)),
                ('id_cxb', models.IntegerField(db_comment='Este campo faz relaþÒo com a tabela fin_tb_m_con_cxb.')),
                ('dta_movimento', models.DateField(blank=True, null=True)),
                ('tipo', models.IntegerField(blank=True, db_comment='0 - SugestÒo \n1 - Novo movimento', null=True)),
                ('id_tipo_financeiro_transf', models.IntegerField(blank=True, null=True)),
                ('id_emitente', models.IntegerField(blank=True, null=True)),
                ('tipo_titulo', models.IntegerField(blank=True, db_comment='0 - Movimento CTA; 1 - Contas a Receber;2 - Contas a Pagar', null=True)),
            ],
            options={
                'db_table': 'fin_tb_m_con_cxb_aux',
                'db_table_comment': 'Tabela Auxiliar do Arquivo de ConciliaþÒo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCFpiFtiIte',
            fields=[
                ('id_fpi', models.OneToOneField(db_column='id_fpi', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbcfpifti')),
                ('id_fpi_fti', models.IntegerField()),
                ('id_fpi_fti_ite', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.IntegerField()),
                ('id_busca_item', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'pcp_tb_c_fpi_fti_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCLmeDpg',
            fields=[
                ('id_lme', models.OneToOneField(db_column='id_lme', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbclmedoc')),
                ('id_lme_d', models.IntegerField()),
                ('id_lme_dp', models.IntegerField()),
                ('data_cadastro', models.DateField()),
                ('nome_formulario', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_lme_dpg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCLmeDrp',
            fields=[
                ('id_lme', models.OneToOneField(db_column='id_lme', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbclmedoc')),
                ('id_lme_d', models.IntegerField()),
                ('id_lme_dr', models.IntegerField()),
                ('data', models.DateField()),
                ('situacao', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_lme_drp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbCLmeDrv',
            fields=[
                ('id_lme', models.OneToOneField(db_column='id_lme', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbclmedoc')),
                ('id_lme_d', models.IntegerField()),
                ('id_lme_dv', models.IntegerField()),
                ('data_revisao', models.DateField()),
                ('revisao', models.IntegerField()),
                ('historico_alteracao', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_c_lme_drv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcrItePcn',
            fields=[
                ('id_acr', models.OneToOneField(db_column='id_acr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmacrite')),
                ('id_acr_p', models.IntegerField()),
                ('id_acr_pn', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_acr_ite_pcn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcrItePcr',
            fields=[
                ('id_acr', models.OneToOneField(db_column='id_acr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmacrite')),
                ('id_acr_p', models.IntegerField()),
                ('id_acr_ph', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_acr_ite_pcr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcrItePdt',
            fields=[
                ('id_acr', models.OneToOneField(db_column='id_acr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmacrite')),
                ('id_acr_p', models.IntegerField()),
                ('id_tdf', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_acr_ite_pdt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMAcrItePrc',
            fields=[
                ('id_acr', models.OneToOneField(db_column='id_acr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmacrite')),
                ('id_acr_p', models.IntegerField()),
                ('id_acr_pr', models.IntegerField()),
                ('evento_ocorrido_reg_acao', models.CharField(blank=True, max_length=200, null=True)),
                ('situacao', models.IntegerField(blank=True, db_comment='0 - Em aberto\n1 - ConcluÝdo', null=True)),
                ('data_reg_acao', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_acr_ite_prc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMCrpIteBxi',
            fields=[
                ('id_crp', models.OneToOneField(db_column='id_crp', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmcrpite')),
                ('id_item', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('id_crp_bxi', models.IntegerField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('qtde', models.FloatField()),
                ('id_opb', models.IntegerField()),
                ('id_opb_ope', models.IntegerField()),
                ('id_opb_ibe', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('dta_baixa', models.DateField()),
            ],
            options={
                'db_table': 'pcp_tb_m_crp_ite_bxi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbOpeIbe',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopbope')),
                ('id_opb_ope', models.IntegerField()),
                ('id_opb_ibe', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('num_lote_crp', models.CharField(blank=True, max_length=15, null=True)),
                ('num_lote_item', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_ope_ibe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOpbOpeOpr',
            fields=[
                ('id_opb', models.OneToOneField(db_column='id_opb', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopbope')),
                ('id_opb_ope', models.IntegerField()),
                ('dta_utilizado', models.DateField()),
                ('hor_utilizado', models.TimeField()),
            ],
            options={
                'db_table': 'pcp_tb_m_opb_ope_opr',
                'db_table_comment': 'O.P.Rs que utilizaram este bloco.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOppSop',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmopropp')),
                ('id_opr_opp', models.IntegerField()),
                ('id_opr_sop', models.IntegerField()),
                ('id_opr_opp_ext', models.IntegerField(blank=True, null=True)),
                ('dta_utilizado', models.DateField()),
                ('hor_utilizado', models.TimeField()),
                ('qtd_utilizado', models.FloatField()),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_opp_sop',
                'db_table_comment': 'Saldo utilizado por outras O.P.Rs.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOpsIps',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmoprops')),
                ('id_opr_ops', models.IntegerField()),
                ('id_opr_ops_ips', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_ops_ips',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprOpsLot',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmoprops')),
                ('id_opr_ops', models.IntegerField()),
                ('id_opr_lot', models.IntegerField()),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('num_lote', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_ops_lot',
                'db_table_comment': 'Lotes da O.P.S',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMOprReqIte',
            fields=[
                ('id_opr', models.OneToOneField(db_column='id_opr', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmoprreq')),
                ('id_opr_req', models.IntegerField()),
                ('id_opr_req_ite', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('qtde', models.FloatField()),
                ('qtde_atendida', models.FloatField(blank=True, null=True)),
                ('dta_canc', models.DateField(blank=True, null=True)),
                ('hor_canc', models.TimeField(blank=True, null=True)),
                ('id_funcionario_canc', models.IntegerField(blank=True, null=True)),
                ('situacao', models.IntegerField(blank=True, db_comment='1 - Em aberto\r\n2 - Atendido parcial\r\n3 - Atendido total', null=True)),
                ('id_busca_item', models.CharField(blank=True, max_length=30, null=True)),
                ('num_lote', models.CharField(blank=True, max_length=15, null=True)),
                ('gerado_automatico', models.BooleanField(blank=True, null=True)),
                ('cancelado', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_opr_req_ite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomPedIcf',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmromped')),
                ('id_pedido', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('cod_barra', models.CharField(max_length=50)),
                ('dta_conferencia', models.DateField()),
                ('hor_conferencia', models.TimeField()),
                ('id_opr_etq', models.IntegerField()),
                ('item_conjugado', models.BooleanField(blank=True, db_comment='Quando o valor deste campo for TRUE quer dizer , que este item Ú um item conjugado. Pois existe itens do pedido que tem o CAD_TB_C_ITE_COJ preenchido.', null=True)),
                ('temp_cod_barra_antigo', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ped_icf',
                'db_table_comment': 'Tabela de Itens Conferido do Pedido do Romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomPedIcj',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmromped')),
                ('id_pedido', models.IntegerField()),
                ('id_sequencia', models.IntegerField()),
                ('id_cor', models.IntegerField()),
                ('id_tamanho', models.IntegerField()),
                ('dta_conferencia', models.DateField()),
                ('hor_conferencia', models.TimeField()),
                ('id_ped_ite', models.IntegerField(db_comment='Este campo se refere ao mesmo campo da tabela PCP_TB_M_ROM_PED_ITE')),
                ('qtde_a_inserir', models.FloatField(blank=True, null=True)),
                ('qtde_conf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ped_icj',
                'db_table_comment': 'Tabela de Itens Conferido do Pedido do Romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRomPedIte',
            fields=[
                ('id_rom', models.OneToOneField(db_column='id_rom', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmromped')),
                ('id_pedido', models.IntegerField()),
                ('id_ped_ite', models.IntegerField()),
                ('id_cor', models.IntegerField(blank=True, null=True)),
                ('id_tamanho', models.IntegerField(blank=True, null=True)),
                ('qtde', models.FloatField(blank=True, null=True)),
                ('qtde_conferida', models.FloatField(blank=True, null=True)),
                ('qtde_conj', models.FloatField(blank=True, null=True)),
                ('qtde_conj_conf', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pcp_tb_m_rom_ped_ite',
                'db_table_comment': 'Itens dos pedidos no romaneio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRvcIteSet',
            fields=[
                ('id_rvc', models.OneToOneField(db_column='id_rvc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrvcite')),
                ('id_rvc_ite', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_rvc_ite_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcpTbMRvcIteSetDef',
            fields=[
                ('id_rvc', models.OneToOneField(db_column='id_rvc', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='produtos.pcptbmrvciteset')),
                ('id_rvc_ite', models.IntegerField()),
                ('id_setor', models.IntegerField()),
            ],
            options={
                'db_table': 'pcp_tb_m_rvc_ite_set_def',
                'managed': False,
            },
        ),
    ]
